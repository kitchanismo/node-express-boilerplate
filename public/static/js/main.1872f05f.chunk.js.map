{"version":3,"sources":["utils/helper.ts","providers/GlobalProvider.tsx","components/common/MyAlertDialog/index.tsx","utils/http.ts","services/authService.tsx","components/common/MyAvatar/index.tsx","services/userService.tsx","components/common/MyDrawer/index.tsx","components/common/MyNav/index.tsx","components/common/MyAlert/index.tsx","components/pages/Dashboard/index.tsx","components/common/MyCard/index.tsx","components/pages/Employees/EmployeeCard/index.tsx","components/common/MySearchField/index.tsx","providers/EmployeeProvider.tsx","services/employeeService.tsx","components/common/MySkeletonCards/index.tsx","components/common/MyChips/index.tsx","components/pages/Employees/index.tsx","components/common/MySkeletonCard/index.tsx","components/common/MyMiniCards/index.tsx","components/common/MySkeletonMiniCards/index.tsx","components/pages/Employees/ViewEmployee/index.tsx","validators/saveEmployeeValidator.tsx","components/common/MyForm/index.tsx","services/imageService.tsx","services/branchService.tsx","providers/BranchProvider.tsx","components/pages/Employees/NewEmployee/index.tsx","components/pages/Employees/EditEmployee/index.tsx","services/clientService.tsx","components/pages/Clients/ClientCard/index.tsx","providers/ClientProvider.tsx","components/pages/Clients/index.tsx","components/pages/Clients/ViewClient/index.tsx","validators/saveProfileValidator.tsx","components/pages/Clients/NewClient/ClientStepOne.tsx","validators/clientStepTwoValidator.tsx","components/pages/Clients/NewClient/ClientStepTwo.tsx","components/common/MyStepper/index.tsx","validators/clientStepThreeValidator.tsx","components/pages/Clients/NewClient/ClientStepThree.tsx","components/pages/Clients/NewClient/index.tsx","validators/signInValidator.tsx","assets/revenue.svg","components/pages/Auth/SignIn/index.tsx","components/common/MyAuthRoute/index.tsx","components/common/MyGuestRoute/index.tsx","validators/clientTransactionValidator.tsx","components/pages/Transactions/EncodeTransaction/TransactionForm.tsx","services/paymentService.tsx","components/pages/Transactions/EncodeTransaction/index.tsx","components/pages/Settings/General/index.tsx","components/pages/Clients/EditClient/index.tsx","providers/PaymentProvider.tsx","components/pages/Payments/PaymentCard/index.tsx","components/pages/Payments/index.tsx","components/pages/Payments/PaymentView/index.tsx","components/pages/Branches/BranchCard/index.tsx","components/pages/Branches/index.tsx","validators/saveBranchValidator.tsx","components/pages/Branches/NewBranch/index.tsx","components/pages/Branches/EditBranch/index.tsx","providers/CommissionProvider.tsx","components/pages/Commissions/CommissionCard/index.tsx","components/pages/Commissions/index.tsx","services/commissionService.tsx","components/pages/Transactions/ReleaseTransaction/ReleaseCard/index.tsx","components/pages/Transactions/ReleaseTransaction/index.tsx","assets/404.svg","components/common/NotFound/index.tsx","components/pages/Users/UserCard/index.tsx","providers/UserProvider.tsx","components/pages/Users/index.tsx","validators/saveUserValidator.tsx","components/pages/Users/NewUser/index.tsx","validators/editUserValidator.tsx","components/pages/Users/EditUser/index.tsx","components/pages/Settings/Account/index.tsx","components/layout/index.tsx","assets/wave.svg","App.tsx","index.tsx"],"names":["lettersOnly","label","Joi","string","required","regex","error","errors","forEach","err","code","message","notNull","not","messages","getDecodeToken","token","localStorage","getItem","jwtDecode","getCurrentUser","data","saveToken","access_token","setItem","calculateAge","date","birthdate","Date","toLocaleDateString","ageDif","now","getTime","ageDate","Math","abs","getUTCFullYear","toMoney","num","toLocaleString","GlobalContext","createContext","reducer","state","action","type","alert","payload","title","isLoading","isDark","currentUser","GlobalProvider","props","useReducer","produce","dispatch","useEffect","console","log","theme","createMuiTheme","overrides","MuiButton","root","borderRadius","paddingTop","paddingBottom","MuiCssBaseline","body","backgroundColor","typography","fontFamily","join","palette","primary","main","secondary","ThemeProvider","Provider","value","children","MyAlertDialog","open","text","description","onAgree","onDisagree","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","style","marginRight","axios","interceptors","request","use","config","baseURL","apiUrlDev","headers","Authorization","withCredentials","response","Error","window","location","href","createAuthRefreshInterceptor","failedRequest","get","then","Promise","resolve","catch","status","removeItem","statusCodes","pauseInstanceWhileRefreshing","post","put","delete","create","onSignIn","username","password","http","useStyles","width","height","makeStyles","createStyles","avatar","MyAvatar","src","styles","IconButton","Avatar","className","aria-label","saveUser","user","updateUser","updateAccount","getMe","background","paper","nested","paddingLeft","spacing","close","paddingRight","logout","marginTop","MyDrawer","history","useHistory","React","useContext","useState","active","setActive","setUser","adminMenus","name","subMenus","path","icon","cashierMenus","renderSubMenus","subMenu","List","component","disablePadding","ListItem","onToggle","replace","button","ListItemIcon","ListItemText","renderMenus","menu","Collapse","in","timeout","unmountOnExit","map","alertDialog","setAlertDialog","Drawer","anchor","isActive","ModalProps","onBackdropClick","container","justify","edge","alignItems","direction","item","xs","image_url","Typography","variant","lastname","firstname","middlename","branch","role","Divider","marginLeft","Nav","setIsActive","HideOnScroll","trigger","useScrollTrigger","target","undefined","Slide","appear","AppBar","Toolbar","Grid","sm","md","LinearProgress","hidden","MyAlert","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","Dashboard","cardHeader","display","minWidth","justifyContent","titleHeader","MyCard","Card","EmployeeCard","employee","onArchive","CardContent","position","Chip","size","push","MySearchField","onSearch","setValue","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","labelWidth","onKeyPress","event","key","call","onChange","endAdornment","InputAdornment","branches","positions","employees","pages","total","filter","EmployeeContext","EmployeeProvider","saveEmployee","a","getEmployees","page","search","category","items","profile","count","getEmployee","clients","client","updateEmployee","MySkeletonCards","card","Paper","marginBottom","Skeleton","animation","MyChips","chips","onChipSelected","padding","WebkitOverflowScrolling","overflowX","flexWrap","chip","Badge","invisible","badgeContent","renderChips","fab","bottom","right","Employees","globalDispatch","employeeState","employeeDispatch","scroll","Scroll","animateScroll","useLocation","setPage","setChip","qs","parse","currentPage","onLoad","scrollToTop","duration","length","setEmployee","handleSelectedEmployee","Pagination","siblingCount","e","Fab","MySkeletonCard","headerSelected","grey","header","MyMiniCards","onSelected","selectedItem","setSelectedItem","renderCards","subtitle","CardHeader","subheader","index","minHeight","MySkeletonMiniCards","ViewEmployee","params","useParams","setIsLoading","detail","handleSelected","gender","civil","contact","address","goBack","saveEmployeeValidator","min","max","MyButtonMemo","isDisable","memo","disabled","startIcon","CircularProgress","top","left","MyForm","setData","setIsDisable","radioButtonDefaultValue","selectedValue","setSelectedValue","setErrors","onChangeRadio","onSubmit","preventDefault","newData","FormData","entries","hasErrors","_data","object","validator","options","abortEarly","allowUnknown","validate","_errors","details","onValidate","pointerEvents","myInput","input","TextField","defaultValue","multiline","isMultiline","helperText","myControlledInput","myInputPassword","onTogglePassword","isVisible","FormHelperText","mySelect","select","Select","labelId","option","MenuItem","subLabel","myDateTimePicker","utils","DateFnsUtils","inputVariant","disableToolbar","format","margin","KeyboardButtonProps","myButton","myRadio","Radio","checked","postImage","image","cb","formData","append","url","getBranches","saveBranch","updateBranch","BranchContext","BranchProvider","NewEmployee","branchState","branchDispatch","imageFile","setImageFile","formProps","accept","files","EditEmployee","plans","price","getClient","saveClient","transaction","updateClient","getClients","getLapsedClients","getAmountToPay","payment_mode","plan","payment_period","years_to_pay","hasCommission","balance","ceil","computeTotalCountPaid","amount","totalCountPaid","period","computeTotalCountToPay","ClientCard","onArchieve","next_payment","toDateString","ClientContext","onReloadPlans","ClientProvider","Clients","clientState","clientDispatch","setClient","handleSelectedClient","ViewClient","created_at","saveProfileValidator","ClientStepOne","setProfile","onNext","clientStepTwoValidator","branch_manager","agency_manager","supervisor","sales_agent","optional","insured_employee","ClientStepTwo","commissioner","setCommissioner","onBack","setBranch","employeeOptions","branchOptions","Map","has","set","handleBranch","b","find","instructions","default","MyStepper","steps","activeStep","classes","Stepper","alternativeLabel","Step","StepLabel","clientStepThreeValidator","number","or_number","when","is","valid","otherwise","ClientStepThree","planOptions","setPlanOptions","NewClient","setEmployees","stepper","setActiveStep","handleNext","prevActiveStep","handleBack","handleReset","useStepper","onNextOne","onNextTwo","onNextThree","getBranchId","employeeId","signInValidator","formContainer","flexDirection","SignIn","zIndex","logo","alt","AuthRoute","Component","render","isAdmin","rest","to","pathname","from","clientTransactionValidator","positive","CommissionersForm","setTransaction","labelMode","savePayments","payment","Transaction","globalState","getCommissioner","positionId","branchId","handleSubmit","Settings","FormControlLabel","control","Switch","inputProps","EditClient","PaymentContext","payments","PaymentProvider","PaymentCard","fullname","PaymentHistory","paymentState","paymentDispatch","payment_id","PaymentView","setPayment","Link","commissions","commission","BranchCard","Branches","saveBranchValidator","NewBranch","EditBranch","CommissionContext","CommissionProvider","CommissionCard","is_release","Commissions","commissionState","commissionDispatch","ReleaseCard","onRelease","ReleaseTransaction","com","employee_id","branch_name","position_name","selectedCommission","setSelectedCommission","handleSelectedCommission","NotFound","notFound","UserCard","UserContext","users","UserProvider","Users","userState","userDispatch","getUsers","handleSelectedUser","saveUserValidator","alphanum","NewUser","editUserValidator","EditUser","AccountSettings","new_password","cashierValidator","Layout","Container","maxWidth","GeneralSettings","exact","App","CssBaseline","wave","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1872f05f.chunk.js","sourcesContent":["import Joi from 'joi'\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nexport const lettersOnly = (label: string) => {\r\n  return Joi.string()\r\n    .required()\r\n    .label(label)\r\n    .regex(/^[A-Za-z\\s]*$/)\r\n    .error((errors: any) => {\r\n      errors.forEach((err: any) => {\r\n        switch (err.code) {\r\n          case 'string.empty':\r\n            err.message = `\"${label}\" is required`\r\n            break\r\n          case 'string.pattern.base':\r\n            err.message = `\"${label}\" must not have a number or special character`\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      })\r\n      return errors\r\n    })\r\n}\r\n\r\nexport const alphaNumeric = (label: string) => {\r\n  return Joi.string()\r\n    .required()\r\n    .label(label)\r\n    .alphanum()\r\n    .error((errors: any) => {\r\n      errors.forEach((err: any) => {\r\n        if (err.code === 'string.empty') {\r\n          err.message = `\"${label}\" is required`\r\n        }\r\n      })\r\n      return errors\r\n    })\r\n}\r\n\r\nexport const notNull = (label: string) => {\r\n  return Joi.required()\r\n    .not(null)\r\n    .not('')\r\n    .messages({\r\n      'any.invalid': `\"${label}\" is required`,\r\n      'any.required': `\"${label}\" is required`,\r\n    })\r\n}\r\n\r\nexport const nameCapitalize = (name: string) =>\r\n  name.charAt(0).toUpperCase() + name.slice(1) || ''\r\n\r\nexport const getDecodeToken: any = () => {\r\n  const token = localStorage.getItem('access_token')\r\n\r\n  try {\r\n    if (token) {\r\n      return jwtDecode(token)\r\n    }\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getCurrentUser = () =>\r\n  getDecodeToken() ? { ...getDecodeToken().data } : null\r\n\r\nexport const saveToken = (access_token: string) => {\r\n  localStorage.setItem('access_token', access_token)\r\n}\r\n\r\nexport const calculateAge = (date: any) => {\r\n  if (!date) return 0\r\n  const birthdate = new Date(new Date(date).toLocaleDateString())\r\n\r\n  const ageDif = Date.now() - birthdate.getTime()\r\n  const ageDate = new Date(ageDif)\r\n  return Math.abs(ageDate.getUTCFullYear() - 1970)\r\n}\r\n\r\nexport const getNumberWithOrdinal = (num: number) => {\r\n  var s = ['th', 'st', 'nd', 'rd'],\r\n    v = num % 100\r\n  return num + (s[(v - 20) % 10] || s[v] || s[0])\r\n}\r\n\r\nexport const capitalize = (s: string) => {\r\n  if (typeof s !== 'string') return ''\r\n  return s.charAt(0).toUpperCase()\r\n}\r\n\r\nexport const toMoney = (num: number) => {\r\n  return '₱ ' + num.toLocaleString()\r\n}\r\n","import { ThemeProvider } from '@material-ui/core/styles'\r\nimport { createContext, Dispatch, useEffect, useReducer } from 'react'\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { produce } from 'immer'\r\nimport { getCurrentUser } from 'utils/helper'\r\nimport User from 'models/user'\r\n\r\nexport const GlobalContext = createContext<\r\n  [state: GlobalState, dispatch: Dispatch<GlobalAction>] | null\r\n>(null)\r\n\r\nexport interface AlertProps {\r\n  message: string\r\n  type: 'success' | 'info' | 'warning' | 'error' | undefined\r\n}\r\n\r\ninterface GlobalState {\r\n  alert: AlertProps | null\r\n  title: string\r\n  isDark: boolean\r\n  isLoading: boolean\r\n  currentUser: User | null\r\n}\r\n\r\ntype GlobalAction =\r\n  | { type: 'HIDE_ALERT' | 'TOGGLE_THEME' }\r\n  | { type: 'SET_ALERT'; payload: AlertProps | null }\r\n  | { type: 'SET_TITLE'; payload: string }\r\n  | { type: 'SET_IS_LOADING'; payload: boolean }\r\n  | { type: 'SET_CURRENT_USER'; payload: User | null }\r\n  | { type: 'SET_THEME'; payload: boolean }\r\n\r\nconst reducer = (state: GlobalState, action: GlobalAction) => {\r\n  switch (action.type) {\r\n    case 'SET_ALERT':\r\n      state.alert = action.payload\r\n      break\r\n    case 'HIDE_ALERT':\r\n      state.alert = null\r\n      break\r\n    case 'SET_TITLE':\r\n      state.title = action.payload\r\n      break\r\n    case 'SET_IS_LOADING':\r\n      state.isLoading = action.payload\r\n      break\r\n    case 'TOGGLE_THEME':\r\n      state.isDark = !state.isDark\r\n      break\r\n    case 'SET_THEME':\r\n      state.isDark = action.payload\r\n      break\r\n    case 'SET_CURRENT_USER':\r\n      state.currentUser = action.payload\r\n      break\r\n    default:\r\n      return state\r\n  }\r\n  return state\r\n}\r\n\r\nconst GlobalProvider: React.FC = (props) => {\r\n  const [state, dispatch] = useReducer(produce(reducer), {\r\n    alert: null,\r\n    title: 'PSY INSURANCE',\r\n    isDark: false,\r\n    isLoading: false,\r\n    currentUser: null,\r\n  })\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'SET_CURRENT_USER', payload: getCurrentUser() })\r\n    console.log('hit')\r\n  }, [])\r\n\r\n  const theme = createMuiTheme({\r\n    overrides: {\r\n      MuiButton: {\r\n        root: {\r\n          borderRadius: 30,\r\n          paddingTop: 15,\r\n          paddingBottom: 15,\r\n        },\r\n      },\r\n      MuiCssBaseline: {\r\n        '@global': {\r\n          body: {\r\n            backgroundColor: state.isDark ? '#303030' : '#fafafa',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily: ['Arial'].join(','),\r\n    },\r\n\r\n    palette: {\r\n      type: state.isDark ? 'dark' : 'light',\r\n      primary: {\r\n        main: '#9C27B0',\r\n      },\r\n      secondary: {\r\n        main: '#E91E63',\r\n      },\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    const theme = localStorage.getItem('theme') || 'light'\r\n    dispatch({ type: 'SET_THEME', payload: theme === 'dark' ? true : false })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalContext.Provider value={[state, dispatch]}>\r\n          {props.children}\r\n        </GlobalContext.Provider>\r\n      </ThemeProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GlobalProvider\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport { ToggleCheckBoxOutlineBlank } from 'material-ui/svg-icons'\r\n\r\nexport interface AlertDataProps {\r\n  open?: boolean\r\n  text?: string\r\n  description?: string\r\n}\r\n\r\ninterface MyAlertDialogProps {\r\n  data: AlertDataProps\r\n  onAgree?: () => void\r\n  onDisagree?: () => void\r\n}\r\n\r\nexport const MyAlertDialog: React.FC<MyAlertDialogProps> = ({\r\n  data: { open, text, description },\r\n  onAgree,\r\n  onDisagree,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {open && (\r\n        <Dialog\r\n          open={open || false}\r\n          onClose={onDisagree}\r\n          aria-labelledby='alert-dialog-title'\r\n          aria-describedby='alert-dialog-description'\r\n        >\r\n          <DialogTitle id='alert-dialog-title'>{text}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id='alert-dialog-description'>\r\n              {description}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onDisagree} color='default'>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              style={{ marginRight: 10 }}\r\n              onClick={onAgree}\r\n              color='secondary'\r\n            >\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyAlertDialog\r\n","import axios, { AxiosError } from 'axios'\r\nimport { apiUrlProd, apiUrlDev, apiUrlMobile } from 'configs/index.json'\r\nimport createAuthRefreshInterceptor from 'axios-auth-refresh'\r\n\r\n//intercept requests\r\naxios.interceptors.request.use((config) => {\r\n  config.baseURL =\r\n    process.env.NODE_ENV === 'development' ? apiUrlDev : apiUrlDev\r\n\r\n  const access_token = localStorage.getItem('access_token')\r\n\r\n  if (access_token) {\r\n    config.headers.Authorization = `Bearer ${access_token}`\r\n  }\r\n  config.withCredentials = true\r\n\r\n  return config\r\n})\r\n\r\naxios.interceptors.response.use(\r\n  (response) => response,\r\n  (error: AxiosError) => {\r\n    if (\r\n      error.message === 'Network Error' ||\r\n      error.message === 'Internal Server Error'\r\n    ) {\r\n      throw Error(error.message)\r\n    }\r\n\r\n    if (error?.code === '406') {\r\n      window.location.href = '/signin'\r\n    }\r\n\r\n    throw error\r\n  }\r\n)\r\n\r\ncreateAuthRefreshInterceptor(\r\n  axios,\r\n  (failedRequest) => {\r\n    return axios\r\n      .get('/auth/refresh-token')\r\n      .then(({ data }) => {\r\n        localStorage.setItem('access_token', data.access_token)\r\n        return Promise.resolve()\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.status === 406) {\r\n          localStorage.removeItem('access_token')\r\n          window.location.href = '/signin'\r\n        }\r\n      })\r\n  },\r\n  {\r\n    statusCodes: [403],\r\n    pauseInstanceWhileRefreshing: true,\r\n  }\r\n)\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  axios: axios.create(),\r\n}\r\n","import User from 'models/user'\r\nimport http from 'utils/http'\r\n\r\nexport const onSignIn = ({ username, password }: User) => {\r\n  return http\r\n    .post('/auth/signin', { username, password })\r\n    .then(({ data }) => data.access_token)\r\n}\r\n\r\nexport const onSignout = () => {\r\n  return http.get('/auth/signout').then(({ data }) => data)\r\n}\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nexport interface MyAvatarProps {\r\n  onClick?: () => void\r\n  text?: string\r\n  width?: number\r\n  height?: number\r\n  children?: () => JSX.Element\r\n  src?: string\r\n}\r\n\r\nconst MyAvatar: React.SFC<MyAvatarProps> = ({\r\n  onClick,\r\n  src,\r\n  width,\r\n  height,\r\n  children,\r\n}) => {\r\n  const styles = useStyles({ width, height })()\r\n  return (\r\n    <IconButton onClick={onClick}>\r\n      <Avatar className={styles.avatar} src={src} aria-label='clients'>\r\n        {children?.()}\r\n      </Avatar>\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nconst useStyles = ({ width, height }: { height?: number; width?: number }) =>\r\n  makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      avatar: {\r\n        width: width || 100,\r\n        height: height || 100,\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n    })\r\n  )\r\n\r\nexport default MyAvatar\r\n","import User from 'models/user'\r\nimport http from 'utils/http'\r\n\r\nexport const getUsers = ({\r\n  page,\r\n  search,\r\n}: {\r\n  page?: number\r\n  search?: string\r\n}) => {\r\n  return http\r\n    .get(`/users?page=${page || ''}&search=${search || ''}`)\r\n    .then(({ data }) => ({\r\n      users: data.items,\r\n      pages: data.pages,\r\n      total: data.count,\r\n    }))\r\n}\r\n\r\nexport const getUser = (id: number) => {\r\n  return http\r\n    .get('/users/' + id)\r\n    .then(({ data }) => ({ ...data, branch: data.branch?.id }))\r\n}\r\n\r\nexport const saveUser = (user: User) => {\r\n  return http.post('/users', user).then(({ data }) => data)\r\n}\r\n\r\nexport const updateUser = (user: User) => {\r\n  return http.put('/users/' + user.id, user).then(({ data }) => data)\r\n}\r\n\r\nexport const updateAccount = (user: User) => {\r\n  return http.put('/users/account/' + user.id, user).then(({ data }) => data)\r\n}\r\n\r\nexport const archiveUser = (id: number) => {\r\n  return http.delete('/users/' + id).then(({ data }) => data)\r\n}\r\n\r\nexport const getMe = () => {\r\n  return http.get('/users/me').then(({ data }) => data)\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport List from '@material-ui/core/List'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport EmployeesIcon from '@material-ui/icons/People'\r\nimport UsersIcon from '@material-ui/icons/Accessibility'\r\nimport BranchIcon from '@material-ui/icons/Business'\r\nimport ClientIcon from '@material-ui/icons/SupervisedUserCircle'\r\nimport PaymentIcon from '@material-ui/icons/Receipt'\r\nimport CommissionIcon from '@material-ui/icons/Description'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport TransactionIcon from '@material-ui/icons/Payment'\r\nimport ReleaseIcon from '@material-ui/icons/MonetizationOn'\r\nimport FaceIcon from '@material-ui/icons/Face'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport Grid from '@material-ui/core/Grid/Grid'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MyAlertDialog, { AlertDataProps } from '../MyAlertDialog'\r\nimport { onSignout } from 'services/authService'\r\nimport MyAvatar from '../MyAvatar'\r\nimport { getMe } from 'services/userService'\r\nimport User from 'models/user'\r\n\r\nexport interface MyDrawerProps {\r\n  isActive: boolean\r\n  onToggle: Function\r\n}\r\n\r\ninterface SubMenuProps {\r\n  name: string\r\n  path: string\r\n  icon: JSX.Element\r\n}\r\n\r\ninterface MenuProps {\r\n  name: string\r\n  subMenus: SubMenuProps[]\r\n}\r\n\r\nconst MyDrawer: React.FC<MyDrawerProps> = (props) => {\r\n  const styles = useStyles()\r\n\r\n  const history = useHistory()\r\n\r\n  const [state, dispatch] = React.useContext(GlobalContext)!\r\n\r\n  const [active, setActive] = useState('')\r\n\r\n  const stateManagementOpen = useState(false)\r\n  const stateTransactionOpen = useState(false)\r\n  const stateHistoryOpen = useState(false)\r\n  const stateSettingOpen = useState(false)\r\n\r\n  const [user, setUser] = useState<Partial<User>>({})\r\n\r\n  useEffect(() => {\r\n    getMe().then((user) => setUser(user))\r\n  }, [])\r\n\r\n  const adminMenus: MenuProps[] = [\r\n    {\r\n      name: 'Transaction',\r\n      subMenus: [\r\n        {\r\n          name: 'Encode Transaction',\r\n          path: '/transaction/encode',\r\n          icon: <TransactionIcon />,\r\n        },\r\n        {\r\n          name: 'Release Transaction',\r\n          path: '/transaction/releases',\r\n          icon: <ReleaseIcon />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'Management',\r\n      subMenus: [\r\n        {\r\n          name: 'Branch Management',\r\n          path: '/branches',\r\n          icon: <BranchIcon />,\r\n        },\r\n        { name: 'Client Management', path: '/clients', icon: <ClientIcon /> },\r\n\r\n        {\r\n          name: 'Employee Management',\r\n          path: '/employees',\r\n          icon: <EmployeesIcon />,\r\n        },\r\n        {\r\n          name: 'User Management',\r\n          path: '/users',\r\n          icon: <UsersIcon />,\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      name: 'History',\r\n      subMenus: [\r\n        {\r\n          name: 'Payment History',\r\n          path: '/payments',\r\n          icon: <PaymentIcon />,\r\n        },\r\n        {\r\n          name: 'Commission History',\r\n          path: '/commissions',\r\n          icon: <CommissionIcon />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'Settings',\r\n      subMenus: [\r\n        {\r\n          name: 'General Settings',\r\n          path: '/settings/general',\r\n          icon: <SettingsIcon />,\r\n        },\r\n        {\r\n          name: 'Account Settings',\r\n          path: '/settings/account',\r\n          icon: <FaceIcon />,\r\n        },\r\n      ],\r\n    },\r\n  ]\r\n\r\n  const cashierMenus = [\r\n    {\r\n      name: 'Client Registration',\r\n      path: '/clients/new',\r\n      icon: <BranchIcon />,\r\n    },\r\n    {\r\n      name: 'Employee Registration',\r\n      path: '/employees/new',\r\n      icon: <EmployeesIcon />,\r\n    },\r\n    {\r\n      name: 'Encode Transaction',\r\n      path: '/transaction/encode',\r\n      icon: <TransactionIcon />,\r\n    },\r\n    {\r\n      name: 'General Settings',\r\n      path: '/settings/general',\r\n      icon: <SettingsIcon />,\r\n    },\r\n    {\r\n      name: 'Account Settings',\r\n      path: '/settings/account',\r\n      icon: <FaceIcon />,\r\n    },\r\n  ]\r\n\r\n  const renderSubMenus = (subMenu: {\r\n    name: string\r\n    path: string\r\n    icon: JSX.Element\r\n  }) => {\r\n    return (\r\n      <List component='div' disablePadding>\r\n        <ListItem\r\n          onClick={() => {\r\n            props.onToggle(subMenu.name)\r\n            history.replace(subMenu.path)\r\n          }}\r\n          button\r\n          className={styles.nested}\r\n        >\r\n          <ListItemIcon style={{ paddingLeft: 20 }}>\r\n            {subMenu.icon}\r\n          </ListItemIcon>\r\n          <ListItemText primary={subMenu.name} />\r\n        </ListItem>\r\n      </List>\r\n    )\r\n  }\r\n\r\n  const toggleMenu = (name: string) => {\r\n    setActive((active) => (active === name ? '' : name))\r\n  }\r\n\r\n  const renderMenus = (menu: MenuProps) => {\r\n    const open = active === menu.name\r\n    return (\r\n      <>\r\n        <ListItem\r\n          style={{ paddingLeft: 30 }}\r\n          button\r\n          onClick={() => toggleMenu(menu.name)}\r\n        >\r\n          <ListItemText primary={menu.name} />\r\n          {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={open} timeout='auto' unmountOnExit>\r\n          {menu.subMenus.map((subMenu) => renderSubMenus(subMenu))}\r\n        </Collapse>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const [alertDialog, setAlertDialog] = useState<AlertDataProps>({})\r\n\r\n  const handleArchieve = () => {\r\n    props.onToggle()\r\n    setAlertDialog({\r\n      open: false,\r\n    })\r\n    onSignout()\r\n      .then(() => {\r\n        localStorage.removeItem('access_token')\r\n        dispatch({ type: 'SET_CURRENT_USER', payload: null })\r\n      })\r\n      .catch(() => {\r\n        localStorage.removeItem('access_token')\r\n        dispatch({ type: 'SET_CURRENT_USER', payload: null })\r\n      })\r\n  }\r\n  return (\r\n    <Drawer\r\n      anchor='left'\r\n      open={props.isActive}\r\n      ModalProps={{ onBackdropClick: () => props.onToggle() }}\r\n    >\r\n      <MyAlertDialog\r\n        onAgree={handleArchieve}\r\n        onDisagree={() => setAlertDialog({ open: false })}\r\n        data={alertDialog}\r\n      />\r\n      <Grid container justify='flex-end'>\r\n        <IconButton\r\n          onClick={() => props.onToggle()}\r\n          edge='start'\r\n          color='inherit'\r\n          aria-label='menu'\r\n        >\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </Grid>\r\n      {user?.id && (\r\n        <>\r\n          <Grid\r\n            alignItems='flex-end'\r\n            justify='center'\r\n            // xs={12}\r\n            direction='row'\r\n            style={{ paddingLeft: 10, paddingRight: 10, width: 280 }}\r\n            container\r\n          >\r\n            <Grid item container xs={4}>\r\n              <MyAvatar width={70} height={70} src={user?.image_url} />\r\n            </Grid>\r\n            <Grid\r\n              style={{ paddingLeft: 10 }}\r\n              xs={8}\r\n              item\r\n              justify='flex-start'\r\n              container\r\n              direction='column'\r\n            >\r\n              <Typography variant='subtitle1' color='textPrimary'>\r\n                {`${user?.lastname}, ${user?.firstname} ${user?.middlename}`}\r\n              </Typography>\r\n              <Typography variant='subtitle1' color='textSecondary'>\r\n                {`${user?.branch?.name} - ${user?.role}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider\r\n            style={{\r\n              marginTop: 10,\r\n              marginLeft: 10,\r\n              marginRight: 10,\r\n            }}\r\n          ></Divider>\r\n        </>\r\n      )}\r\n      <List\r\n        className={styles.root}\r\n        component='nav'\r\n        aria-labelledby='nested-list-subheader'\r\n      >\r\n        {state.currentUser?.role === 'admin' &&\r\n          adminMenus.map((menu) => renderMenus(menu))}\r\n        {state.currentUser?.role === 'cashier' &&\r\n          cashierMenus.map((menu) => renderSubMenus(menu))}\r\n      </List>\r\n\r\n      <Divider\r\n        style={{\r\n          marginTop: 10,\r\n          marginLeft: 10,\r\n          marginRight: 10,\r\n        }}\r\n      ></Divider>\r\n      <ListItem style={{ paddingLeft: 30 }} button>\r\n        <ListItemText\r\n          className={styles.logout}\r\n          primary='Logout'\r\n          onClick={() => {\r\n            setAlertDialog({\r\n              text: 'Are you sure do you want to logout?',\r\n              open: true,\r\n            })\r\n          }}\r\n        />\r\n      </ListItem>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 270,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n  close: {\r\n    paddingTop: 5,\r\n    paddingRight: 5,\r\n  },\r\n  logout: {\r\n    marginTop: 10,\r\n    color: theme.palette.secondary.main,\r\n  },\r\n}))\r\n\r\nexport default MyDrawer\r\n","import * as React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Menu from '@material-ui/icons/Menu'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport MyDrawer from 'components/common/MyDrawer'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nconst Nav: React.FC = (props) => {\r\n  const [state, dispatch] = React.useContext(GlobalContext)!\r\n  const history = useHistory()\r\n  const [isActive, setIsActive] = React.useState(false)\r\n\r\n  const onToggle = (title?: string) => {\r\n    setIsActive((isActive) => !isActive)\r\n\r\n    if (!title) {\r\n      return\r\n    }\r\n    dispatch({ type: 'SET_TITLE', payload: title })\r\n  }\r\n\r\n  interface Props {\r\n    window?: () => Window\r\n    children: React.ReactElement\r\n  }\r\n\r\n  function HideOnScroll(props: Props) {\r\n    const { children, window } = props\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined })\r\n\r\n    return (\r\n      <Slide appear={false} direction='down' in={!trigger}>\r\n        {children}\r\n      </Slide>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <MyDrawer onToggle={onToggle} isActive={isActive} />\r\n      <HideOnScroll {...props}>\r\n        <AppBar\r\n          style={{\r\n            background:\r\n              'linear-gradient(to right, #9c27b0, #9c27b0, #9c27b0, #9c27b0, #9c27b0, #a721aa, #b119a4, #ba119e, #cb0090, #d80081, #e20672, #e91e63)',\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <Grid container xs={12} justify='center'>\r\n              <Grid container xs={1} sm={5} md={4} justify='flex-start'>\r\n                <IconButton\r\n                  onClick={() => onToggle()}\r\n                  edge='start'\r\n                  color='inherit'\r\n                  aria-label='menu'\r\n                >\r\n                  <Menu />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid container xs={11} sm={5} md={4} justify='flex-end'>\r\n                <Typography style={{ paddingTop: 8 }} variant='h6'>\r\n                  {state.title}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n\r\n          <LinearProgress hidden={!state.isLoading} />\r\n        </AppBar>\r\n      </HideOnScroll>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useContext } from 'react'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\n\r\nexport interface MyAlertProps {}\r\n\r\nconst MyAlert: React.SFC<MyAlertProps> = () => {\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  return (\r\n    state.alert && (\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={!!state.alert}\r\n        autoHideDuration={3000}\r\n        onClose={() => dispatch({ type: 'HIDE_ALERT' })}\r\n      >\r\n        <Alert\r\n          variant='filled'\r\n          onClose={() => dispatch({ type: 'HIDE_ALERT' })}\r\n          severity={state.alert.type}\r\n        >\r\n          {state.alert.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    )\r\n  )\r\n}\r\n\r\nexport default MyAlert\r\n","import { GlobalContext } from 'providers/GlobalProvider'\r\nimport React, { useContext, useEffect } from 'react'\r\n\r\nexport interface DashboardProps {}\r\n\r\nconst Dashboard: React.SFC<DashboardProps> = () => {\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'SET_TITLE', payload: 'Dashboard' })\r\n  }, [])\r\n  return <h3>Under Construction</h3>\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Card, { CardProps } from '@material-ui/core/Card'\r\n\r\nexport interface MyCardProps extends CardProps {\r\n  title: any\r\n}\r\n\r\nconst MyCard: React.FC<MyCardProps> = ({ title, ...props }) => {\r\n  const styles = useStyles()\r\n  return (\r\n    <Card {...props}>\r\n      <div className={styles.cardHeader}>\r\n        <Typography className={styles.titleHeader} component='h6' variant='h6'>\r\n          {title}\r\n        </Typography>\r\n      </div>\r\n      {props.children}\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    cardHeader: {\r\n      display: 'flex',\r\n      minWidth: 444,\r\n      justifyContent: 'flex-start',\r\n      backgroundColor: theme.palette.primary.main,\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      paddingTop: 10,\r\n      paddingBottom: 10,\r\n    },\r\n    titleHeader: {\r\n      color: 'white',\r\n    },\r\n  }),\r\n)\r\n\r\nexport default MyCard\r\n","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ViewIcon from '@material-ui/icons/RemoveRedEye'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Chip from '@material-ui/core/Chip'\r\n\r\nimport MyCard from 'components/common/MyCard'\r\nimport MyAvatar from 'components/common/MyAvatar'\r\nimport Employee from 'models/employee'\r\nimport { EmployeeContext } from 'providers/EmployeeProvider'\r\n\r\nexport interface EmployeesProps {\r\n  employee: Partial<Employee>\r\n  onArchive?: (employee: Employee) => void\r\n}\r\n\r\nconst EmployeeCard: React.SFC<EmployeesProps> = ({ employee, onArchive }) => {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <>\r\n      <MyCard title={'Employee#' + employee.id} style={{ paddingBottom: 5 }}>\r\n        <CardContent>\r\n          <Grid container xs={12} justify='space-between'>\r\n            <Grid\r\n              style={{ paddingLeft: 10 }}\r\n              container\r\n              item\r\n              direction='column'\r\n              xs={7}\r\n              justify='flex-start'\r\n            >\r\n              <Typography component='h3' variant='h6'>\r\n                {`${employee.lastname}, ${employee.firstname} ${employee.middlename}`}\r\n              </Typography>\r\n              <Typography variant='subtitle1' color='textSecondary'>\r\n                {employee?.position?.name}\r\n              </Typography>\r\n              <Typography variant='subtitle1' color='textSecondary'>\r\n                {employee?.branch?.name}\r\n              </Typography>\r\n\r\n              <Grid item xs={1}>\r\n                <Chip\r\n                  style={{ marginTop: 5 }}\r\n                  size='small'\r\n                  label={employee.status}\r\n                  variant='outlined'\r\n                  color={\r\n                    employee.status !== 'active'\r\n                      ? employee.status === 'deactive'\r\n                        ? 'secondary'\r\n                        : 'default'\r\n                      : 'primary'\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={5} justify='center' alignItems='center'>\r\n              <MyAvatar\r\n                src={employee.image_url}\r\n                onClick={() => history.push('/employees/' + employee.id)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n        <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n        <Grid container xs={12} justify='space-evenly'>\r\n          <IconButton\r\n            onClick={() => history.push('/employees/' + employee.id)}\r\n            aria-label='view'\r\n          >\r\n            <ViewIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => history.push('/employees/edit/' + employee.id)}\r\n            aria-label='edit'\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => onArchive?.(employee)}\r\n            aria-label='archive'\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </MyCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EmployeeCard\r\n","import FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport OutlinedInput, {\r\n  OutlinedInputProps,\r\n} from '@material-ui/core/OutlinedInput'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { useState } from 'react'\r\nimport { AnyCnameRecord } from 'dns'\r\n\r\nexport interface MySearchFieldProps extends OutlinedInputProps {\r\n  label?: string\r\n  onSearch?: (value: string) => void\r\n}\r\n\r\nconst MySearchField: React.SFC<MySearchFieldProps> = ({\r\n  label,\r\n  onSearch,\r\n  ...props\r\n}) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const handlePress = (event: any) => {\r\n    if (event.key === 'Enter') {\r\n      onSearch?.call(null, value)\r\n    }\r\n  }\r\n  return (\r\n    <FormControl fullWidth variant='outlined'>\r\n      <InputLabel htmlFor='outlined-adornment-password'>\r\n        {label || 'Search...'}\r\n      </InputLabel>\r\n      <OutlinedInput\r\n        {...props}\r\n        id='outlined-adornment-password'\r\n        name='search'\r\n        type='text'\r\n        labelWidth={props.labelWidth ? props.labelWidth : 65}\r\n        value={value}\r\n        onKeyPress={handlePress}\r\n        onChange={(event) => setValue(event.target.value)}\r\n        endAdornment={\r\n          <InputAdornment position='end'>\r\n            <IconButton\r\n              onClick={() => onSearch?.call(null, value)}\r\n              aria-label='toggle password visibility'\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default MySearchField\r\n","import { Dispatch, createContext, useReducer, useEffect } from 'react'\r\nimport Employee from 'models/employee'\r\nimport { produce } from 'immer'\r\nimport Branch from 'models/branch'\r\nimport Position from 'models/position'\r\n\r\ninterface EmployeeState {\r\n  employees: Employee[]\r\n  isLoading: boolean\r\n  employee: Employee\r\n  branches: Branch[]\r\n  positions: Position[]\r\n  pages: number\r\n  total: number\r\n}\r\n\r\ntype EmployeeAction =\r\n  | {\r\n      type: 'ON_ADD_EMPLOYEE'\r\n      payload: Employee\r\n    }\r\n  | {\r\n      type: 'ON_GET_EMPLOYEE'\r\n      payload: number\r\n    }\r\n  | {\r\n      type: 'ON_LOAD_EMPLOYEES'\r\n      payload: { employees: Employee[]; pages?: number; total?: number }\r\n    }\r\n  | {\r\n      type: 'SET_IS_LOADING'\r\n      payload: boolean\r\n    }\r\n  | {\r\n      type: 'ON_LOAD_BRANCHES'\r\n      payload: Branch[]\r\n    }\r\n  | {\r\n      type: 'ON_LOAD_POSITIONS'\r\n      payload: Position[]\r\n    }\r\n  | {\r\n      type: 'SET_PAGES'\r\n      payload: number\r\n    }\r\n  | {\r\n      type: 'SET_TOTAL'\r\n      payload: number\r\n    }\r\n\r\nconst reducer = (state: EmployeeState, action: EmployeeAction) => {\r\n  switch (action.type) {\r\n    case 'ON_LOAD_BRANCHES':\r\n      state.branches = action.payload\r\n      break\r\n    case 'ON_LOAD_POSITIONS':\r\n      state.positions = action.payload\r\n      break\r\n    case 'ON_LOAD_EMPLOYEES':\r\n      state.employees = action.payload.employees\r\n      state.pages = action.payload.pages!\r\n      state.total = action.payload.total!\r\n      state.isLoading = false\r\n      break\r\n    case 'ON_ADD_EMPLOYEE':\r\n      state.employees = [...state.employees, action.payload]\r\n      break\r\n    case 'ON_GET_EMPLOYEE':\r\n      state.employee = state.employees.filter(\r\n        (employee) => employee.id === action.payload,\r\n      )[0]\r\n      break\r\n    case 'SET_IS_LOADING':\r\n      state.isLoading = action.payload\r\n      break\r\n    case 'SET_PAGES':\r\n      state.pages = action.payload\r\n      break\r\n    case 'SET_TOTAL':\r\n      state.total = action.payload\r\n      break\r\n    default:\r\n      return state\r\n  }\r\n  return state\r\n}\r\n\r\nexport const EmployeeContext = createContext<\r\n  [state: EmployeeState, dispatch: Dispatch<EmployeeAction>] | null\r\n>(null)\r\n\r\nexport const EmployeeProvider: React.FC = (props) => {\r\n  const [state, dispatch] = useReducer(produce(reducer), {\r\n    employees: [],\r\n    isLoading: false,\r\n    employee: {},\r\n    branches: [],\r\n    positions: [\r\n      { id: 1, name: 'Branch Manager' },\r\n      { id: 2, name: 'Agency Manager' },\r\n      { id: 3, name: 'Supervisor' },\r\n      { id: 4, name: 'Sales Agent' },\r\n    ],\r\n    pages: 0,\r\n    total: 0,\r\n  })\r\n\r\n  return (\r\n    <EmployeeContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </EmployeeContext.Provider>\r\n  )\r\n}\r\n","import Employee from 'models/employee'\r\nimport http from 'utils/http'\r\n\r\nexport const saveEmployee = async (employee: Employee) => {\r\n  return http.post('/employees', employee).then(({ data }) => {\r\n    return data\r\n  })\r\n}\r\n\r\nexport interface GetEmployeesProps {\r\n  search?: string\r\n  category?: string\r\n  page?: number\r\n}\r\n\r\nexport const getEmployees = async (props?: GetEmployeesProps) => {\r\n  if (!props) {\r\n    return http.get('/employees').then(({ data }) => data)\r\n  }\r\n\r\n  return http\r\n    .get(\r\n      `/employees?page=${props?.page || ''}&search=${\r\n        props?.search || ''\r\n      }&category=${props?.category || ''}`,\r\n    )\r\n    .then(({ data }) => {\r\n      if (!props?.page) {\r\n        return data\r\n      }\r\n      const employees: Employee[] = data.items.map((item: any) => ({\r\n        ...item.profile,\r\n        ...item,\r\n      }))\r\n      return { employees, pages: data.pages, total: data.count }\r\n    })\r\n}\r\n\r\nexport const getEmployee = async (id: string) => {\r\n  return http.get('/employees/' + id).then(({ data }) => {\r\n    //order is important\r\n    const employee: Employee = {\r\n      ...data.profile,\r\n      id: data.id,\r\n      branch: data.branch.id,\r\n      position: data.position.id,\r\n      status: data.status,\r\n      clients: data.clients.map((client: any) => ({\r\n        ...client.profile,\r\n        ...client,\r\n      })),\r\n    }\r\n    return employee\r\n  })\r\n}\r\n\r\nexport const updateEmployee = (employee: Employee) => {\r\n  return http.put('/employees/' + employee.id, employee).then(({ data }) => {\r\n    return data\r\n  })\r\n}\r\n\r\nexport const archiveEmployee = (id: number) => {\r\n  return http.delete('/employees/' + id).then(({ data }) => data)\r\n}\r\n","import Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\n\r\nexport interface MySkeletonCardProps {}\r\n\r\nconst MySkeletonCards: React.SFC<MySkeletonCardProps> = () => {\r\n  const card = () => {\r\n    return (\r\n      <Paper style={{ marginBottom: 20 }}>\r\n        <Skeleton animation='wave' variant='rect' height={50} />\r\n        <Grid style={{ paddingTop: 20, marginBottom: 20 }} container xs={12}>\r\n          <Grid style={{ paddingLeft: 20 }} item xs={6}>\r\n            <Skeleton animation='wave' variant='text' width={150} />\r\n            <Skeleton animation='wave' variant='text' width={150} />\r\n            <Skeleton animation='wave' variant='text' width={150} />\r\n            <Skeleton animation='wave' variant='text' width={100} />\r\n            <Skeleton animation='wave' variant='text' width={100} />\r\n          </Grid>\r\n          <Grid item xs={6} container justify='center'>\r\n            <Skeleton\r\n              animation='wave'\r\n              variant='circle'\r\n              width={100}\r\n              height={100}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Skeleton animation='wave' variant='rect' height={70} />\r\n      </Paper>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Grid container xs={12} direction='column'>\r\n        {card()}\r\n        {card()}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MySkeletonCards\r\n","import { useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Badge from '@material-ui/core/Badge'\r\n\r\nexport interface MyChipsProps {\r\n  chips: MyChip[]\r\n  onChipSelected?: (chip: MyChip) => void\r\n  active: MyChip\r\n  count?: number\r\n}\r\n\r\nexport interface MyChip {\r\n  value: any\r\n  name: string\r\n}\r\n\r\nconst MyChips: React.SFC<MyChipsProps> = ({\r\n  chips,\r\n  active,\r\n  onChipSelected,\r\n  count,\r\n}) => {\r\n  const renderChips = (chip: MyChip) => {\r\n    return (\r\n      <Grid key={chip.value} item>\r\n        <Badge\r\n          invisible={active.value !== chip.value}\r\n          badgeContent={count! >= 100 ? '99+' : count}\r\n          color='primary'\r\n        >\r\n          <Chip\r\n            onClick={() => onChipSelected?.(chip)}\r\n            color={active.value === chip.value ? 'secondary' : 'default'}\r\n            variant={active.value === chip.value ? 'default' : 'outlined'}\r\n            size='medium'\r\n            label={chip.name}\r\n          />\r\n        </Badge>\r\n      </Grid>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Grid\r\n        style={{\r\n          marginLeft: 0,\r\n          padding: 0,\r\n          marginBottom: 10,\r\n          paddingBottom: 0,\r\n          paddingTop: 10,\r\n          WebkitOverflowScrolling: 'touch',\r\n          overflowX: 'auto',\r\n          flexWrap: 'nowrap',\r\n        }}\r\n        container\r\n        xs={12}\r\n        justify='flex-start'\r\n        direction='row'\r\n        spacing={1}\r\n        alignItems='center'\r\n      >\r\n        {chips.map((chip) => renderChips(chip))}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyChips\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport EmployeeCard from './EmployeeCard'\r\nimport MySearchField from 'components/common/MySearchField'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport { EmployeeContext } from 'providers/EmployeeProvider'\r\nimport { getEmployees, GetEmployeesProps } from 'services/employeeService'\r\nimport MySkeletonCards from 'components/common/MySkeletonCards'\r\nimport MyChips, { MyChip } from 'components/common/MyChips'\r\nimport Scroll from 'react-scroll'\r\nimport qs from 'query-string'\r\nimport MyAlertDialog, { AlertDataProps } from 'components/common/MyAlertDialog'\r\nimport { archiveEmployee } from 'services/employeeService'\r\nimport Employee from 'models/employee'\r\n\r\nexport interface EmployeesProps {}\r\n\r\nconst Employees: React.SFC<EmployeesProps> = () => {\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n  const [employeeState, employeeDispatch] = useContext(EmployeeContext)!\r\n\r\n  const scroll = Scroll.animateScroll\r\n\r\n  const history = useHistory()\r\n\r\n  const location = useLocation()\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const [chip, setChip] = useState<MyChip>({ value: '', name: 'All' })\r\n\r\n  const styles = useStyles()\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Employee Management' })\r\n    const { page, search } = qs.parse(location.search)\r\n    const currentPage = !!page ? +page : 1\r\n    setPage(currentPage)\r\n    onLoad({\r\n      page: currentPage,\r\n      search: (search as string) || '',\r\n    })\r\n    return () => {\r\n      globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n    }\r\n  }, [])\r\n\r\n  const onLoad = ({ page, category, search }: GetEmployeesProps) => {\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    employeeDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    getEmployees({ page, category, search }).then(\r\n      ({ employees, pages, total }) => {\r\n        employeeDispatch({\r\n          type: 'ON_LOAD_EMPLOYEES',\r\n          payload: { employees, pages, total },\r\n        })\r\n        globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n        scroll.scrollToTop({ duration: 1000 })\r\n      }\r\n    )\r\n  }\r\n\r\n  const onFilter = (chip: MyChip) => {\r\n    setChip(chip)\r\n    employeeDispatch({ type: 'SET_TOTAL', payload: 0 })\r\n    setPage(1)\r\n    onLoad({ page: 1, category: chip.value })\r\n  }\r\n\r\n  const onPage = (e: any, page: number) => {\r\n    employeeDispatch({ type: 'SET_TOTAL', payload: 0 })\r\n    setPage(page)\r\n    onLoad({ page, category: chip.value })\r\n    history.push('/employees?page=' + page)\r\n  }\r\n\r\n  const onSearch = (search: string) => {\r\n    setChip({ value: '', name: 'All' })\r\n    setPage(1)\r\n    onLoad({ page: 1, search })\r\n    history.push('/employees?search=' + search)\r\n  }\r\n\r\n  const isLoading = employeeState.isLoading && !employeeState.employees.length\r\n\r\n  const chips: MyChip[] = [\r\n    { value: '', name: 'All' },\r\n    { value: 'active', name: 'Active' },\r\n    { value: 'deactive', name: 'Deactive' },\r\n    { value: 'deceased', name: 'Deceased' },\r\n    { value: 1, name: 'Branch Manager' },\r\n    { value: 2, name: 'Agency Manager' },\r\n    { value: 3, name: 'Supervisor' },\r\n    { value: 4, name: 'Sales Agent' },\r\n  ]\r\n\r\n  const [alertDialog, setAlertDialog] = useState<AlertDataProps>({})\r\n\r\n  const [employee, setEmployee] = useState<Employee>()\r\n\r\n  const handleSelectedEmployee = (employee: Employee) => {\r\n    setEmployee(employee)\r\n    setAlertDialog({\r\n      open: true,\r\n      text: `Are you sure you want to archive ${employee.lastname}, ${employee.firstname} ${employee.middlename}?`,\r\n      description:\r\n        'Archiving will not permanently delete the employee account in the database.',\r\n    })\r\n  }\r\n\r\n  const handleArchive = () => {\r\n    archiveEmployee(employee?.id!).then((data) => {\r\n      onLoad({\r\n        page,\r\n      })\r\n      globalDispatch({\r\n        type: 'SET_ALERT',\r\n        payload: { message: 'Successfully archived', type: 'success' },\r\n      })\r\n      setChip({ value: '', name: 'All' })\r\n    })\r\n    setAlertDialog({\r\n      open: false,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MyAlertDialog\r\n        onAgree={handleArchive}\r\n        onDisagree={() => setAlertDialog({ open: false })}\r\n        data={alertDialog}\r\n      />\r\n      <MySearchField\r\n        label='Name / Branch'\r\n        labelWidth={110}\r\n        onSearch={onSearch}\r\n        style={{ marginBottom: 5 }}\r\n      />\r\n\r\n      <MyChips\r\n        count={employeeState.total}\r\n        active={chip}\r\n        onChipSelected={onFilter}\r\n        chips={chips}\r\n      />\r\n\r\n      {isLoading && <MySkeletonCards />}\r\n      {!isLoading && (\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction='column'\r\n          justify='flex-start'\r\n          alignItems='center'\r\n        >\r\n          {employeeState.employees.map((employee) => (\r\n            <Grid key={employee.id} item xs={12}>\r\n              <EmployeeCard\r\n                onArchive={handleSelectedEmployee}\r\n                employee={employee}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          <Pagination\r\n            style={{ marginTop: 15, marginBottom: 15 }}\r\n            variant='outlined'\r\n            color='primary'\r\n            count={employeeState.pages}\r\n            siblingCount={0}\r\n            page={page}\r\n            onChange={onPage}\r\n          />\r\n        </Grid>\r\n      )}\r\n\r\n      <Fab\r\n        onClick={() => history.push('/employees/new')}\r\n        className={styles.fab}\r\n        color='primary'\r\n        aria-label='add'\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: 60,\r\n      right: 20,\r\n    },\r\n  })\r\n)\r\n\r\nexport default Employees\r\n","import Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\n\r\nexport interface MySkeletonCardProps {\r\n  height?: number\r\n}\r\n\r\nconst MySkeletonCard: React.SFC<MySkeletonCardProps> = ({ height = 285 }) => {\r\n  const card = () => {\r\n    return (\r\n      <Paper style={{ marginBottom: 20 }}>\r\n        <Skeleton animation='wave' variant='rect' height={50} />\r\n        <Grid style={{ paddingTop: 20, marginBottom: 20 }} container xs={12}>\r\n          <Grid style={{ paddingLeft: 20 }} item xs={6}>\r\n            <Skeleton animation='wave' variant='text' width={150} />\r\n            <Skeleton animation='wave' variant='text' width={150} />\r\n            <Skeleton animation='wave' variant='text' width={150} />\r\n            <Skeleton animation='wave' variant='text' width={100} />\r\n            <Skeleton animation='wave' variant='text' width={100} />\r\n          </Grid>\r\n          <Grid item xs={6} container justify='center'>\r\n            <Skeleton\r\n              animation='wave'\r\n              variant='circle'\r\n              width={100}\r\n              height={100}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Skeleton animation='wave' variant='rect' height={height} />\r\n      </Paper>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Grid container xs={12} direction='column'>\r\n        {card()}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MySkeletonCard\r\n","import Grid, { GridProps } from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { useState, useContext } from 'react'\r\n\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\n\r\ninterface RenderProps<T> {\r\n  renderCards: (props: RenderCardsProps<T>) => JSX.Element\r\n  item: T\r\n}\r\n\r\ninterface RenderCardsProps<T> {\r\n  title: string\r\n  subtitle: string\r\n  src?: string\r\n  item?: T\r\n}\r\n\r\nexport interface MyMiniCardsProps<T> extends GridProps {\r\n  items: T[]\r\n  onSelected?: (item: T) => void\r\n  children?: (props: RenderProps<T>) => JSX.Element\r\n}\r\n\r\nfunction MyMiniCards<T>({\r\n  items,\r\n  onSelected,\r\n  children,\r\n  ...props\r\n}: MyMiniCardsProps<T>) {\r\n  const [state, _] = useContext(GlobalContext)!\r\n\r\n  const styles = useStyles(state.isDark)()\r\n\r\n  const [selectedItem, setSelectedItem] = useState<T>()\r\n\r\n  const renderCards = ({ src, title, subtitle, item }: RenderCardsProps<T>) => {\r\n    return (\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar\r\n            className={styles.avatar}\r\n            src={src}\r\n            aria-label='item'\r\n          ></Avatar>\r\n        }\r\n        title={title}\r\n        subheader={subtitle}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      {...props}\r\n      container\r\n      xs={12}\r\n      justify='flex-start'\r\n      direction='row'\r\n      spacing={1}\r\n      alignItems='center'\r\n      className={styles.container}\r\n    >\r\n      {items.map((item, index) => (\r\n        <Grid item xs={12} key={index}>\r\n          <Card\r\n            style={{ minHeight: 92, display: 'flex', alignItems: 'center' }}\r\n            className={\r\n              selectedItem === item ? styles.headerSelected : styles.header\r\n            }\r\n            onClick={() => {\r\n              onSelected?.(item)\r\n              setSelectedItem(item)\r\n            }}\r\n          >\r\n            {children?.({ renderCards, item } as RenderProps<T>)}\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = (isDark: boolean) =>\r\n  makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      avatar: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      headerSelected: {\r\n        width: 230,\r\n        backgroundColor: !isDark\r\n          ? theme.palette.grey[300]\r\n          : theme.palette.grey[700],\r\n      },\r\n      header: {\r\n        width: 230,\r\n      },\r\n      container: {\r\n        marginLeft: 0,\r\n        padding: 0,\r\n        paddingBottom: 5,\r\n\r\n        WebkitOverflowScrolling: 'touch',\r\n        overflowX: 'auto',\r\n        flexWrap: 'nowrap',\r\n      },\r\n    }),\r\n  )\r\n\r\nexport default MyMiniCards\r\n","import Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\n\r\nexport interface MySkeletonMiniCardsProps {}\r\n\r\nconst MySkeletonMiniCards: React.SFC<MySkeletonMiniCardsProps> = () => {\r\n  const card = () => {\r\n    return (\r\n      <Paper style={{ paddingLeft: 15, width: 230 }}>\r\n        <Grid\r\n          style={{ minHeight: 92, display: 'flex', alignItems: 'center' }}\r\n          container\r\n          xs={12}\r\n        >\r\n          <Grid item container justify='center' xs={3}>\r\n            <Skeleton\r\n              animation='wave'\r\n              variant='circle'\r\n              width={40}\r\n              height={40}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={9} container justify='flex-start'>\r\n            <Skeleton animation='wave' variant='text' width={150} />\r\n            <Skeleton animation='wave' variant='text' width={100} />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Grid\r\n        style={{\r\n          marginLeft: 5,\r\n          marginTop: 15,\r\n          padding: 0,\r\n          paddingBottom: 5,\r\n          WebkitOverflowScrolling: 'touch',\r\n          overflowX: 'auto',\r\n          flexWrap: 'nowrap',\r\n        }}\r\n        container\r\n        xs={12}\r\n        justify='flex-start'\r\n        direction='row'\r\n        spacing={1}\r\n      >\r\n        {card()}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MySkeletonMiniCards\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport Link from '@material-ui/core/Link'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { calculateAge, capitalize } from 'utils/helper'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport MyCard from 'components/common/MyCard'\r\nimport Employee from 'models/employee'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport Client from 'models/client'\r\nimport MyAvatar from 'components/common/MyAvatar'\r\nimport { getEmployee } from 'services/employeeService'\r\nimport MySkeletonCard from 'components/common/MySkeletonCard'\r\nimport MyMiniCards from 'components/common/MyMiniCards'\r\nimport MySkeletonMiniCards from 'components/common/MySkeletonMiniCards'\r\nimport { EmployeeContext } from 'providers/EmployeeProvider'\r\n\r\nexport interface ViewUserProps {\r\n  title: string\r\n}\r\n\r\nconst ViewEmployee: React.SFC<ViewUserProps> = (props) => {\r\n  const history = useHistory()\r\n  const styles = useStyles()\r\n  const params = useParams<{ id: string }>()\r\n  const [_, dispatch] = useContext(GlobalContext)!\r\n  const [employeeState] = useContext(EmployeeContext)!\r\n\r\n  const [employee, setEmployee] = useState<Employee>()\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'SET_TITLE', payload: 'View Employee' })\r\n    setIsLoading(true)\r\n    getEmployee(params.id).then((employee) => {\r\n      setEmployee(employee)\r\n      setIsLoading(false)\r\n    })\r\n  }, [])\r\n\r\n  const detail = (title: string, subtitle: any) => (\r\n    <Grid container alignItems='center' direction='column' item xs={6}>\r\n      <Typography component='h6' variant='h6'>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant='subtitle1' color='textSecondary'>\r\n        {subtitle}\r\n      </Typography>\r\n    </Grid>\r\n  )\r\n\r\n  const handleSelected = (client: Client) => {\r\n    history.push('/clients/' + client.id)\r\n  }\r\n\r\n  const branch = employeeState.branches.filter(\r\n    (branch) => branch.id === employee?.branch\r\n  )[0]\r\n\r\n  const position = employeeState.positions.filter(\r\n    (position) => position.id === employee?.position\r\n  )[0]\r\n\r\n  const renderClients = (clients: Client[]) => {\r\n    return (\r\n      <>\r\n        <Grid\r\n          container\r\n          style={{ marginTop: 20, marginBottom: 10 }}\r\n          xs={12}\r\n          justify='space-between'\r\n        >\r\n          {!!count && (\r\n            <Badge badgeContent={count! >= 100 ? '99+' : count} color='primary'>\r\n              <Typography variant='subtitle1'>Clients</Typography>\r\n            </Badge>\r\n          )}\r\n          {/* <Link\r\n            component='button'\r\n            variant='body1'\r\n            onClick={() => history.push('/clients')}\r\n          >\r\n            View All({clients.length})\r\n          </Link> */}\r\n        </Grid>\r\n        <MyMiniCards onSelected={handleSelected} items={clients}>\r\n          {({ renderCards, item }) => (\r\n            <>\r\n              {renderCards({\r\n                item,\r\n                title: `${item.lastname}, ${item.firstname}`,\r\n                subtitle: item.code!,\r\n                src: item.image_url,\r\n              })}\r\n            </>\r\n          )}\r\n        </MyMiniCards>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const count = employee?.clients?.length || 0\r\n\r\n  return (\r\n    <>\r\n      <Grid container xs={12}>\r\n        {isLoading && (\r\n          <>\r\n            <MySkeletonCard />\r\n            <Grid container style={{ marginBottom: 10 }} xs={12}>\r\n              <Badge\r\n                badgeContent={count! >= 100 ? '99+' : count}\r\n                color='primary'\r\n              >\r\n                <Typography variant='subtitle1'>Clients</Typography>\r\n              </Badge>\r\n              {/* <Link component='button' variant='body1'>\r\n                View All({employee?.clients?.length})\r\n              </Link> */}\r\n              <MySkeletonMiniCards />\r\n            </Grid>\r\n          </>\r\n        )}\r\n        {!isLoading && employee && (\r\n          <>\r\n            <MyCard title={'Employee#' + employee.id}>\r\n              <CardContent>\r\n                <Grid container xs={12} justify='space-between'>\r\n                  <Grid\r\n                    style={{ paddingLeft: 10 }}\r\n                    container\r\n                    direction='column'\r\n                    item\r\n                    xs={7}\r\n                    justify='flex-start'\r\n                  >\r\n                    <Typography component='h6' variant='h6'>\r\n                      {`${employee.lastname}, ${employee.firstname} ${employee.middlename}`}\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' color='textSecondary'>\r\n                      {position?.name}\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' color='textSecondary'>\r\n                      {branch?.name}\r\n                    </Typography>\r\n                    <Grid item xs={1}>\r\n                      <Chip\r\n                        style={{ marginTop: 5 }}\r\n                        size='small'\r\n                        label={employee.status}\r\n                        variant='default'\r\n                        color={\r\n                          employee.status !== 'active' ? 'secondary' : 'primary'\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    item\r\n                    xs={5}\r\n                    justify='center'\r\n                    alignItems='center'\r\n                  >\r\n                    <MyAvatar src={employee.image_url} />\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n              <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n              <CardContent>\r\n                <Grid spacing={1} container xs={12} style={{ paddingLeft: 10 }}>\r\n                  {detail('Gender', employee.gender)}\r\n                  {detail('Civil Status', employee.civil)}\r\n                  {detail('Contact', employee.contact)}\r\n                  {detail(\r\n                    'Age',\r\n                    employee.birthdate\r\n                      ? calculateAge(employee.birthdate)\r\n                      : 'N/A'\r\n                  )}\r\n                  {\r\n                    <Grid\r\n                      container\r\n                      alignItems='center'\r\n                      direction='column'\r\n                      item\r\n                      xs={12}\r\n                    >\r\n                      <Typography component='h6' variant='h6'>\r\n                        Address\r\n                      </Typography>\r\n                      <Typography variant='subtitle1' color='textSecondary'>\r\n                        {employee.address}\r\n                      </Typography>\r\n                    </Grid>\r\n                  }\r\n                </Grid>\r\n              </CardContent>\r\n            </MyCard>\r\n            {renderClients(employee.clients!)}\r\n            <Grid\r\n              style={{\r\n                paddingLeft: 18,\r\n                paddingTop: 10,\r\n                paddingBottom: 5,\r\n              }}\r\n              container\r\n              xs={12}\r\n              justify='center'\r\n              spacing={2}\r\n            >\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  onClick={() => history.goBack()}\r\n                  style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                  fullWidth\r\n                  variant='contained'\r\n                  color='default'\r\n                >\r\n                  BACK\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  onClick={() => history.push('/employees/edit/' + employee.id)}\r\n                  style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                  fullWidth\r\n                  variant='contained'\r\n                  color='primary'\r\n                >\r\n                  EDIT\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    avatar: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n  })\r\n)\r\n\r\nexport default ViewEmployee\r\n","import Joi from 'joi'\r\nimport Employee from 'models/employee'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst saveEmployeeValidator = {\r\n  firstname: lettersOnly('Firstname').min(1).max(50),\r\n  middlename: lettersOnly('Middlename').min(1).max(50),\r\n  lastname: lettersOnly('Lastname').min(1).max(50),\r\n  position: notNull('Position'),\r\n  status: notNull('Status'),\r\n  civil: notNull('Civil Status'),\r\n  gender: notNull('Gender'),\r\n  branch: notNull('Branch'),\r\n}\r\n\r\nexport default saveEmployeeValidator\r\n","import React, { useContext, memo } from 'react'\r\nimport Joi from 'joi'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Button from '@material-ui/core/Button'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport DateFnsUtils from '@date-io/date-fns/build'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\r\nimport Visibility from '@material-ui/icons/Visibility'\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport { DateRange } from '@material-ui/icons'\r\n\r\nexport interface MyFormProps<T> {\r\n  state: [T, React.Dispatch<React.SetStateAction<T>>]\r\n  onSubmit: (data: T) => Promise<any>\r\n  validator?: {}\r\n  radioButtonDefaultValue?: string\r\n  children?: (props: RenderProps) => JSX.Element\r\n}\r\n\r\nexport interface InputProps {\r\n  value?: any\r\n  name: string\r\n  placeholder?: string\r\n  type?: string | 'text'\r\n  label?: string\r\n  isMultiline?: boolean\r\n  onChange?: (e: any) => void\r\n  onTogglePassword?: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport interface OptionProps {\r\n  name?: string\r\n  value: any\r\n}\r\n\r\nexport interface SelectProps extends InputProps {\r\n  options: OptionProps[]\r\n  subLabel?: string\r\n  labelWidth?: number\r\n}\r\n\r\nexport interface RenderProps {\r\n  myInput: (input: InputProps) => JSX.Element\r\n  myInputPassword: (input: InputProps) => JSX.Element\r\n  myDateTimePicker: (input: InputProps) => JSX.Element\r\n  myButton: (text?: string) => JSX.Element\r\n  mySelect: (select: SelectProps) => JSX.Element\r\n  myRadio: (input: InputProps) => JSX.Element\r\n  myControlledInput: (input: InputProps) => JSX.Element\r\n  MyButtonMemo: React.MemoExoticComponent<\r\n    (props: { text?: string }) => JSX.Element\r\n  >\r\n}\r\n\r\nconst MyButtonMemo = (isDisable: boolean) =>\r\n  memo((props: { text?: string }) => {\r\n    console.log('hit memo')\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Button\r\n          disabled={isDisable}\r\n          style={{ paddingTop: 15, paddingBottom: 15 }}\r\n          fullWidth\r\n          type='submit'\r\n          variant='contained'\r\n          color='primary'\r\n          startIcon={\r\n            isDisable && (\r\n              <CircularProgress\r\n                color='primary'\r\n                size={24}\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: '50%',\r\n                  left: '50%',\r\n                  marginTop: -12,\r\n                  marginLeft: -12,\r\n                }}\r\n              />\r\n            )\r\n          }\r\n        >\r\n          {props.text ?? 'SUBMIT'}\r\n        </Button>\r\n      </Grid>\r\n    )\r\n  })\r\n\r\nfunction MyForm<T>(props: MyFormProps<T>) {\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  const [data, setData] = props.state\r\n\r\n  const [isDisable, setIsDisable] = React.useState<boolean>(false)\r\n\r\n  const [selectedValue, setSelectedValue] = React.useState(\r\n    props.radioButtonDefaultValue ?? ''\r\n  )\r\n\r\n  const [errors, setErrors] = React.useState<any>(null)\r\n\r\n  const onValidate = (_data: T) => {\r\n    const schema = Joi.object(props.validator).options({\r\n      abortEarly: false,\r\n      allowUnknown: true,\r\n    })\r\n\r\n    const { error } = schema.validate(_data)\r\n\r\n    if (!error) return null\r\n\r\n    console.log(error)\r\n\r\n    const _errors: any = {}\r\n\r\n    error.details.forEach((item) => (_errors[item.path[0]] = item.message))\r\n\r\n    return _errors\r\n  }\r\n\r\n  const onChangeRadio = (e: any) => {\r\n    setSelectedValue(e.target.value)\r\n  }\r\n\r\n  const onSubmit = (e: any) => {\r\n    e.preventDefault()\r\n\r\n    const newData = { ...data } as any\r\n\r\n    for (let [key, value] of new FormData(e.target).entries()) {\r\n      newData[key] = value\r\n    }\r\n    const hasErrors = onValidate(newData)\r\n\r\n    setIsDisable(true)\r\n\r\n    if (hasErrors) {\r\n      dispatch({\r\n        type: 'SET_ALERT',\r\n        payload: {\r\n          message: 'Fill out all the fields.',\r\n          type: 'error',\r\n        },\r\n      })\r\n      setErrors(hasErrors)\r\n      setIsDisable(false)\r\n      return\r\n    }\r\n\r\n    return props\r\n      .onSubmit(newData)\r\n      .then(() => {\r\n        setErrors({})\r\n        setIsDisable(false)\r\n      })\r\n      .catch((error) => {\r\n        setIsDisable(false)\r\n      })\r\n  }\r\n\r\n  const myInput = (input: InputProps) => {\r\n    const error = errors && errors[input.name]\r\n\r\n    return (\r\n      <Grid item xs={12} key={input.name}>\r\n        <TextField\r\n          defaultValue={input.value}\r\n          multiline={input.isMultiline}\r\n          fullWidth\r\n          name={input.name}\r\n          variant='outlined'\r\n          label={input.label}\r\n          type={input.type}\r\n          error={!!error}\r\n          helperText={error}\r\n        />\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  const myControlledInput = (input: InputProps) => {\r\n    const error = errors && errors[input.name]\r\n\r\n    return (\r\n      <Grid item xs={12} key={input.name}>\r\n        <TextField\r\n          value={input.value}\r\n          multiline={input.isMultiline}\r\n          fullWidth\r\n          name={input.name}\r\n          variant='outlined'\r\n          label={input.label}\r\n          type={input.type}\r\n          error={!!error}\r\n          helperText={error}\r\n          onChange={(e) =>\r\n            input.onChange\r\n              ? input.onChange(e)\r\n              : setData((data) => ({ ...data, [input.name]: e.target.value }))\r\n          }\r\n        />\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  const myInputPassword = (input: InputProps) => {\r\n    const error = errors && errors[input.name]\r\n\r\n    return (\r\n      <Grid item xs={12} key={input.name}>\r\n        <FormControl fullWidth variant='outlined' error={!!error}>\r\n          <InputLabel htmlFor={input.label}>{input.label}</InputLabel>\r\n          <OutlinedInput\r\n            defaultValue={input.value}\r\n            id={input.name}\r\n            name={input.name}\r\n            type={input.type}\r\n            labelWidth={70}\r\n            endAdornment={\r\n              <InputAdornment position='end'>\r\n                <IconButton\r\n                  aria-label='toggle password visibility'\r\n                  onClick={() =>\r\n                    input.onTogglePassword?.call(\r\n                      null,\r\n                      (isVisible) => !isVisible\r\n                    )\r\n                  }\r\n                >\r\n                  {input.type !== 'password' ? (\r\n                    <Visibility />\r\n                  ) : (\r\n                    <VisibilityOff />\r\n                  )}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          <FormHelperText>{error}</FormHelperText>\r\n        </FormControl>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  const myDateTimePicker = (input: InputProps) => {\r\n    const error = errors && errors[input.name]\r\n\r\n    return (\r\n      <Grid item xs={12} key={input.name}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            fullWidth\r\n            inputVariant='outlined'\r\n            disableToolbar\r\n            variant='dialog'\r\n            format='MM/dd/yyyy'\r\n            margin='none'\r\n            error={!!error}\r\n            helperText={error}\r\n            label={input.label}\r\n            value={input.value ?? null}\r\n            onChange={(date) => {\r\n              setData({\r\n                ...data,\r\n                [input.name]: date?.toLocaleDateString(),\r\n              })\r\n            }}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  const myRadio = (input: InputProps) => {\r\n    return (\r\n      <Radio\r\n        checked={selectedValue === input.value}\r\n        onChange={onChangeRadio}\r\n        value={input.value}\r\n        name={input.name}\r\n      />\r\n    )\r\n  }\r\n\r\n  const mySelect = (select: SelectProps) => {\r\n    const error = errors && errors[select.name ?? select.value]\r\n    return (\r\n      <Grid item xs={12} key={select.name ?? select.value}>\r\n        <FormControl fullWidth variant='outlined' error={!!error}>\r\n          <InputLabel id={select.label}>{select.label}</InputLabel>\r\n          <Select\r\n            labelId={select.label}\r\n            id={select.name ?? select.value}\r\n            name={select.name ?? select.value}\r\n            value={select.value || ''}\r\n            onChange={\r\n              select.onChange\r\n                ? select.onChange\r\n                : (e: any) => {\r\n                    const { value } = e.target\r\n                    if (error && value !== 'clear') {\r\n                      const _errors = { ...errors }\r\n                      delete _errors[select.name]\r\n                      setErrors(_errors)\r\n                    }\r\n                    setData({\r\n                      ...data,\r\n                      [select.name]: value !== 'clear' ? value : '',\r\n                    })\r\n                  }\r\n            }\r\n            labelWidth={select.labelWidth ?? 60}\r\n          >\r\n            {select.options.map((option) => (\r\n              <MenuItem value={option.value}>\r\n                {option.name\r\n                  ? select.subLabel\r\n                    ? option.name + '-' + select.subLabel\r\n                    : option.name\r\n                  : option.value}\r\n              </MenuItem>\r\n            ))}\r\n            <Divider style={{ marginLeft: 15, marginRight: 15 }}></Divider>\r\n            <MenuItem value='clear'>Clear</MenuItem>\r\n          </Select>\r\n          <FormHelperText>{error}</FormHelperText>\r\n        </FormControl>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  const myButton = (text?: string) => {\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Button\r\n          disabled={isDisable}\r\n          fullWidth\r\n          type='submit'\r\n          variant='contained'\r\n          color='primary'\r\n          startIcon={\r\n            isDisable && (\r\n              <CircularProgress\r\n                color='primary'\r\n                size={24}\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: '50%',\r\n                  left: '50%',\r\n                  marginTop: -12,\r\n                  marginLeft: -12,\r\n                }}\r\n              />\r\n            )\r\n          }\r\n        >\r\n          {text ?? 'SUBMIT'}\r\n        </Button>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid\r\n        style={{ pointerEvents: isDisable ? 'none' : 'all' }}\r\n        container\r\n        spacing={2}\r\n        direction='column'\r\n      >\r\n        {props.children?.({\r\n          myInput,\r\n          myControlledInput,\r\n          myInputPassword,\r\n          mySelect,\r\n          myDateTimePicker,\r\n          myButton,\r\n          myRadio,\r\n          MyButtonMemo: MyButtonMemo(isDisable),\r\n        } as RenderProps)}\r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default MyForm\r\n","import http from 'utils/http'\r\n\r\nexport const postImage = async (\r\n  image: Blob,\r\n  cb: (image_url: string) => Promise<any>,\r\n) => {\r\n  if (!image?.size) {\r\n    return cb('')\r\n  }\r\n\r\n  const formData = new FormData()\r\n  formData.append('file', image!)\r\n  formData.append('upload_preset', 'wlttlc0c')\r\n  formData.append('cloud_name', 'kitchanismo')\r\n\r\n  return http.axios\r\n    .post('https://api.cloudinary.com/v1_1/kitchanismo/image/upload', formData)\r\n    .then(({ data }) => cb(data.url))\r\n    .catch(() => cb(''))\r\n}\r\n","import Branch from 'models/branch'\r\nimport http from 'utils/http'\r\n\r\nexport const getBranches = (search?: string) => {\r\n  return http.get(`/branches?search=${search || ''}`).then(({ data }) => data)\r\n}\r\n\r\nexport const saveBranch = (branch: Branch) => {\r\n  return http.post('/branches', branch).then(({ data }) => data)\r\n}\r\n\r\nexport const getEmployeesByBranch = (id: number) => {\r\n  return http.get(`/branches/${id}/employees`).then(({ data }) => data)\r\n}\r\n\r\nexport const getBranch = (id: number) => {\r\n  return http.get('/branches/' + id).then(({ data }) => data)\r\n}\r\n\r\nexport const updateBranch = (branch: Branch) => {\r\n  return http.put('/branches/' + branch.id, branch).then(({ data }) => data)\r\n}\r\n\r\nexport const archiveBranch = (id: number) => {\r\n  return http.delete('/branches/' + id).then(({ data }) => data)\r\n}\r\n","import { createContext, Dispatch, useReducer } from 'react'\r\nimport { produce } from 'immer'\r\nimport Branch from 'models/branch'\r\n\r\nexport const BranchContext = createContext<\r\n  [state: BranchState, dispatch: Dispatch<BranchAction>] | null\r\n>(null)\r\n\r\ninterface BranchState {\r\n  branches: Branch[]\r\n  isLoading: boolean\r\n}\r\n\r\nexport type BranchAction =\r\n  | {\r\n      type: 'ON_LOAD_BRANCHES'\r\n      payload: Branch[]\r\n    }\r\n  | { type: 'SET_IS_LOADING'; payload: boolean }\r\n\r\nconst reducer = (state: BranchState, action: BranchAction) => {\r\n  switch (action.type) {\r\n    case 'ON_LOAD_BRANCHES':\r\n      state.branches = action.payload\r\n      state.isLoading = false\r\n      break\r\n    case 'SET_IS_LOADING':\r\n      state.isLoading = action.payload\r\n      break\r\n    default:\r\n      return state\r\n  }\r\n  return state\r\n}\r\n\r\nexport const BranchProvider: React.FC = (props) => {\r\n  const [state, dispatch] = useReducer(produce(reducer), {\r\n    branches: [],\r\n    isLoading: false,\r\n  })\r\n\r\n  return (\r\n    <BranchContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </BranchContext.Provider>\r\n  )\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { GlobalContext } from \"providers/GlobalProvider\";\r\nimport validator from \"../../../../validators/saveEmployeeValidator\";\r\nimport MyForm, { MyFormProps, InputProps } from \"components/common/MyForm\";\r\nimport Employee from \"models/employee\";\r\nimport { saveEmployee } from \"services/employeeService\";\r\nimport { EmployeeContext } from \"providers/EmployeeProvider\";\r\nimport { postImage } from \"services/imageService\";\r\nimport { getBranches } from \"services/branchService\";\r\nimport { BranchContext } from \"providers/BranchProvider\";\r\n\r\nexport interface NewUserProps {}\r\n\r\nconst NewEmployee: React.SFC<NewUserProps> = () => {\r\n  const [{ currentUser }, globalDispatch] = useContext(GlobalContext)!;\r\n\r\n  const [employeeState, employeeDispatch] = useContext(EmployeeContext)!;\r\n\r\n  const [branchState, branchDispatch] = useContext(BranchContext)!;\r\n\r\n  const [imageFile, setImageFile] = React.useState<HTMLImageElement | null>(\r\n    null\r\n  );\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: \"SET_TITLE\", payload: \"Employee Registration\" });\r\n\r\n    getBranches().then((branches) =>\r\n      branchDispatch({ type: \"ON_LOAD_BRANCHES\", payload: branches })\r\n    );\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  const [employee, setEmployee] = React.useState<Employee>({\r\n    status: \"deactive\",\r\n  });\r\n\r\n  const onSubmit = async (employee: Employee) => {\r\n    globalDispatch({ type: \"SET_IS_LOADING\", payload: true });\r\n\r\n    return postImage(employee?.image!, (image_url: string) => {\r\n      employee.image_url = image_url;\r\n      delete employee.image;\r\n      return saveEmployee(employee).then(() => {\r\n        globalDispatch({\r\n          type: \"SET_ALERT\",\r\n          payload: { message: \"Successfully added\", type: \"success\" },\r\n        });\r\n        globalDispatch({ type: \"SET_IS_LOADING\", payload: false });\r\n      });\r\n    });\r\n  };\r\n\r\n  const formProps: MyFormProps<Employee> = {\r\n    state: [employee, setEmployee],\r\n    onSubmit,\r\n    validator,\r\n  };\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: \"Firstname\",\r\n            value: employee.firstname,\r\n            name: \"firstname\",\r\n          })}\r\n          {myInput({\r\n            label: \"Middlename\",\r\n            value: employee.middlename,\r\n            name: \"middlename\",\r\n          })}\r\n          {myInput({\r\n            label: \"Lastname\",\r\n            value: employee.lastname,\r\n            name: \"lastname\",\r\n          })}\r\n          {myInput({\r\n            label: \"Contact Number\",\r\n            value: employee.contact,\r\n            name: \"contact\",\r\n          })}\r\n\r\n          {myInput({\r\n            label: \"Address\",\r\n            value: employee.address,\r\n            name: \"address\",\r\n            isMultiline: true,\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: \"Birthdate\",\r\n            value: employee.birthdate,\r\n            name: \"birthdate\",\r\n          })}\r\n\r\n          {mySelect({\r\n            label: \"Gender\",\r\n            value: employee.gender,\r\n            name: \"gender\",\r\n            options: [\r\n              { value: \"Male\" },\r\n              { value: \"Female\" },\r\n              { value: \"Other\" },\r\n            ],\r\n          })}\r\n          {mySelect({\r\n            label: \"Civil Status\",\r\n            value: employee.civil,\r\n            name: \"civil\",\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: \"Single\" },\r\n              { value: \"Married\" },\r\n              { value: \"Widowed\" },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: \"Position\",\r\n            value: employee.position,\r\n            name: \"position\",\r\n            labelWidth: 55,\r\n            options: employeeState.positions.map((position) => ({\r\n              value: position.id,\r\n              name: position.name,\r\n            })),\r\n          })}\r\n\r\n          {mySelect({\r\n            label: \"Branch\",\r\n            value: employee.branch,\r\n            name: \"branch\",\r\n            labelWidth: 55,\r\n            options: branchState.branches.map((branch) => ({\r\n              value: branch.id,\r\n              name: branch.name,\r\n            })),\r\n          })}\r\n\r\n          <Grid\r\n            container\r\n            style={{\r\n              paddingLeft: 15,\r\n              paddingRight: 15,\r\n              marginBottom: 10,\r\n            }}\r\n            alignItems=\"center\"\r\n            justify=\"space-between\"\r\n            xs={12}\r\n          >\r\n            <Typography variant=\"subtitle1\">\r\n              {imageFile?.name || \"Select Photo\"}\r\n            </Typography>\r\n            <>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{\r\n                  display: \"none\",\r\n                }}\r\n                name=\"image\"\r\n                id=\"icon-button-file\"\r\n                type=\"file\"\r\n                onChange={(e: any) => {\r\n                  setImageFile(e.target.files[0]);\r\n                }}\r\n              />\r\n              <label htmlFor=\"icon-button-file\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  aria-label=\"upload picture\"\r\n                  component=\"span\"\r\n                >\r\n                  <PhotoCamera />\r\n                </IconButton>\r\n              </label>\r\n            </>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              {currentUser?.role === \"admin\" && (\r\n                <Button\r\n                  onClick={() => history.goBack()}\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                >\r\n                  BACK\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  );\r\n};\r\nexport default NewEmployee;\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport validator from 'validators/saveEmployeeValidator'\r\nimport MyForm, { MyFormProps } from 'components/common/MyForm'\r\nimport Employee from 'models/employee'\r\nimport { EmployeeContext } from 'providers/EmployeeProvider'\r\nimport { getEmployee, updateEmployee } from 'services/employeeService'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\r\nimport { postImage } from 'services/imageService'\r\nimport { getBranches } from 'services/branchService'\r\nimport { BranchContext } from 'providers/BranchProvider'\r\n\r\nexport interface EditUserProps {}\r\n\r\nconst EditEmployee: React.SFC<EditUserProps> = () => {\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const [employeeState, employeeDispatch] = useContext(EmployeeContext)!\r\n\r\n  const [branchState, branchDispatch] = useContext(BranchContext)!\r\n\r\n  const history = useHistory()\r\n\r\n  const params = useParams<{ id: string }>()\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const [imageFile, setImageFile] = useState<HTMLImageElement | null>(null)\r\n\r\n  const [employee, setEmployee] = useState<Employee>({\r\n    address: '',\r\n    firstname: '',\r\n    middlename: '',\r\n    lastname: '',\r\n    contact: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Edit Employee' })\r\n    setIsLoading(true)\r\n    getEmployee(params.id).then((employee) => {\r\n      setEmployee(employee)\r\n      setIsLoading(false)\r\n    })\r\n    getBranches().then((branches) =>\r\n      branchDispatch({ type: 'ON_LOAD_BRANCHES', payload: branches })\r\n    )\r\n  }, [])\r\n\r\n  const onSubmit = async (employee: Employee) => {\r\n    return postImage(employee?.image!, (image_url: string) => {\r\n      delete employee.image\r\n\r\n      return updateEmployee({\r\n        ...employee,\r\n        image_url: !!image_url ? image_url : employee.image_url,\r\n      })\r\n        .then(() => {\r\n          globalDispatch({\r\n            type: 'SET_ALERT',\r\n            payload: { message: 'Successfully saved', type: 'success' },\r\n          })\r\n          globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 400) {\r\n            globalDispatch({\r\n              type: 'SET_ALERT',\r\n              payload: { message: error.response.data.error, type: 'error' },\r\n            })\r\n          }\r\n          globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  const formProps: MyFormProps<Employee> = {\r\n    state: [employee, setEmployee],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ mySelect, myDateTimePicker, myButton, myControlledInput }) => (\r\n        <>\r\n          {myControlledInput({\r\n            label: 'Firstname',\r\n            value: employee.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Middlename',\r\n            value: employee.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Lastname',\r\n            value: employee.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Contact Number',\r\n            value: employee.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myControlledInput({\r\n            label: 'Address',\r\n            value: employee.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: employee.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: employee.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: employee.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Position',\r\n            value: employee.position,\r\n            name: 'position',\r\n            labelWidth: 55,\r\n            options: employeeState.positions.map((position) => ({\r\n              value: position.id,\r\n              name: position.name,\r\n            })),\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Branch',\r\n            value: employee.branch + '',\r\n            name: 'branch',\r\n            labelWidth: 55,\r\n            options: branchState.branches.map((branch) => ({\r\n              value: branch.id,\r\n              name: branch.name,\r\n            })),\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Status',\r\n            value: employee.status,\r\n            name: 'status',\r\n            labelWidth: 40,\r\n            options: [\r\n              { value: 'active', name: 'Active' },\r\n              { value: 'deactive', name: 'Deactive' },\r\n              { value: 'deceased', name: 'Deceased' },\r\n            ],\r\n          })}\r\n\r\n          <Grid\r\n            container\r\n            style={{\r\n              paddingLeft: 15,\r\n              paddingRight: 15,\r\n              marginBottom: 10,\r\n            }}\r\n            alignItems='center'\r\n            justify='space-between'\r\n            xs={12}\r\n          >\r\n            <Typography variant='subtitle1'>\r\n              {imageFile?.name || 'Select Photo'}\r\n            </Typography>\r\n            <>\r\n              <input\r\n                accept='image/*'\r\n                style={{\r\n                  display: 'none',\r\n                }}\r\n                name='image'\r\n                id='icon-button-file'\r\n                type='file'\r\n                onChange={(e: any) => {\r\n                  setImageFile(e.target.files[0])\r\n                }}\r\n              />\r\n              <label htmlFor='icon-button-file'>\r\n                <IconButton\r\n                  color='primary'\r\n                  aria-label='upload picture'\r\n                  component='span'\r\n                >\r\n                  <PhotoCamera />\r\n                </IconButton>\r\n              </label>\r\n            </>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\nexport default EditEmployee\r\n","import Branch from 'models/branch'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport Payment from 'models/payment'\r\nimport Plan from 'models/plan'\r\nimport Profile from 'models/profile'\r\nimport http from 'utils/http'\r\n\r\nexport const plans: Plan[] = [\r\n  {\r\n    id: 1,\r\n    price: 23280,\r\n    name: 'Plan 1',\r\n  },\r\n  {\r\n    id: 2,\r\n    price: 32280,\r\n    name: 'Plan 2',\r\n  },\r\n  {\r\n    id: 3,\r\n    price: 41280,\r\n    name: 'Plan 3',\r\n  },\r\n  {\r\n    id: 4,\r\n    price: 50280,\r\n    name: 'Plan 4',\r\n  },\r\n  {\r\n    id: 5,\r\n    price: 65280,\r\n    name: 'Plan 5',\r\n  },\r\n  {\r\n    id: 6,\r\n    price: 83280,\r\n    name: 'Plan 6',\r\n  },\r\n  {\r\n    id: 7,\r\n    price: 95280,\r\n    name: 'Plan 7',\r\n  },\r\n  {\r\n    id: 8,\r\n    price: 173280,\r\n    name: 'Plan 8',\r\n  },\r\n]\r\n\r\nexport const getClient = async (id: number) => {\r\n  return http.get('/clients/' + id).then(\r\n    ({ data }) =>\r\n      ({\r\n        ...data.profile,\r\n        ...data,\r\n      } as Client)\r\n  )\r\n}\r\n\r\nexport const getPlans = async () => {\r\n  return new Promise<Plan[]>(function (resolve, reject) {\r\n    resolve(plans)\r\n  })\r\n}\r\n\r\nexport interface ClientProps {\r\n  search?: string\r\n  category?: string\r\n  page?: number\r\n}\r\n\r\nexport const saveClient = (transaction: any) => {\r\n  return http.post('/clients', transaction).then(({ data }) => {\r\n    return data\r\n  })\r\n}\r\n\r\nexport const updateClient = (profile: Profile) => {\r\n  return http.put('/clients/' + profile.id, profile).then(({ data }) => {\r\n    return data\r\n  })\r\n}\r\n\r\nexport const getClients = async (props: ClientProps) => {\r\n  return http\r\n    .get(\r\n      `/clients?page=${props.page || ''}&search=${\r\n        props.search || ''\r\n      }&category=${props.category || ''}`\r\n    )\r\n    .then(({ data }) => {\r\n      const clients: Client[] = data.items.map((item: any) => ({\r\n        ...item.profile,\r\n        ...item,\r\n      }))\r\n      return { clients, pages: data.pages, total: data.count }\r\n    })\r\n}\r\n\r\nexport const getLapsedClients = async (search: string) => {\r\n  return http.get(`/clients/lapse?search=` + search).then(({ data }) =>\r\n    data.map((client: any) => ({\r\n      ...client.profile,\r\n      ...client,\r\n    }))\r\n  )\r\n}\r\n\r\nexport const getAmountToPay = (client: Client) => {\r\n  if (client.payment_mode === 'Fullpayment') {\r\n    return client.plan?.price!\r\n  }\r\n\r\n  switch (client.payment_period) {\r\n    case 'Monthly':\r\n      return client.plan?.price! / (12 * client.years_to_pay!)\r\n    case 'Quarterly':\r\n      return client.plan?.price! / (4 * client.years_to_pay!)\r\n    case 'Semi-Annually':\r\n      return client.plan?.price! / (2 * client.years_to_pay!)\r\n    case 'Annually':\r\n      return client.plan?.price! / client.years_to_pay!\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nexport const computeTotalCountToPay = (client: Client) => {\r\n  let period: number = 0\r\n\r\n  switch (client.payment_period) {\r\n    case 'Monthly':\r\n      period = 12\r\n      break\r\n    case 'Quarterly':\r\n      period = 4\r\n      break\r\n    case 'Semi-Annually':\r\n      period = 2\r\n      break\r\n    case 'Annually':\r\n      period = 1\r\n      break\r\n    default:\r\n      period = 12\r\n      break\r\n  }\r\n\r\n  return period * client.years_to_pay!\r\n}\r\n\r\nexport const hasCommission = (client: Client) => {\r\n  const price = client?.plan?.price!\r\n  const balance = client?.balance!\r\n  const percentage = Math.ceil(((price - balance) * 100) / price)\r\n  return percentage <= 20\r\n}\r\n\r\nexport const computeTotalCountPaid = (client: Client) => {\r\n  const amount = getAmountToPay(client)\r\n\r\n  const totalCountPaid = computeTotalCountToPay(client)\r\n  return (\r\n    Math.ceil(totalCountPaid - client.balance! / amount) + '/' + totalCountPaid\r\n  )\r\n}\r\n\r\nexport const archiveClient = (id: number) => {\r\n  return http.delete('/clients/' + id).then(({ data }) => data)\r\n}\r\n","import MyCard from 'components/common/MyCard'\r\nimport { useContext } from 'react'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ViewIcon from '@material-ui/icons/RemoveRedEye'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Client from 'models/client'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MyAvatar from 'components/common/MyAvatar'\r\n\r\nimport { computeTotalCountPaid, hasCommission } from 'services/clientService'\r\n\r\nexport interface ClientCardProps {\r\n  client: Client\r\n  onArchieve?: (client: Client) => void\r\n}\r\n\r\nexport const ClientCard: React.SFC<ClientCardProps> = ({\r\n  client,\r\n  onArchieve,\r\n}) => {\r\n  const history = useHistory()\r\n  return (\r\n    <MyCard title={`Code#${client.code}`} style={{ paddingBottom: 5 }}>\r\n      <CardContent>\r\n        <Grid container xs={12} justify='space-between'>\r\n          <Grid\r\n            style={{ paddingLeft: 10 }}\r\n            container\r\n            item\r\n            direction='column'\r\n            xs={7}\r\n            justify='flex-start'\r\n          >\r\n            <Typography component='h6' variant='h6'>\r\n              {`${client.lastname}, ${client.firstname} ${client.middlename}`}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary'>\r\n              {client?.branch?.name}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary'>\r\n              {client.plan?.name! + ' - ' + client.payment_mode}\r\n            </Typography>\r\n\r\n            {client.payment_mode === 'Installment' && (\r\n              <>\r\n                <Typography variant='caption' color='textSecondary'>\r\n                  {'Lapse on ' + new Date(client.next_payment!).toDateString()}\r\n                </Typography>\r\n                <Grid item xs={1}>\r\n                  <Chip\r\n                    style={{ marginTop: 5 }}\r\n                    size='small'\r\n                    label={\r\n                      hasCommission(client!) ? 'on commission' : 'no commission'\r\n                    }\r\n                    variant='outlined'\r\n                    color={hasCommission(client!) ? 'secondary' : 'default'}\r\n                  />\r\n                  <Chip\r\n                    style={{ marginTop: 10 }}\r\n                    size='small'\r\n                    label={computeTotalCountPaid(client) + ' paid'}\r\n                    color='default'\r\n                    variant='outlined'\r\n                  />\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <Grid container item xs={5} justify='center' alignItems='center'>\r\n            <MyAvatar\r\n              src={client?.image_url}\r\n              onClick={() => history.push('/clients/' + client.id)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n\r\n      <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n      <Grid container xs={12} justify='space-evenly'>\r\n        <IconButton\r\n          onClick={() => history.push('/clients/' + client.id)}\r\n          aria-label='view'\r\n        >\r\n          <ViewIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={() => history.push('/clients/edit/' + client.id)}\r\n          aria-label='edit'\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton onClick={() => onArchieve?.(client)} aria-label='archive'>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Grid>\r\n    </MyCard>\r\n  )\r\n}\r\nexport default ClientCard\r\n","import { createContext, Dispatch, useEffect, useReducer } from 'react'\r\nimport { produce } from 'immer'\r\nimport Client from 'models/client'\r\nimport Plan from 'models/plan'\r\nimport { plans } from 'services/clientService'\r\n\r\nexport const ClientContext = createContext<\r\n  [state: ClientState, dispatch: Dispatch<ClientAction>] | null\r\n>(null)\r\n\r\ninterface ClientState {\r\n  clients: Client[]\r\n  plans: Plan[]\r\n  isLoading: boolean\r\n  onReloadPlans: boolean\r\n  pages: number\r\n  total: number\r\n}\r\n\r\nexport type ClientAction =\r\n  | { type: 'TOGGLE_LOADING' | 'ON_RELOAD_PLANS' }\r\n  | {\r\n      type: 'ON_LOAD_CLIENTS'\r\n      payload: { clients: Client[]; total?: number; pages?: number }\r\n    }\r\n  | { type: 'ON_LOAD_CLIENTS_INSTALLMENT'; payload: Client[] }\r\n  | { type: 'ON_LOAD_PLANS'; payload: Plan[] }\r\n  | { type: 'SET_IS_LOADING'; payload: boolean }\r\n  | { type: 'SET_TOTAL'; payload: number }\r\n  | { type: 'SET_PAGES'; payload: number }\r\n\r\nconst reducer = (state: ClientState, action: ClientAction) => {\r\n  switch (action.type) {\r\n    case 'ON_LOAD_PLANS':\r\n      state.plans = action.payload\r\n      break\r\n    case 'ON_RELOAD_PLANS':\r\n      state.onReloadPlans = !state.onReloadPlans\r\n      break\r\n    case 'ON_LOAD_CLIENTS':\r\n      state.clients = action.payload.clients\r\n      state.total = action.payload.total!\r\n      state.pages = action.payload.pages!\r\n      state.isLoading = false\r\n      break\r\n    case 'ON_LOAD_CLIENTS_INSTALLMENT':\r\n      state.clients = action.payload.filter(\r\n        (client) => client.payment_mode === 'Installment',\r\n      )\r\n      state.isLoading = false\r\n      break\r\n    case 'SET_IS_LOADING':\r\n      state.isLoading = action.payload\r\n      break\r\n    case 'TOGGLE_LOADING':\r\n      state.isLoading = !state.isLoading\r\n      break\r\n    case 'SET_PAGES':\r\n      state.pages = action.payload\r\n      break\r\n    case 'SET_TOTAL':\r\n      state.total = action.payload\r\n      break\r\n    default:\r\n      return state\r\n  }\r\n  return state\r\n}\r\n\r\nexport const ClientProvider: React.FC = (props) => {\r\n  const [state, dispatch] = useReducer(produce(reducer), {\r\n    clients: [],\r\n    plans,\r\n    isLoading: false,\r\n    onReloadPlans: false,\r\n    pages: 0,\r\n    total: 0,\r\n  })\r\n\r\n  // useEffect(() => {\r\n  //   getPlans().then((plans) => {\r\n  //     dispatch({ type: 'ON_LOAD_PLANS', payload: plans })\r\n  //   })\r\n  // }, [state.onReloadPlans])\r\n\r\n  return (\r\n    <ClientContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </ClientContext.Provider>\r\n  )\r\n}\r\n","import MySearchField from 'components/common/MySearchField'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport ClientCard from './ClientCard'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { getClients, ClientProps, archiveClient } from 'services/clientService'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport { ClientContext } from 'providers/ClientProvider'\r\nimport MySkeletonCards from 'components/common/MySkeletonCards'\r\nimport MyChips, { MyChip } from 'components/common/MyChips'\r\nimport MyAlertDialog, { AlertDataProps } from 'components/common/MyAlertDialog'\r\n\r\nimport qs from 'query-string'\r\nimport Scroll from 'react-scroll'\r\nimport Client from 'models/client'\r\n\r\nexport interface ClientsProps {}\r\n\r\nconst Clients: React.SFC<ClientsProps> = () => {\r\n  const [clientState, clientDispatch] = useContext(ClientContext)!\r\n\r\n  const [globalState, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const styles = useStyles()\r\n\r\n  const location = useLocation()\r\n\r\n  const scroll = Scroll.animateScroll\r\n\r\n  const history = useHistory()\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const [chip, setChip] = useState<MyChip>({ value: '', name: 'All' })\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Client Management' })\r\n    const { page, search } = qs.parse(location.search)\r\n    const currentPage = !!page ? +page : 1\r\n    setPage(currentPage)\r\n    onLoad({\r\n      page: currentPage,\r\n      search: (search as string) || '',\r\n    })\r\n    return () => {\r\n      globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n    }\r\n  }, [])\r\n\r\n  const onLoad = ({ page, category, search }: ClientProps) => {\r\n    clientDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    getClients({ page, category, search }).then(({ clients, pages, total }) => {\r\n      clientDispatch({\r\n        type: 'ON_LOAD_CLIENTS',\r\n        payload: { clients, pages, total },\r\n      })\r\n      globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n      scroll.scrollToTop({ duration: 1000 })\r\n    })\r\n  }\r\n\r\n  const onFilter = (chip: MyChip) => {\r\n    clientDispatch({ type: 'SET_TOTAL', payload: 0 })\r\n    setChip(chip)\r\n    setPage(1)\r\n    onLoad({ page: 1, category: chip.value })\r\n    if (!!chip.value) {\r\n      history.push('/clients')\r\n    }\r\n  }\r\n\r\n  const onPage = (e: any, page: number) => {\r\n    clientDispatch({ type: 'SET_TOTAL', payload: 0 })\r\n    setPage(page)\r\n    onLoad({ page, category: chip.value })\r\n    history.push('/clients?page=' + page)\r\n  }\r\n\r\n  const onSearch = (search: string) => {\r\n    setChip({ value: '', name: 'All' })\r\n    setPage(1)\r\n    onLoad({ page: 1, search })\r\n    history.push('/clients?search=' + search)\r\n  }\r\n\r\n  const isLoading = clientState.isLoading && !clientState.clients.length\r\n\r\n  const chips: MyChip[] = [\r\n    { value: '', name: 'All' },\r\n    { value: 'lapse', name: 'Lapsed' },\r\n    { value: 'near', name: 'Near' },\r\n    { value: 'on', name: 'On Commission' },\r\n    { value: 'no', name: 'No Commission' },\r\n    { value: 'installment', name: 'Installment' },\r\n    { value: 'fullpayment', name: 'Fullpayment' },\r\n  ]\r\n\r\n  const [alertDialog, setAlertDialog] = useState<AlertDataProps>({})\r\n\r\n  const [client, setClient] = useState<Client>()\r\n\r\n  const handleSelectedClient = (client: Client) => {\r\n    setClient(client)\r\n    setAlertDialog({\r\n      open: true,\r\n      text: `Are you sure you want to archive ${client.lastname}, ${client.firstname} ${client.middlename}?`,\r\n      description:\r\n        'Archiving will not permanently delete the client account in the database.',\r\n    })\r\n  }\r\n\r\n  const handleArchieve = () => {\r\n    archiveClient(client?.id!).then((data) => {\r\n      onLoad({\r\n        page,\r\n      })\r\n      globalDispatch({\r\n        type: 'SET_ALERT',\r\n        payload: { message: 'Successfully archived', type: 'success' },\r\n      })\r\n      setChip({ value: '', name: 'All' })\r\n    })\r\n    setAlertDialog({\r\n      open: false,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MyAlertDialog\r\n        onAgree={handleArchieve}\r\n        onDisagree={() => setAlertDialog({ open: false })}\r\n        data={alertDialog}\r\n      />\r\n      <MySearchField\r\n        labelWidth={160}\r\n        label='Name / Code / Branch'\r\n        onSearch={onSearch}\r\n        style={{ marginBottom: 5 }}\r\n      />\r\n\r\n      <MyChips\r\n        count={clientState.total}\r\n        onChipSelected={onFilter}\r\n        active={chip}\r\n        chips={chips}\r\n      ></MyChips>\r\n\r\n      {isLoading && <MySkeletonCards />}\r\n      {!isLoading && (\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction='column'\r\n          justify='flex-start'\r\n          alignItems='center'\r\n        >\r\n          {clientState.clients.map((client) => (\r\n            <Grid key={client.id} item xs={12}>\r\n              <ClientCard\r\n                onArchieve={handleSelectedClient}\r\n                key={client.id}\r\n                client={client}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          <Pagination\r\n            style={{ marginTop: 15, marginBottom: 15 }}\r\n            variant='outlined'\r\n            color='primary'\r\n            count={clientState.pages}\r\n            siblingCount={0}\r\n            page={page}\r\n            onChange={onPage}\r\n          />\r\n        </Grid>\r\n      )}\r\n\r\n      <Fab\r\n        onClick={() => history.push('/clients/new')}\r\n        className={styles.fab}\r\n        color='primary'\r\n        aria-label='add'\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: 60,\r\n      right: 20,\r\n    },\r\n  })\r\n)\r\n\r\nexport default Clients\r\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { calculateAge, toMoney } from 'utils/helper'\r\nimport MyCard from 'components/common/MyCard'\r\nimport Client from 'models/client'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\n\r\nimport { getClient, computeTotalCountPaid } from 'services/clientService'\r\nimport MySkeletonCard from 'components/common/MySkeletonCard'\r\nimport MyAvatar from 'components/common/MyAvatar'\r\n\r\nexport interface ViewClientProps {}\r\n\r\nconst ViewClient: React.SFC<ViewClientProps> = () => {\r\n  const history = useHistory()\r\n\r\n  const { id } = useParams<{ id: string }>()\r\n\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const [client, setClient] = useState<Client>()\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'View Client' })\r\n    getClient(+id).then((client) => {\r\n      setClient(client)\r\n      setIsLoading(false)\r\n    })\r\n  }, [])\r\n\r\n  const detail = (title: string, subtitle: any) => (\r\n    <Grid container alignItems='center' direction='column' item xs={6}>\r\n      <Typography component='h6' variant='h6'>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant='subtitle1' color='textSecondary'>\r\n        {subtitle}\r\n      </Typography>\r\n    </Grid>\r\n  )\r\n\r\n  return (\r\n    <Grid container xs={12}>\r\n      {isLoading && <MySkeletonCard />}\r\n      {client && !isLoading && (\r\n        <>\r\n          <MyCard title={'Code#' + client.code}>\r\n            <CardContent>\r\n              <Grid container xs={12} justify='space-between'>\r\n                <Grid\r\n                  style={{ paddingLeft: 10 }}\r\n                  container\r\n                  direction='column'\r\n                  item\r\n                  xs={7}\r\n                  justify='flex-start'\r\n                >\r\n                  <Typography component='h6' variant='h6'>\r\n                    {`${client.lastname}, ${client.firstname} ${client.middlename}`}\r\n                  </Typography>\r\n                  <Typography variant='subtitle1' color='textSecondary'>\r\n                    {client.plan?.name! + ' - ' + client.payment_mode}\r\n                  </Typography>\r\n                  {client.payment_mode === 'Installment' && (\r\n                    <>\r\n                      <Typography variant='caption' color='textSecondary'>\r\n                        {'Lapse on ' +\r\n                          new Date(client.next_payment!).toDateString()}\r\n                      </Typography>\r\n                      <Grid item xs={1}>\r\n                        <Chip\r\n                          style={{ marginTop: 5 }}\r\n                          size='small'\r\n                          label={computeTotalCountPaid(client) + ' Paid'}\r\n                          color='default'\r\n                          variant='outlined'\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  item\r\n                  xs={5}\r\n                  justify='center'\r\n                  alignItems='center'\r\n                >\r\n                  <MyAvatar src={client.image_url} />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n            <CardContent>\r\n              <Grid spacing={1} container xs={12} style={{ paddingLeft: 10 }}>\r\n                {detail('Period ', client.payment_period)}\r\n                {detail('Balance', toMoney(client.balance!))}\r\n                {detail('Branch', client?.branch?.name!)}\r\n                {detail(\r\n                  'Insured',\r\n                  new Date(client.created_at!).toLocaleDateString()\r\n                )}\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n            <CardContent>\r\n              <Grid spacing={1} container xs={12} style={{ paddingLeft: 10 }}>\r\n                {detail('Gender', client.gender)}\r\n                {detail('Civil Status', client.civil)}\r\n                {detail('Contact', client.contact)}\r\n                {detail(\r\n                  'Age',\r\n                  client.birthdate ? calculateAge(client.birthdate) : 'N/A'\r\n                )}\r\n\r\n                <Grid\r\n                  container\r\n                  alignItems='center'\r\n                  direction='column'\r\n                  item\r\n                  xs={12}\r\n                >\r\n                  <Typography component='h6' variant='h6'>\r\n                    Address\r\n                  </Typography>\r\n                  <Typography variant='subtitle1' color='textSecondary'>\r\n                    {client.address}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </MyCard>\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.push('/clients/edit/' + client.id)}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n              >\r\n                EDIT\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ViewClient\r\n","import Joi from 'joi'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst saveProfileValidator = {\r\n  firstname: lettersOnly('Firstname').min(1).max(50),\r\n  middlename: lettersOnly('Middlename').min(1).max(50),\r\n  lastname: lettersOnly('Lastname').min(1).max(50),\r\n  civil: notNull('Civil Status'),\r\n  gender: notNull('Gender'),\r\n}\r\n\r\nexport default saveProfileValidator\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MyForm, { MyFormProps } from \"components/common/MyForm\";\r\nimport Profile from \"models/profile\";\r\nimport validator from \"validators/saveProfileValidator\";\r\nimport { GlobalContext } from \"providers/GlobalProvider\";\r\n\r\nexport interface ClientStepOneProps {\r\n  state: [Profile, React.Dispatch<React.SetStateAction<Profile>>];\r\n  onNext: (profile: Profile) => Promise<void>;\r\n}\r\n\r\nexport const ClientStepOne: React.SFC<ClientStepOneProps> = ({\r\n  state: [profile, setProfile],\r\n  onNext,\r\n}) => {\r\n  const [{ currentUser }, _] = useContext(GlobalContext)!;\r\n\r\n  const history = useHistory();\r\n\r\n  const [imageFile, setImageFile] = React.useState<HTMLImageElement | null>(\r\n    null\r\n  );\r\n\r\n  const formProps: MyFormProps<Profile> = {\r\n    state: [profile, setProfile],\r\n    onSubmit: onNext,\r\n    validator,\r\n  };\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: \"Firstname\",\r\n            value: profile.firstname,\r\n            name: \"firstname\",\r\n          })}\r\n          {myInput({\r\n            label: \"Middlename\",\r\n            value: profile.middlename,\r\n            name: \"middlename\",\r\n          })}\r\n          {myInput({\r\n            label: \"Lastname\",\r\n            value: profile.lastname,\r\n            name: \"lastname\",\r\n          })}\r\n          {myInput({\r\n            label: \"Contact Number\",\r\n            value: profile.contact,\r\n            name: \"contact\",\r\n          })}\r\n\r\n          {myInput({\r\n            label: \"Address\",\r\n            value: profile.address,\r\n            name: \"address\",\r\n            isMultiline: true,\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: \"Birthdate\",\r\n            value: profile.birthdate,\r\n            name: \"birthdate\",\r\n          })}\r\n\r\n          {mySelect({\r\n            label: \"Gender\",\r\n            value: profile.gender,\r\n            name: \"gender\",\r\n            options: [\r\n              { value: \"Male\" },\r\n              { value: \"Female\" },\r\n              { value: \"Other\" },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: \"Civil Status\",\r\n            value: profile.civil,\r\n            name: \"civil\",\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: \"Single\" },\r\n              { value: \"Married\" },\r\n              { value: \"Widowed\" },\r\n            ],\r\n          })}\r\n\r\n          <Grid\r\n            container\r\n            style={{\r\n              paddingLeft: 15,\r\n              paddingRight: 15,\r\n              marginBottom: 10,\r\n            }}\r\n            alignItems=\"center\"\r\n            justify=\"space-between\"\r\n            xs={12}\r\n          >\r\n            <Typography variant=\"subtitle1\">\r\n              {imageFile?.name || \"Select Photo\"}\r\n            </Typography>\r\n            <>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{\r\n                  display: \"none\",\r\n                }}\r\n                name=\"image\"\r\n                id=\"icon-button-file\"\r\n                type=\"file\"\r\n                onChange={(e: any) => {\r\n                  setImageFile(e.target.files[0]);\r\n                }}\r\n              />\r\n              <label htmlFor=\"icon-button-file\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  aria-label=\"upload picture\"\r\n                  component=\"span\"\r\n                >\r\n                  <PhotoCamera />\r\n                </IconButton>\r\n              </label>\r\n            </>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              {currentUser?.role === \"admin\" && (\r\n                <Button\r\n                  onClick={() => history.goBack()}\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                >\r\n                  BACK\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton(\"NEXT\")}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  );\r\n};\r\n\r\nexport default ClientStepOne;\r\n","import Joi from 'joi'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst clientStepTwoValidator = {\r\n  branch_manager: notNull('Branch Manager'),\r\n  agency_manager: notNull('Agency Manager'),\r\n  supervisor: notNull('Supervisor'),\r\n  sales_agent: Joi.optional(),\r\n  position: notNull('Position'),\r\n  insured_employee: Joi.optional(),\r\n}\r\n\r\nexport default clientStepTwoValidator\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MyForm, { MyFormProps } from 'components/common/MyForm'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport validator from 'validators/clientStepTwoValidator'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport { getEmployees } from 'services/employeeService'\r\nimport Employee from 'models/employee'\r\nimport Branch from 'models/branch'\r\nimport { access } from 'fs'\r\nimport Employees from 'components/pages/Employees'\r\n\r\nexport interface ClientStepTwoProps {\r\n  onBack: () => void\r\n  onNext: (commissioner: Commissioner) => Promise<void>\r\n  state: [Commissioner, React.Dispatch<React.SetStateAction<Commissioner>>]\r\n  employees: Employee[]\r\n}\r\n\r\nexport const ClientStepTwo: React.SFC<ClientStepTwoProps> = ({\r\n  state: [commissioner, setCommissioner],\r\n  onBack,\r\n  onNext,\r\n  employees,\r\n}) => {\r\n  const [branch, setBranch] = useState<{ value: any; name: string } | null>(\r\n    null\r\n  )\r\n\r\n  const formProps: MyFormProps<Commissioner> = {\r\n    state: [commissioner, setCommissioner],\r\n    onSubmit: onNext,\r\n    validator,\r\n    radioButtonDefaultValue: commissioner.position,\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCommissioner({\r\n      position: 'sales_agent',\r\n    })\r\n  }, [branch])\r\n\r\n  const employeeOptions = (id: number) =>\r\n    employees\r\n      .filter(\r\n        (employee) =>\r\n          employee.position?.id === id && +branch?.value === employee.branch?.id\r\n      )\r\n      .map((employee) => ({\r\n        value: employee.id || '',\r\n        name: `${employee.profile?.lastname}, ${employee.profile?.firstname}`,\r\n      }))\r\n\r\n  const branchOptions: { value: any; name: string }[] = []\r\n  const map = new Map()\r\n  for (const employee of employees) {\r\n    if (!map.has(employee?.branch?.id)) {\r\n      map.set(employee?.branch?.id, true)\r\n      branchOptions.push({\r\n        value: +employee.branch?.id!,\r\n        name: employee.branch?.name!,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBranch = (e: any) => {\r\n    const b = branchOptions.find((b) => b.value === +e.target.value)\r\n    console.log(b)\r\n    setBranch(b || null)\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myRadio, mySelect, myButton }) => (\r\n        <>\r\n          <Grid\r\n            style={{ paddingLeft: 10, marginTop: 5 }}\r\n            spacing={2}\r\n            container\r\n            xs={12}\r\n          >\r\n            <Grid item xs={12}>\r\n              {mySelect({\r\n                label: 'Branch',\r\n                value: branch?.value || '',\r\n                name: 'branch',\r\n                labelWidth: 120,\r\n                onChange: handleBranch,\r\n                options: branchOptions,\r\n              })}\r\n            </Grid>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Branch Manager',\r\n                  value: commissioner.branch_manager || '',\r\n                  name: 'branch_manager',\r\n                  labelWidth: 120,\r\n                  options: employeeOptions(1),\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'branch_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Agency Manager',\r\n                  value: commissioner.agency_manager || '',\r\n                  name: 'agency_manager',\r\n                  labelWidth: 120,\r\n                  options: employeeOptions(2),\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'agency_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Supervisor',\r\n                  value: commissioner.supervisor || '',\r\n                  name: 'supervisor',\r\n                  labelWidth: 80,\r\n                  options: employeeOptions(3),\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'supervisor', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Sales Agent',\r\n                  value: commissioner.sales_agent || '',\r\n                  name: 'sales_agent',\r\n                  labelWidth: 85,\r\n                  options: employeeOptions(4),\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'sales_agent', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 15, paddingBottom: 15 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => onBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('NEXT')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    instructions: {\r\n      padding: 0,\r\n      paddingBottom: 20,\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  }),\r\n)\r\n\r\nexport interface MyStepperProps {\r\n  steps: string[]\r\n  activeStep?: number\r\n}\r\n\r\nexport const useStepper = (steps: string[]) => {\r\n  const [activeStep, setActiveStep] = React.useState(0)\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0)\r\n  }\r\n  return { steps, activeStep, handleNext, handleBack, handleReset }\r\n}\r\n\r\nconst MyStepper: React.FC<MyStepperProps> = ({ steps, activeStep }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Stepper\r\n      className={classes.instructions}\r\n      activeStep={activeStep}\r\n      alternativeLabel\r\n    >\r\n      {steps.map((label) => (\r\n        <Step key={label}>\r\n          <StepLabel>{label}</StepLabel>\r\n        </Step>\r\n      ))}\r\n    </Stepper>\r\n  )\r\n}\r\n\r\nexport default MyStepper\r\n","import Joi from 'joi'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst clientStepThreeValidator = {\r\n  plan: notNull('Plan'),\r\n  amount: Joi.number().required().label('Amount'),\r\n  payment_mode: notNull('Payment Mode'),\r\n  or_number: notNull('OR Number'),\r\n  payment_period: Joi.when('payment_mode', {\r\n    is: Joi.string().valid('Fullpayment'),\r\n    then: Joi.valid(null),\r\n    otherwise: notNull('Payment Period'),\r\n  }),\r\n  created_at: notNull('Insure Date'),\r\n}\r\n\r\nexport default clientStepThreeValidator\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MyForm, { MyFormProps, OptionProps } from 'components/common/MyForm'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport validator from 'validators/clientStepThreeValidator'\r\nimport { getAmountToPay } from 'services/clientService'\r\nimport { ClientContext } from 'providers/ClientProvider'\r\nimport Payment from 'models/payment'\r\n\r\nexport interface ClientStepTwoProps {\r\n  onBack: () => void\r\n  onNext: (client: Client & Payment) => Promise<void>\r\n  state: [\r\n    Client & Payment,\r\n    React.Dispatch<React.SetStateAction<Client & Payment>>,\r\n  ]\r\n}\r\n\r\nexport const ClientStepThree: React.SFC<ClientStepTwoProps> = ({\r\n  state: [client, setClient],\r\n  onBack,\r\n  onNext,\r\n}) => {\r\n  const [clientState, clientDispatch] = useContext(ClientContext)!\r\n  const [planOptions, setPlanOptions] = useState<OptionProps[] | []>([])\r\n\r\n  useEffect(() => {\r\n    if (client.payment_mode && client.plan) {\r\n      const plan = clientState.plans.filter(\r\n        (plan) => plan.id === (client.plan as any),\r\n      )[0]\r\n      setClient((client) => ({\r\n        ...client,\r\n        amount: getAmountToPay({ ...client, plan }) ?? 0,\r\n      }))\r\n    }\r\n  }, [client.payment_mode, client.payment_period, client.plan])\r\n\r\n  useEffect(() => {\r\n    const options: OptionProps[] = clientState.plans.map((plan) => ({\r\n      value: plan.id,\r\n      name: plan.name,\r\n    }))\r\n    setPlanOptions(options)\r\n  }, [clientState.plans])\r\n\r\n  const formProps: MyFormProps<Client & Payment> = {\r\n    state: [client, setClient],\r\n    onSubmit: onNext,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({\r\n        myControlledInput,\r\n        myInput,\r\n        mySelect,\r\n        myButton,\r\n        myDateTimePicker,\r\n      }) => (\r\n        <>\r\n          {mySelect({\r\n            label: 'Plan',\r\n            value: client.plan,\r\n            name: 'plan',\r\n            labelWidth: 30,\r\n            options: planOptions,\r\n          })}\r\n          {mySelect({\r\n            label: 'Payment Mode',\r\n            value: client.payment_mode,\r\n            name: 'payment_mode',\r\n            labelWidth: 110,\r\n            options: [{ value: 'Installment' }, { value: 'Fullpayment' }],\r\n          })}\r\n\r\n          {client.payment_mode && client.plan && (\r\n            <>\r\n              {client.payment_mode === 'Installment' &&\r\n                mySelect({\r\n                  label: 'Payment Period',\r\n                  value: client.payment_period,\r\n                  name: 'payment_period',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 'Monthly' },\r\n                    { value: 'Quarterly' },\r\n                    { value: 'Semi-Annually' },\r\n                    { value: 'Annually' },\r\n                  ],\r\n                })}\r\n              <Grid\r\n                xs={12}\r\n                spacing={1}\r\n                style={{\r\n                  marginBottom: 10,\r\n                  marginTop: 5,\r\n                  paddingLeft: 8,\r\n                }}\r\n                container\r\n              >\r\n                {myControlledInput({\r\n                  label: 'Amount',\r\n                  name: 'amount',\r\n                  value: client.amount,\r\n                })}\r\n                <Grid style={{ marginTop: 10 }} xs={12} item>\r\n                  {myInput({\r\n                    label: 'OR Number',\r\n                    name: 'or_number',\r\n                  })}\r\n                </Grid>\r\n              </Grid>\r\n              {myDateTimePicker({\r\n                label: 'Insure Date',\r\n                value: client.created_at,\r\n                name: 'created_at',\r\n              })}\r\n            </>\r\n          )}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 15, paddingBottom: 15 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => onBack()}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('PAY')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Profile from 'models/profile'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport { ClientStepOne } from './ClientStepOne'\r\nimport { ClientStepTwo } from './ClientStepTwo'\r\nimport MyStepper, { useStepper } from 'components/common/MyStepper'\r\nimport { ClientStepThree } from './ClientStepThree'\r\nimport Scroll from 'react-scroll'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport Payment from 'models/payment'\r\nimport { postImage } from 'services/imageService'\r\nimport { saveClient } from 'services/clientService'\r\nimport { getEmployees } from 'services/employeeService'\r\nimport Employee from 'models/employee'\r\nimport { getBranches } from 'services/branchService'\r\nimport { BranchContext } from 'providers/BranchProvider'\r\n\r\nexport interface NewClientProps {}\r\n\r\nconst NewClient: React.SFC<NewClientProps> = () => {\r\n  const [{ currentUser }, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const scroll = Scroll.animateScroll\r\n\r\n  const [employees, setEmployees] = useState<Employee[]>([])\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Client Registration' })\r\n    scroll.scrollToTop({ duration: 500 })\r\n    getEmployees({ category: 'active' }).then((employees) => {\r\n      setEmployees(employees)\r\n    })\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n  const stepper = useStepper([\r\n    'Create Profile Account',\r\n    'Select All Commissioners',\r\n    'Select Plan And Payment',\r\n  ])\r\n\r\n  const [profile, setProfile] = React.useState<Profile>({})\r\n\r\n  const [commissioner, setCommissioner] = React.useState<Commissioner>({\r\n    position: 'sales_agent',\r\n  })\r\n\r\n  const [client, setClient] = React.useState<Client & Payment>({\r\n    years_to_pay: 5,\r\n    created_at: new Date(Date.now()),\r\n  })\r\n\r\n  const onNextOne = async (profile: Profile) => {\r\n    scroll.scrollToTop({ duration: 500 })\r\n    console.log('profile', profile)\r\n    setProfile(profile)\r\n    stepper.handleNext()\r\n  }\r\n\r\n  const onNextTwo = async (commissioner: Commissioner) => {\r\n    const insured_employee = commissioner[commissioner.position] ?? 0\r\n\r\n    if (!insured_employee) {\r\n      globalDispatch({\r\n        type: 'SET_ALERT',\r\n        payload: {\r\n          message:\r\n            'Sales Agent is not present! Please select another employee.',\r\n          type: 'error',\r\n        },\r\n      })\r\n\r\n      return\r\n    }\r\n\r\n    scroll.scrollToTop({ duration: 500 })\r\n\r\n    setClient((client) => ({ ...client, insured_employee }))\r\n\r\n    setCommissioner(commissioner)\r\n\r\n    stepper.handleNext()\r\n\r\n    console.log(commissioner)\r\n  }\r\n\r\n  const onNextThree = async (client: Client & Payment) => {\r\n    scroll.scrollToTop({ duration: 500 })\r\n\r\n    const transaction = {\r\n      ...profile,\r\n      ...client,\r\n      ...commissioner,\r\n      branch: getBranchId(+commissioner?.branch_manager!),\r\n    }\r\n\r\n    return postImage(transaction?.image!, (image_url: string) => {\r\n      transaction.image_url = image_url\r\n      delete transaction.image\r\n\r\n      return saveClient(transaction)\r\n        .then(() => {\r\n          globalDispatch({\r\n            type: 'SET_ALERT',\r\n            payload: { message: 'Successfully added', type: 'success' },\r\n          })\r\n          globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n          stepper.handleNext()\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 400) {\r\n            globalDispatch({\r\n              type: 'SET_ALERT',\r\n              payload: { message: error.response.data.error, type: 'error' },\r\n            })\r\n            return\r\n          }\r\n          globalDispatch({\r\n            type: 'SET_ALERT',\r\n            payload: { message: error.message, type: 'error' },\r\n          })\r\n          globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  const getBranchId = (employeeId: number) => {\r\n    return employees.filter((employee) => employee.id === employeeId)[0].branch\r\n      ?.id\r\n  }\r\n\r\n  const onAddNew = () => {\r\n    stepper.handleReset()\r\n    setProfile({})\r\n    setCommissioner({\r\n      position: 'sales_agent',\r\n    })\r\n    setClient({\r\n      years_to_pay: 5,\r\n      created_at: new Date(Date.now()),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MyStepper {...stepper} />\r\n      {stepper.activeStep === 0 && (\r\n        <ClientStepOne onNext={onNextOne} state={[profile, setProfile]} />\r\n      )}\r\n      {stepper.activeStep === 1 && (\r\n        <ClientStepTwo\r\n          employees={employees}\r\n          onBack={() => stepper.handleBack()}\r\n          onNext={onNextTwo}\r\n          state={[commissioner, setCommissioner]}\r\n        />\r\n      )}\r\n      {stepper.activeStep === 2 && (\r\n        <ClientStepThree\r\n          onBack={() => stepper.handleBack()}\r\n          onNext={onNextThree}\r\n          state={[client, setClient]}\r\n        />\r\n      )}\r\n\r\n      {stepper.activeStep === 3 && (\r\n        <Grid container xs={12} direction='column' alignItems='center'>\r\n          <Typography component='h6' variant='subtitle1'>\r\n            All Steps Completed!\r\n          </Typography>\r\n          <Grid spacing={2} item container xs={12}>\r\n            <Grid item xs={6}>\r\n              {currentUser?.role === 'admin' && (\r\n                <Button\r\n                  onClick={() => history.replace('/clients')}\r\n                  style={{ marginTop: 10 }}\r\n                  fullWidth\r\n                  variant='contained'\r\n                  color='default'\r\n                >\r\n                  CLIENT LIST\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={onAddNew}\r\n                style={{ marginTop: 10 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n              >\r\n                ADD NEW\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewClient\r\n","import Joi from 'joi'\r\nimport { notNull } from 'utils/helper'\r\n\r\nconst signInValidator = {\r\n  username: notNull('Username'),\r\n  password: Joi.string().min(8).max(50).required().label('Password'),\r\n}\r\n\r\nexport default signInValidator\r\n","export default __webpack_public_path__ + \"static/media/revenue.a8292d0f.svg\";","import Grid from '@material-ui/core/Grid'\r\nimport MyForm, { MyFormProps } from 'components/common/MyForm'\r\nimport User from 'models/user'\r\nimport { onSignIn } from 'services/authService'\r\nimport validator from 'validators/signInValidator'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport logo from 'assets/revenue.svg'\r\n\r\nimport { getCurrentUser, saveToken, nameCapitalize } from 'utils/helper'\r\n\r\nexport interface SignInProps {}\r\n\r\nconst SignIn: React.SFC<SignInProps> = () => {\r\n  const styles = useStyles()\r\n\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'SET_TITLE', payload: 'BRAND NAME' })\r\n  }, [])\r\n\r\n  const [user, setUser] = useState<User>({\r\n    username: 'admin123',\r\n    password: 'admin123',\r\n  })\r\n\r\n  const onSubmit = async (user: User) => {\r\n    return onSignIn(user)\r\n      .then((access_token) => {\r\n        saveToken(access_token)\r\n        const currentUser = getCurrentUser()\r\n        dispatch({ type: 'SET_CURRENT_USER', payload: currentUser })\r\n        // dispatch({\r\n        //   type: 'SET_ALERT',\r\n        //   payload: {\r\n        //     message: `Welcome, ${nameCapitalize(currentUser.username)}`,\r\n        //     type: 'success',\r\n        //   },\r\n        // })\r\n      })\r\n      .catch(({ response }) => {\r\n        if (response.status === 401) {\r\n          dispatch({\r\n            type: 'SET_ALERT',\r\n            payload: {\r\n              message: response.data.error,\r\n              type: 'error',\r\n            },\r\n          })\r\n        }\r\n      })\r\n  }\r\n  const formProps: MyFormProps<User> = {\r\n    state: [user, setUser],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      style={{ minHeight: 450 }}\r\n      justify='space-between'\r\n      container\r\n      direction='column'\r\n      xs={12}\r\n    >\r\n      <Grid\r\n        style={{ marginTop: 20 }}\r\n        direction='row'\r\n        container\r\n        justify='center'\r\n        alignItems='flex-start'\r\n      >\r\n        <img style={{ zIndex: 1 }} width={300} src={logo} alt='brand logo' />\r\n      </Grid>\r\n\r\n      <div className={styles.formContainer}>\r\n        <MyForm {...formProps}>\r\n          {({ myInput, myButton }) => (\r\n            <>\r\n              {myInput({\r\n                label: 'Username',\r\n                value: user.username,\r\n                name: 'username',\r\n              })}\r\n              {myInput({\r\n                label: 'Password',\r\n                value: user.password,\r\n                name: 'password',\r\n                type: 'password',\r\n              })}\r\n              {myButton('LOGIN')}\r\n            </>\r\n          )}\r\n        </MyForm>\r\n      </div>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formContainer: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'flex-end',\r\n      marginTop: 50,\r\n      paddingLeft: 20,\r\n      paddingRight: 20,\r\n    },\r\n  })\r\n)\r\n\r\nexport default SignIn\r\n","import User from 'models/user'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\n\r\nimport React, { useContext } from 'react'\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom'\r\nimport { getCurrentUser } from 'utils/helper'\r\n\r\nconst AuthRoute: React.FC<RouteProps & { isAdmin?: boolean }> = ({\r\n  path,\r\n  component: Component,\r\n  render,\r\n  isAdmin = false,\r\n  ...rest\r\n}) => {\r\n  const [state] = useContext(GlobalContext)!\r\n\r\n  const currentUser: User | null = getCurrentUser()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!currentUser)\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/signin',\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          )\r\n\r\n        if (isAdmin && currentUser?.role !== 'admin')\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/not-found',\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          )\r\n        \r\n        return Component ? <Component {...props} /> : render?.(props)\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default AuthRoute\r\n","import { GlobalContext } from 'providers/GlobalProvider'\r\n\r\nimport React, { useContext } from 'react'\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom'\r\nimport { getCurrentUser } from 'utils/helper'\r\n\r\nconst AuthRoute: React.FC<RouteProps & { isAdmin?: boolean }> = ({\r\n  path,\r\n  component: Component,\r\n  render,\r\n  isAdmin = false,\r\n  ...rest\r\n}) => {\r\n  const [state] = useContext(GlobalContext)!\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/',\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          )\r\n\r\n        return Component ? <Component {...props} /> : render?.(props)\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default AuthRoute\r\n","import Joi from 'joi'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst clientTransactionValidator = {\r\n  branch_manager: notNull('Branch Manager'),\r\n  agency_manager: notNull('Agency Manager'),\r\n  supervisor: notNull('Supervisor'),\r\n  position: notNull('Position'),\r\n  amount: Joi.number().positive().not(0).required().label('Amount'),\r\n  payment_mode: notNull('Payment Mode'),\r\n  or_number: notNull('OR Number'),\r\n}\r\n\r\nexport default clientTransactionValidator\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MyForm, { MyFormProps, RenderProps } from 'components/common/MyForm'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport validator from 'validators/clientTransactionValidator'\r\nimport Transaction from 'models/transaction'\r\nimport Employee from 'models/employee'\r\n\r\nexport interface ClientStepTwoProps {\r\n  onSubmit: (transaction: Transaction) => Promise<void>\r\n  state: [\r\n    Transaction,\r\n    React.Dispatch<React.SetStateAction<Transaction & Client>>\r\n  ]\r\n  employees: Employee[]\r\n}\r\n\r\nexport const CommissionersForm: React.SFC<ClientStepTwoProps> = ({\r\n  state: [transaction, setTransaction],\r\n  onSubmit,\r\n  employees,\r\n}) => {\r\n  const formProps: MyFormProps<Transaction> = {\r\n    state: [transaction, setTransaction],\r\n    onSubmit,\r\n    validator,\r\n    radioButtonDefaultValue: transaction.position,\r\n  }\r\n\r\n  const [branch, setBranch] = useState<{ value: any; name: string } | null>(\r\n    null\r\n  )\r\n\r\n  console.log({ transaction })\r\n\r\n  const branchOptions: { value: any; name: string }[] = []\r\n\r\n  useEffect(() => {\r\n    setBranch(\r\n      branchOptions.find((b) => b.value === +transaction?.branch?.id!) || null\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setTransaction((transaction) => ({\r\n      ...transaction,\r\n      branch_manager: '',\r\n      agency_manager: '',\r\n      supervisor: '',\r\n      sales_agent: '',\r\n    }))\r\n  }, [branch])\r\n\r\n  const handleBranch = (e: any) => {\r\n    const b = branchOptions.find((b) => b.value === +e.target.value)\r\n\r\n    setBranch(b || null)\r\n  }\r\n\r\n  const employeeOptions = (id: number) =>\r\n    employees\r\n      .filter(\r\n        (employee) =>\r\n          employee.position?.id === id && +branch?.value === employee.branch?.id\r\n      )\r\n      .map((employee) => ({\r\n        value: employee.id || '',\r\n        name: `${employee.profile?.lastname}, ${employee.profile?.firstname}`,\r\n      }))\r\n\r\n  const map = new Map()\r\n  for (const employee of employees) {\r\n    if (!map.has(employee?.branch?.id)) {\r\n      map.set(employee?.branch?.id, true)\r\n      branchOptions.push({\r\n        value: +employee.branch?.id!,\r\n        name: employee.branch?.name!,\r\n      })\r\n    }\r\n  }\r\n\r\n  const labelMode =\r\n    transaction.payment_mode !== 'Installment'\r\n      ? transaction.payment_mode === 'Fullpayment'\r\n        ? 'Balance'\r\n        : 'Amount'\r\n      : 'Amount'\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myRadio, mySelect, myButton, myControlledInput, myInput }) => (\r\n        <>\r\n          <Grid\r\n            style={{ paddingLeft: 10, marginTop: 5, marginBottom: 10 }}\r\n            spacing={2}\r\n            container\r\n            xs={12}\r\n          >\r\n            {mySelect({\r\n              label: 'Payment Mode',\r\n              value: transaction.payment_mode,\r\n              name: 'payment_mode',\r\n              labelWidth: 110,\r\n              options: [{ value: 'Installment' }, { value: 'Fullpayment' }],\r\n            })}\r\n            {myControlledInput({\r\n              label: labelMode,\r\n              value: transaction.amount,\r\n              name: 'amount',\r\n            })}\r\n            {myInput({\r\n              label: 'OR Number',\r\n              value: transaction.or_number,\r\n              name: 'or_number',\r\n            })}\r\n\r\n            {mySelect({\r\n              label: 'Branch',\r\n              value: branch?.value || '',\r\n              name: 'branch',\r\n              labelWidth: 120,\r\n              onChange: handleBranch,\r\n              options: branchOptions,\r\n            })}\r\n\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Branch Manager',\r\n                  value: transaction.branch_manager,\r\n                  name: 'branch_manager',\r\n                  labelWidth: 120,\r\n                  options: employeeOptions(1),\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'branch_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Agency Manager',\r\n                  value: transaction.agency_manager,\r\n                  name: 'agency_manager',\r\n                  labelWidth: 120,\r\n                  options: employeeOptions(2),\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'agency_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Supervisor',\r\n                  value: transaction.supervisor,\r\n                  name: 'supervisor',\r\n                  labelWidth: 80,\r\n                  options: employeeOptions(3),\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'supervisor', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Sales Agent',\r\n                  value: transaction.sales_agent,\r\n                  name: 'sales_agent',\r\n                  labelWidth: 85,\r\n                  options: employeeOptions(4),\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'sales_agent', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n\r\n            {myButton()}\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n\r\nexport default CommissionersForm\r\n","import Payment from 'models/payment'\r\nimport http from 'utils/http'\r\n\r\nexport const getPayments = (props?: {\r\n  page?: number\r\n  search?: string\r\n  category?: string\r\n}) => {\r\n  return http\r\n    .get(\r\n      `/payments?page=${props?.page || ''}&search=${\r\n        props?.search || ''\r\n      }&category=${props?.category || ''}`\r\n    )\r\n    .then(({ data }) => ({\r\n      total: data.count,\r\n      pages: data.pages,\r\n      payments: data.items.map((item: any) => ({\r\n        ...item,\r\n        payment: { id: item.payment_id },\r\n        client: { ...item.client.profile, ...item.client },\r\n      })),\r\n    }))\r\n}\r\n\r\nexport const getPayment = (id: number) => {\r\n  return http.get('/payments/' + id).then(({ data }) => data)\r\n}\r\n\r\nexport const savePayments = (payment: any) => {\r\n  return http.post('/payments', payment).then(({ data }) => data)\r\n}\r\n\r\nexport const getRecentCommissionerByClient = (id: number) => {\r\n  return http.get('/commissions/client/' + id).then(({ data }) => data)\r\n}\r\n","import Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {\r\n  getAmountToPay,\r\n  getLapsedClients,\r\n  getClients,\r\n} from 'services/clientService'\r\nimport MyMiniCards from 'components/common/MyMiniCards'\r\nimport MySearchField from 'components/common/MySearchField'\r\nimport MyAvatar from 'components/common/MyAvatar'\r\nimport Client from 'models/client'\r\nimport { ClientContext } from 'providers/ClientProvider'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport CommissionersForm from './TransactionForm'\r\nimport TransactionModel from 'models/transaction'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport MySkeletonMiniCards from 'components/common/MySkeletonMiniCards'\r\nimport { getEmployees } from 'services/employeeService'\r\nimport Employee from 'models/employee'\r\nimport {\r\n  getRecentCommissionerByClient,\r\n  savePayments,\r\n} from 'services/paymentService'\r\n\r\nexport interface TransactionProps {}\r\n\r\nconst Transaction: React.SFC<TransactionProps> = () => {\r\n  const [clientState, clientDispatch] = useContext(ClientContext)!\r\n\r\n  const [globalState, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const [employees, setEmployees] = useState<Employee[]>([])\r\n\r\n  const [transaction, setTransaction] = useState<TransactionModel>({\r\n    position: 'sales_agent',\r\n    amount: 0,\r\n  })\r\n\r\n  useEffect(() => {\r\n    clientDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Encode Transaction' })\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    getLapsedClients('').then((clients) => {\r\n      clientDispatch({\r\n        type: 'ON_LOAD_CLIENTS',\r\n        payload: { clients },\r\n      })\r\n      globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n    })\r\n\r\n    getEmployees({ category: 'active' }).then((employees) => {\r\n      setEmployees(employees)\r\n    })\r\n    return () => {\r\n      globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (transaction.id) {\r\n      let amount: number = 0\r\n\r\n      switch (transaction.payment_mode) {\r\n        case 'Installment':\r\n          amount = getAmountToPay(transaction)\r\n          break\r\n        case 'Fullpayment':\r\n          amount = transaction?.balance!\r\n          break\r\n        default:\r\n          break\r\n      }\r\n      setTransaction((transaction) => ({\r\n        ...transaction,\r\n        amount,\r\n      }))\r\n\r\n      getRecentCommissionerByClient(transaction.id).then((employees: any) => {\r\n        const getCommissioner = (id: number) =>\r\n          employees.find((employee: any) =>\r\n            globalState.currentUser?.role === 'admin'\r\n              ? employee.positionId === id\r\n              : employee.positionId === id &&\r\n                employee.branchId === globalState.currentUser?.branch?.id!\r\n          )?.id || ''\r\n\r\n        const branch_manager = getCommissioner(1)\r\n        const agency_manager = getCommissioner(2)\r\n        const supervisor = getCommissioner(3)\r\n        const sales_agent = getCommissioner(4)\r\n\r\n        setTransaction((transaction) => ({\r\n          ...transaction,\r\n          branch_manager,\r\n          agency_manager,\r\n          supervisor,\r\n          sales_agent,\r\n        }))\r\n      })\r\n    }\r\n  }, [transaction.payment_mode, transaction.id])\r\n\r\n  const handleSelected = (client: Client) => {\r\n    setTransaction((transaction) => ({\r\n      ...transaction,\r\n      ...client,\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async (transaction: TransactionModel) => {\r\n    if (!transaction.id) {\r\n      globalDispatch({\r\n        type: 'SET_ALERT',\r\n        payload: { message: 'Please Select a Client!', type: 'error' },\r\n      })\r\n      return\r\n    }\r\n\r\n    const insured_employee = transaction[transaction.position] ?? 0\r\n\r\n    if (!insured_employee) {\r\n      globalDispatch({\r\n        type: 'SET_ALERT',\r\n        payload: {\r\n          message:\r\n            'Sales Agent is not present! Please select another employee.',\r\n          type: 'error',\r\n        },\r\n      })\r\n\r\n      return\r\n    }\r\n\r\n    const {\r\n      id,\r\n      amount,\r\n      or_number,\r\n      branch_manager,\r\n      agency_manager,\r\n      supervisor,\r\n      sales_agent,\r\n      created_at,\r\n    } = transaction\r\n\r\n    const payment = {\r\n      client: id,\r\n      insured_employee,\r\n      amount,\r\n      or_number,\r\n      branch_manager,\r\n      agency_manager,\r\n      supervisor,\r\n      sales_agent,\r\n      created_at,\r\n    }\r\n\r\n    return savePayments(payment)\r\n      .then((data) => {\r\n        globalDispatch({\r\n          type: 'SET_ALERT',\r\n          payload: {\r\n            message: 'Successfully save!',\r\n            type: 'success',\r\n          },\r\n        })\r\n        setTransaction({\r\n          position: 'sales_agent',\r\n          amount: 0,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.status === 400) {\r\n          globalDispatch({\r\n            type: 'SET_ALERT',\r\n            payload: {\r\n              message: error.response.data.error,\r\n              type: 'error',\r\n            },\r\n          })\r\n          return\r\n        }\r\n        globalDispatch({\r\n          type: 'SET_ALERT',\r\n          payload: {\r\n            message: error.message,\r\n            type: 'error',\r\n          },\r\n        })\r\n      })\r\n  }\r\n\r\n  const onSearch = (search: string) => {\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    getLapsedClients(search).then((clients) => {\r\n      clientDispatch({\r\n        type: 'ON_LOAD_CLIENTS',\r\n        payload: { clients },\r\n      })\r\n      globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n      setTransaction({\r\n        position: 'sales_agent',\r\n        amount: 0,\r\n      })\r\n    })\r\n  }\r\n\r\n  const isLoading = clientState.isLoading && !clientState.clients.length\r\n\r\n  return (\r\n    <Grid container direction='column' xs={12}>\r\n      <MySearchField onSearch={onSearch} labelWidth={100} label='Name / Code' />\r\n      {isLoading && <MySkeletonMiniCards></MySkeletonMiniCards>}\r\n\r\n      {!isLoading && (\r\n        <MyMiniCards\r\n          onSelected={handleSelected}\r\n          style={{ marginTop: 10 }}\r\n          items={clientState.clients}\r\n        >\r\n          {({ renderCards, item }) => (\r\n            <>\r\n              {renderCards({\r\n                title: `${item?.lastname}, ${item?.firstname} ${item?.middlename}`,\r\n                subtitle: item.code!,\r\n                src: item.image_url,\r\n                item,\r\n              })}\r\n            </>\r\n          )}\r\n        </MyMiniCards>\r\n      )}\r\n      <Divider style={{ margin: 20 }}></Divider>\r\n      {!transaction.id && (\r\n        <Grid container xs={12} justify='center'>\r\n          <Typography component='h6' variant='h6'>\r\n            No Selected Client\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n      {transaction.id && (\r\n        <Grid\r\n          style={{ paddingLeft: 10, paddingRight: 20 }}\r\n          xs={12}\r\n          container\r\n          justify='space-between'\r\n        >\r\n          <Grid item xs={8}>\r\n            <Typography component='h6' variant='h6'>\r\n              {`${transaction?.lastname}, ${transaction?.firstname} ${transaction?.middlename}`}\r\n            </Typography>\r\n            <Typography variant='subtitle2' color='textSecondary'>\r\n              {transaction?.code}\r\n            </Typography>\r\n            <Typography variant='subtitle2' color='textSecondary'>\r\n              {transaction?.plan?.name! + ' - ' + transaction?.payment_period}\r\n            </Typography>\r\n            <Typography variant='caption' color='textSecondary'>\r\n              {'Lapse on ' +\r\n                new Date(transaction?.next_payment!).toDateString()}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <MyAvatar src={transaction.image_url} />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      <Divider style={{ margin: 20 }}></Divider>\r\n\r\n      {!isLoading && transaction.id && (\r\n        <CommissionersForm\r\n          employees={employees}\r\n          onSubmit={handleSubmit}\r\n          state={[transaction, setTransaction]}\r\n        />\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Transaction\r\n","import Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport MyCard from 'components/common/MyCard'\r\nimport { useContext } from 'react'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport interface SettingsProps {}\r\n\r\nconst Settings: React.SFC<SettingsProps> = () => {\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  const onSave = () => {\r\n    localStorage.setItem('theme', state.isDark ? 'dark' : 'light')\r\n    dispatch({\r\n      type: 'SET_ALERT',\r\n      payload: { message: 'Saved', type: 'success' },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Grid xs={12} container>\r\n      <MyCard title='General Settings'>\r\n        <Grid style={{ padding: 20 }} direction='column' container xs={12}>\r\n          <Typography variant='subtitle1'>Theme</Typography>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={state.isDark}\r\n                onChange={() => dispatch({ type: 'TOGGLE_THEME' })}\r\n                name='checkedA'\r\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n              />\r\n            }\r\n            label='Dark Mode'\r\n          />\r\n          <Button onClick={onSave} fullWidth variant='text' color='primary'>\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n      </MyCard>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import { useHistory, useParams } from 'react-router-dom'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport MyForm, { MyFormProps } from 'components/common/MyForm'\r\nimport validator from 'validators/saveProfileValidator'\r\nimport Profile from 'models/profile'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport { ClientContext } from 'providers/ClientProvider'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { postImage } from 'services/imageService'\r\nimport { updateClient } from 'services/clientService'\r\n\r\nexport interface EditClientProps {}\r\n\r\nconst EditClient: React.SFC<EditClientProps> = () => {\r\n  const history = useHistory()\r\n  const params = useParams<{ id: string }>()\r\n\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const [clientState, clientDispatch] = useContext(ClientContext)!\r\n\r\n  const [imageFile, setImageFile] = useState<HTMLImageElement | null>(null)\r\n\r\n  const [profile, setProfile] = useState<Profile>({\r\n    firstname: '',\r\n    middlename: '',\r\n    lastname: '',\r\n    address: '',\r\n    contact: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Edit Client Profile' })\r\n    const profile = clientState.clients.filter(\r\n      (client) => client.id === +params.id\r\n    )[0]\r\n    setProfile(profile)\r\n  }, [])\r\n\r\n  const onSubmit = async (profile: Profile) => {\r\n    return postImage(profile?.image!, (image_url: string) => {\r\n      delete profile.image\r\n\r\n      return updateClient({\r\n        ...profile,\r\n        image_url: !!image_url ? image_url : profile.image_url,\r\n      })\r\n        .then(() => {\r\n          globalDispatch({\r\n            type: 'SET_ALERT',\r\n            payload: { message: 'Successfully saved', type: 'success' },\r\n          })\r\n          globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 400) {\r\n            globalDispatch({\r\n              type: 'SET_ALERT',\r\n              payload: { message: error.response.data.error, type: 'error' },\r\n            })\r\n          }\r\n          globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  const formProps: MyFormProps<Profile> = {\r\n    state: [profile, setProfile],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myControlledInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myControlledInput({\r\n            label: 'Firstname',\r\n            value: profile.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Middlename',\r\n            value: profile.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Lastname',\r\n            value: profile.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Contact Number',\r\n            value: profile.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myControlledInput({\r\n            label: 'Address',\r\n            value: profile.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: profile.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: profile.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: profile.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          <Grid\r\n            container\r\n            style={{\r\n              paddingLeft: 15,\r\n              paddingRight: 15,\r\n              marginBottom: 10,\r\n            }}\r\n            alignItems='center'\r\n            justify='space-between'\r\n            xs={12}\r\n          >\r\n            <Typography variant='subtitle1'>\r\n              {imageFile?.name || 'Select Photo'}\r\n            </Typography>\r\n            <>\r\n              <input\r\n                accept='image/*'\r\n                style={{\r\n                  display: 'none',\r\n                }}\r\n                name='image'\r\n                id='icon-button-file'\r\n                type='file'\r\n                onChange={(e: any) => {\r\n                  setImageFile(e.target.files[0])\r\n                }}\r\n              />\r\n              <label htmlFor='icon-button-file'>\r\n                <IconButton\r\n                  color='primary'\r\n                  aria-label='upload picture'\r\n                  component='span'\r\n                >\r\n                  <PhotoCamera />\r\n                </IconButton>\r\n              </label>\r\n            </>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n\r\nexport default EditClient\r\n","import { Dispatch, createContext, useReducer } from 'react'\r\nimport Payment from 'models/payment'\r\nimport { produce } from 'immer'\r\n\r\nexport const PaymentContext = createContext<\r\n  [state: PaymentState, dispatch: Dispatch<PaymentAction>] | null\r\n>(null)\r\n\r\ninterface PaymentState {\r\n  payments: Payment[]\r\n  total: number\r\n  pages: number\r\n  isLoading: boolean\r\n}\r\n\r\ntype PaymentAction =\r\n  | {\r\n      type: 'ON_LOAD_PAYMENTS'\r\n      payload: { payments: Payment[]; total?: number; pages?: number }\r\n    }\r\n  | { type: 'SET_IS_LOADING'; payload: boolean }\r\n  | { type: 'SET_TOTAL'; payload: number }\r\n  | { type: 'SET_PAGES'; payload: number }\r\n\r\nconst reducer = (state: PaymentState, action: PaymentAction) => {\r\n  switch (action.type) {\r\n    case 'ON_LOAD_PAYMENTS':\r\n      state.payments = action.payload.payments\r\n      state.total = action.payload.total!\r\n      state.pages = action.payload.pages!\r\n      state.isLoading = false\r\n      break\r\n    case 'SET_TOTAL':\r\n      state.total = action.payload\r\n      break\r\n    case 'SET_PAGES':\r\n      state.pages = action.payload\r\n      break\r\n    case 'SET_IS_LOADING':\r\n      state.isLoading = action.payload\r\n      break\r\n    default:\r\n      return state\r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport const PaymentProvider: React.FC = (props) => {\r\n  const [state, dispatch] = useReducer(produce(reducer), {\r\n    payments: [],\r\n    total: 0,\r\n    pages: 0,\r\n    isLoading: false,\r\n  })\r\n  return (\r\n    <PaymentContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </PaymentContext.Provider>\r\n  )\r\n}\r\n","import CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport MyCard from 'components/common/MyCard'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Payment from 'models/payment'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MyAvatar from 'components/common/MyAvatar'\r\nimport { toMoney } from 'utils/helper'\r\n\r\nexport interface PaymentCardProps {\r\n  payment: Payment\r\n}\r\n\r\nconst PaymentCard: React.SFC<PaymentCardProps> = ({ payment }) => {\r\n  const history = useHistory()\r\n\r\n  const client = payment.client\r\n\r\n  const fullname = `${client?.profile?.lastname}, ${client?.profile?.firstname} ${client?.profile?.middlename}`\r\n  return (\r\n    <MyCard title={'OR#' + payment.or_number} style={{ paddingBottom: 5 }}>\r\n      <CardContent>\r\n        <Grid\r\n          style={{ marginBottom: 20 }}\r\n          xs={12}\r\n          justify='space-between'\r\n          container\r\n        >\r\n          <Grid\r\n            style={{ paddingLeft: 10 }}\r\n            container\r\n            item\r\n            direction='column'\r\n            xs={7}\r\n            justify='flex-start'\r\n          >\r\n            <Typography component='h3' variant='h6'>\r\n              {fullname}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary'>\r\n              {payment.client?.code}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary'>\r\n              {payment.client?.branch?.name}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary'>\r\n              {toMoney(payment?.amount!)}\r\n            </Typography>\r\n            {/* <Typography variant='caption' color='textSecondary'>\r\n              {'Paid on ' + new Date(payment.created_at!).toDateString()}\r\n            </Typography> */}\r\n          </Grid>\r\n          <Grid container item xs={5} justify='center' alignItems='center'>\r\n            <MyAvatar\r\n              src={payment?.client?.profile?.image_url}\r\n              onClick={() => history.push('/payments/' + payment.id)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n        <Grid\r\n          style={{ paddingLeft: 15, paddingRight: 15, paddingTop: 20 }}\r\n          container\r\n          xs={12}\r\n          justify='space-evenly'\r\n        >\r\n          <Grid item xs={3}></Grid>\r\n          <Grid item xs={6}>\r\n            <Button\r\n              onClick={() => history.push('/payments/' + payment.id)}\r\n              fullWidth\r\n              variant='text'\r\n              color='primary'\r\n            >\r\n              Commissioners\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={3}></Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </MyCard>\r\n  )\r\n}\r\n\r\nexport default PaymentCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MyChips, { MyChip } from 'components/common/MyChips'\r\nimport MySearchField from 'components/common/MySearchField'\r\nimport { PaymentContext } from 'providers/PaymentProvider'\r\nimport { getPayments } from 'services/paymentService'\r\nimport PaymentCard from './PaymentCard'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport qs from 'query-string'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport MySkeletonCards from 'components/common/MySkeletonCards'\r\n\r\nexport interface PaymentHistoryProps {}\r\n\r\nconst PaymentHistory: React.SFC<PaymentHistoryProps> = () => {\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n  const [paymentState, paymentDispatch] = useContext(PaymentContext)!\r\n\r\n  const [chip, setChip] = useState<MyChip>({ value: '', name: 'All' })\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const location = useLocation()\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Payment History' })\r\n\r\n    const { page, search } = qs.parse(location.search)\r\n    const currentPage = !!page ? +page : 1\r\n    setPage(currentPage)\r\n    onLoad({\r\n      page: currentPage,\r\n      search: (search as string) || '',\r\n    })\r\n    return () => {\r\n      globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n    }\r\n  }, [])\r\n\r\n  const chips = [{ value: '', name: 'All' }]\r\n\r\n  const onPage = (e: any, page: number) => {\r\n    paymentDispatch({ type: 'SET_TOTAL', payload: 0 })\r\n    setPage(page)\r\n    onLoad({ page, category: chip.value })\r\n    history.push('/payments?page=' + page)\r\n  }\r\n\r\n  interface LoadProps {\r\n    search?: string\r\n    category?: string\r\n    page: number\r\n  }\r\n\r\n  const onLoad = ({ page, search, category }: LoadProps) => {\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    paymentDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    getPayments({ page, search, category })\r\n      .then(({ payments, total, pages }) => {\r\n        paymentDispatch({\r\n          type: 'ON_LOAD_PAYMENTS',\r\n          payload: { payments, total, pages },\r\n        })\r\n        globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n      })\r\n      .catch(() => globalDispatch({ type: 'SET_IS_LOADING', payload: false }))\r\n  }\r\n\r\n  const onSearch = (search: string) => {\r\n    setChip({ value: '', name: 'All' })\r\n    onLoad({ page: 1, search })\r\n    setPage(1)\r\n  }\r\n\r\n  const onFilter = (chip: MyChip) => {\r\n    paymentDispatch({ type: 'SET_TOTAL', payload: 0 })\r\n    setChip(chip)\r\n    onLoad({ page: 1, category: chip.value })\r\n    setPage(1)\r\n    history.push('/payments?page=' + 1)\r\n  }\r\n\r\n  const isLoading = paymentState.isLoading && !paymentState.payments.length\r\n\r\n  return (\r\n    <>\r\n      <MySearchField\r\n        labelWidth={160}\r\n        label='Name / Code / Branch'\r\n        onSearch={onSearch}\r\n        style={{ marginBottom: 15 }}\r\n      />\r\n      <MyChips\r\n        count={paymentState.total}\r\n        onChipSelected={onFilter}\r\n        active={chip}\r\n        chips={chips}\r\n      />\r\n      {isLoading && <MySkeletonCards />}\r\n      {!isLoading && (\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction='column'\r\n          justify='flex-start'\r\n          alignItems='center'\r\n        >\r\n          {paymentState.payments.map((payment) => (\r\n            <Grid key={payment.id} item xs={12}>\r\n              <PaymentCard payment={payment} />\r\n            </Grid>\r\n          ))}\r\n          <Pagination\r\n            style={{ marginTop: 15, marginBottom: 15 }}\r\n            variant='outlined'\r\n            color='primary'\r\n            count={paymentState.pages}\r\n            siblingCount={0}\r\n            page={page}\r\n            onChange={onPage}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PaymentHistory\r\n","import MyCard from 'components/common/MyCard'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport Link from '@material-ui/core/Link'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Payment from 'models/payment'\r\nimport { getPayment, getPayments } from 'services/paymentService'\r\nimport { PaymentContext } from 'providers/PaymentProvider'\r\nimport MyAvatar from 'components/common/MyAvatar'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport MyMiniCards from 'components/common/MyMiniCards'\r\nimport Commission from 'models/commission'\r\nimport MySkeletonCard from 'components/common/MySkeletonCard'\r\nimport MySkeletonMiniCards from 'components/common/MySkeletonMiniCards'\r\nimport { hasCommission } from 'services/clientService'\r\n\r\nexport interface PaymentViewProps {}\r\n\r\nconst PaymentView: React.SFC<PaymentViewProps> = () => {\r\n  const history = useHistory()\r\n  const params = useParams<{ id: string }>()\r\n  const [payment, setPayment] = useState<Payment>({})\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  const [globalState, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Payment Details' })\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n\r\n    getPayment(+params.id)\r\n      .then((payment) => {\r\n        setPayment(payment)\r\n        globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n        setIsLoading(false)\r\n      })\r\n      .catch(() => {\r\n        globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n        setIsLoading(false)\r\n      })\r\n    return () => {\r\n      globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n      setIsLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const client = payment.client\r\n  const fullname = `${client?.profile?.lastname}, ${client?.profile?.firstname} ${client?.profile?.middlename}`\r\n\r\n  const insured_at = new Date(payment?.client?.created_at!)\r\n  // const hasCommission =\r\n  //   new Date(insured_at.setFullYear(insured_at.getFullYear() + 1)) >=\r\n  //   new Date(Date.now())\r\n\r\n  const handleSelected = (commission: Commission) => {\r\n    // history.push('/clients/' + client.id)\r\n  }\r\n\r\n  return (\r\n    <Grid container xs={12}>\r\n      {isLoading && (\r\n        <>\r\n          <MySkeletonCard height={110} />\r\n          <Grid\r\n            container\r\n            style={{ marginBottom: 10 }}\r\n            xs={12}\r\n            justify='space-between'\r\n          >\r\n            <Typography variant='subtitle1'>Commissioners</Typography>\r\n            <Link component='button' variant='body1'>\r\n              View All({payment?.commissions?.length})\r\n            </Link>\r\n            <MySkeletonMiniCards />\r\n          </Grid>\r\n        </>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <MyCard\r\n            title={'OR#' + payment.or_number}\r\n            style={{ paddingBottom: 5, marginBottom: 10 }}\r\n          >\r\n            <CardContent>\r\n              <Grid xs={12} direction='row' container>\r\n                <Grid item xs={7}>\r\n                  <Typography component='h3' variant='h6'>\r\n                    {fullname}\r\n                  </Typography>\r\n                  <Typography variant='subtitle1' color='textSecondary'>\r\n                    {payment.client?.branch?.name}\r\n                  </Typography>\r\n                  <Typography variant='subtitle1' color='textSecondary'>\r\n                    {'₱ ' + payment.amount}\r\n                  </Typography>\r\n                  <Typography variant='caption' color='textSecondary'>\r\n                    {'Paid on ' + new Date(payment?.created_at!).toDateString()}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  item\r\n                  xs={5}\r\n                  justify='center'\r\n                  alignItems='center'\r\n                >\r\n                  <MyAvatar src={payment?.client?.profile?.image_url} />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </MyCard>\r\n\r\n          {!!payment?.commissions?.length && (\r\n            <>\r\n              <Typography variant='subtitle1'>Commissioners</Typography>\r\n              <MyMiniCards\r\n                style={{ marginBottom: 15, marginTop: 10 }}\r\n                onSelected={handleSelected}\r\n                items={payment?.commissions!}\r\n              >\r\n                {({ renderCards, item }) => (\r\n                  <>\r\n                    {renderCards({\r\n                      item,\r\n                      title: `${item.employee?.profile?.lastname}, ${item.employee?.profile?.firstname} (${item.employee?.position?.name})`,\r\n                      subtitle: '₱ ' + item.amount!,\r\n                      src: item.employee?.profile?.image_url,\r\n                    })}\r\n                  </>\r\n                )}\r\n              </MyMiniCards>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      <Grid item xs={6}>\r\n        <Button\r\n          onClick={() => history.goBack()}\r\n          fullWidth\r\n          variant='contained'\r\n          color='default'\r\n        >\r\n          BACK\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PaymentView\r\n","import CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport MyCard from 'components/common/MyCard'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ViewIcon from '@material-ui/icons/RemoveRedEye'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport Branch from 'models/branch'\r\n\r\nexport interface BranchCardProps {\r\n  branch: Branch\r\n  onArchive?: (branch: Branch) => void\r\n}\r\n\r\nconst BranchCard: React.SFC<BranchCardProps> = ({ branch, onArchive }) => {\r\n  const history = useHistory()\r\n  return (\r\n    <MyCard title={`Branch#${branch.id}`}>\r\n      <CardContent>\r\n        <Grid style={{ marginBottom: 20 }} xs={12} direction='column' container>\r\n          <Typography component='h3' variant='h6'>\r\n            {branch.name}\r\n          </Typography>\r\n          <Typography variant='subtitle1' color='textSecondary'>\r\n            {branch.contact}\r\n          </Typography>\r\n          <Typography variant='subtitle1' color='textSecondary'>\r\n            {branch.address}\r\n          </Typography>\r\n        </Grid>\r\n        <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n        <Grid container xs={12} justify='space-evenly'>\r\n          <IconButton\r\n            onClick={() => history.push('/branches/edit/' + branch.id)}\r\n            aria-label='edit'\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => onArchive?.(branch)} aria-label='archive'>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </CardContent>\r\n    </MyCard>\r\n  )\r\n}\r\n\r\nexport default BranchCard\r\n","import Grid from '@material-ui/core/Grid'\r\nimport { BranchContext } from 'providers/BranchProvider'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { archiveBranch, getBranches } from 'services/branchService'\r\nimport BranchCard from './BranchCard'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MySearchField from 'components/common/MySearchField'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport MyAlertDialog, { AlertDataProps } from 'components/common/MyAlertDialog'\r\nimport Branch from 'models/branch'\r\nimport MySkeletonCards from 'components/common/MySkeletonCards'\r\n\r\nexport interface BranchesProps {}\r\n\r\nconst Branches: React.SFC<BranchesProps> = () => {\r\n  const [branchState, branchDispatch] = useContext(BranchContext)!\r\n\r\n  const [globalState, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Branch Management' })\r\n    onLoad()\r\n    return () => {\r\n      globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n    }\r\n  }, [])\r\n\r\n  const onLoad = (search?: string) => {\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    branchDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    getBranches(search)\r\n      .then((branches) => {\r\n        branchDispatch({\r\n          type: 'ON_LOAD_BRANCHES',\r\n          payload: branches,\r\n        })\r\n        globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n      })\r\n      .catch(() => globalDispatch({ type: 'SET_IS_LOADING', payload: false }))\r\n  }\r\n\r\n  const onSearch = (value: string) => {\r\n    onLoad(value)\r\n  }\r\n\r\n  const [alertDialog, setAlertDialog] = useState<AlertDataProps>({})\r\n\r\n  const [branch, setBranch] = useState<Branch>()\r\n\r\n  const handleSelectedClient = (branch: Branch) => {\r\n    setBranch(branch)\r\n    setAlertDialog({\r\n      open: true,\r\n      text: `Are you sure you want to archive ${branch.name}?`,\r\n      description:\r\n        'Archieving will not permanently delete the branch account in the database.',\r\n    })\r\n  }\r\n\r\n  const handleArchieve = () => {\r\n    archiveBranch(branch?.id!).then((data) => {\r\n      onLoad()\r\n      globalDispatch({\r\n        type: 'SET_ALERT',\r\n        payload: { message: 'Successfully archived', type: 'error' },\r\n      })\r\n    })\r\n    setAlertDialog({\r\n      open: false,\r\n    })\r\n  }\r\n\r\n  const isLoading = branchState.isLoading && !branchState.branches.length\r\n\r\n  return (\r\n    <>\r\n      <MyAlertDialog\r\n        onAgree={handleArchieve}\r\n        onDisagree={() => setAlertDialog({ open: false })}\r\n        data={alertDialog}\r\n      />\r\n      <MySearchField onSearch={onSearch} style={{ marginBottom: 20 }} />\r\n      {isLoading && <MySkeletonCards />}\r\n      {!isLoading && (\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction='column'\r\n          justify='flex-start'\r\n          alignItems='center'\r\n        >\r\n          {branchState.branches.map((branch) => (\r\n            <Grid key={branch.id} item xs={12}>\r\n              <BranchCard\r\n                onArchive={handleSelectedClient}\r\n                branch={branch}\r\n              ></BranchCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n\r\n      <Fab\r\n        style={{\r\n          position: 'fixed',\r\n          bottom: 60,\r\n          right: 20,\r\n        }}\r\n        onClick={() => history.push('/branches/new')}\r\n        color='primary'\r\n        aria-label='add'\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Branches\r\n","import Joi from 'joi'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst saveBranchValidator = {\r\n  name: Joi.string().required().label('Branch'),\r\n}\r\n\r\nexport default saveBranchValidator\r\n","import Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport MyForm, { MyFormProps } from 'components/common/MyForm'\r\nimport Branch from 'models/branch'\r\nimport { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport validator from 'validators/saveBranchValidator'\r\nimport { saveBranch } from 'services/branchService'\r\n\r\nexport interface NewBranchProps {}\r\n\r\nconst NewBranch: React.SFC<NewBranchProps> = () => {\r\n  const [branch, setBranch] = useState<Branch>({})\r\n\r\n  const history = useHistory()\r\n\r\n  const onSubmit = async (branch: Branch) => {\r\n    saveBranch(branch).then((data) => console.log(data))\r\n  }\r\n\r\n  const formProps: MyFormProps<Branch> = {\r\n    state: [branch, setBranch],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Branch Name',\r\n            value: branch?.name,\r\n            name: 'name',\r\n          })}\r\n          {myInput({\r\n            label: 'Contact',\r\n            value: branch?.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myInput({\r\n            label: 'Address',\r\n            value: branch?.contact,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n\r\nexport default NewBranch\r\n","import Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport MyForm, { MyFormProps } from 'components/common/MyForm'\r\nimport Branch from 'models/branch'\r\nimport { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport validator from 'validators/saveBranchValidator'\r\nimport { getBranch, saveBranch, updateBranch } from 'services/branchService'\r\n\r\nexport interface NewBranchProps {}\r\n\r\nconst EditBranch: React.SFC<NewBranchProps> = () => {\r\n  const [branch, setBranch] = useState<Branch>({\r\n    name: '',\r\n    contact: '',\r\n    address: '',\r\n  })\r\n\r\n  const history = useHistory()\r\n\r\n  const params = useParams<{ id: string }>()\r\n\r\n  useEffect(() => {\r\n    getBranch(+params.id).then((branch) => setBranch(branch))\r\n  }, [])\r\n\r\n  const onSubmit = async (branch: Branch) => {\r\n    updateBranch(branch).then((data) => console.log(data))\r\n  }\r\n\r\n  const formProps: MyFormProps<Branch> = {\r\n    state: [branch, setBranch],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myButton, myControlledInput }) => (\r\n        <>\r\n          {myControlledInput({\r\n            label: 'Branch Name',\r\n            value: branch?.name,\r\n            name: 'name',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Contact',\r\n            value: branch?.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myControlledInput({\r\n            label: 'Address',\r\n            value: branch?.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n\r\nexport default EditBranch\r\n","import { createContext, Dispatch, useReducer } from 'react'\r\nimport { produce } from 'immer'\r\nimport Commission from 'models/commission'\r\n\r\nexport const CommissionContext = createContext<\r\n  [state: CommissionState, dispatch: Dispatch<CommissionAction>] | null\r\n>(null)\r\n\r\ninterface CommissionState {\r\n  commissions: Commission[]\r\n  isLoading: boolean\r\n  total: number\r\n  pages: number\r\n}\r\n\r\nexport type CommissionAction =\r\n  | {\r\n      type: 'ON_LOAD_COMMISSIONS'\r\n      payload: { commissions: Commission[]; total?: number; pages?: number }\r\n    }\r\n  | { type: 'SET_IS_LOADING'; payload: boolean }\r\n  | { type: 'SET_TOTAL'; payload: number }\r\n  | { type: 'SET_PAGES'; payload: number }\r\n\r\nconst reducer = (state: CommissionState, action: CommissionAction) => {\r\n  switch (action.type) {\r\n    case 'ON_LOAD_COMMISSIONS':\r\n      state.commissions = action.payload.commissions\r\n      state.total = action.payload.total!\r\n      state.pages = action.payload.pages!\r\n      state.isLoading = false\r\n      break\r\n    case 'SET_IS_LOADING':\r\n      state.isLoading = action.payload\r\n      break\r\n    case 'SET_TOTAL':\r\n      state.total = action.payload\r\n      break\r\n    case 'SET_PAGES':\r\n      state.pages = action.payload\r\n      break\r\n    default:\r\n      return state\r\n  }\r\n  return state\r\n}\r\n\r\nexport const CommissionProvider: React.FC = (props) => {\r\n  const [state, dispatch] = useReducer(produce(reducer), {\r\n    commissions: [],\r\n    isLoading: false,\r\n    total: 0,\r\n    pages: 0,\r\n  })\r\n\r\n  return (\r\n    <CommissionContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </CommissionContext.Provider>\r\n  )\r\n}\r\n","import CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport MyCard from 'components/common/MyCard'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ViewIcon from '@material-ui/icons/RemoveRedEye'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport Commission from 'models/commission'\r\nimport MyAvatar from 'components/common/MyAvatar'\r\nimport { toMoney } from 'utils/helper'\r\n\r\nexport interface CommissionCardProps {\r\n  commission: Commission\r\n}\r\n\r\nconst CommissionCard: React.SFC<CommissionCardProps> = ({ commission }) => {\r\n  const history = useHistory()\r\n  const fullname = `${commission?.employee?.profile?.lastname}, ${commission?.employee?.profile?.firstname} ${commission?.employee?.profile?.lastname}`\r\n  return (\r\n    <MyCard title={`OR#${commission.payment?.or_number}`}>\r\n      <CardContent>\r\n        <Grid\r\n          style={{ marginBottom: 20 }}\r\n          xs={12}\r\n          justify='space-between'\r\n          container\r\n        >\r\n          <Grid\r\n            style={{ paddingLeft: 10 }}\r\n            container\r\n            item\r\n            direction='column'\r\n            xs={7}\r\n            justify='flex-start'\r\n          >\r\n            <Typography component='h3' variant='h6'>\r\n              {fullname}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary'>\r\n              {commission?.employee?.position?.name}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary'>\r\n              {toMoney(commission?.amount!)}\r\n            </Typography>\r\n            <Typography variant='caption' color='textSecondary'>\r\n              {new Date(commission?.created_at!).toDateString()}\r\n            </Typography>\r\n            <Grid item xs={1}>\r\n              <Chip\r\n                style={{ marginTop: 5 }}\r\n                size='small'\r\n                label={commission.is_release ? 'release' : 'unrelease'}\r\n                variant='outlined'\r\n                color={!commission.is_release ? 'secondary' : 'default'}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item xs={5} justify='center' alignItems='center'>\r\n            <MyAvatar\r\n              src={commission?.employee?.profile?.image_url}\r\n              onClick={() =>\r\n                history.push('/payments/' + commission?.payment?.id)\r\n              }\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </MyCard>\r\n  )\r\n}\r\n\r\nexport default CommissionCard\r\n","import { CommissionContext } from 'providers/CommissionProvider'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { getCommissions } from 'services/commissionService'\r\nimport MyChips, { MyChip } from 'components/common/MyChips'\r\nimport MySearchField from 'components/common/MySearchField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport CommissionCard from './CommissionCard'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport MySkeletonCards from 'components/common/MySkeletonCards'\r\n\r\nexport interface CommissionsProps {}\r\n\r\ninterface LoadProps {\r\n  search?: string\r\n  category?: string\r\n  page: number\r\n}\r\n\r\nconst Commissions: React.SFC<CommissionsProps> = () => {\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const [commissionState, commissionDispatch] = useContext(CommissionContext)!\r\n\r\n  const [chip, setChip] = useState<MyChip>({ value: '', name: 'All' })\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const location = useLocation()\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Commission History' })\r\n\r\n    onLoad({ page: 1 })\r\n    return () => {\r\n      globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n    }\r\n  }, [])\r\n\r\n  const onLoad = ({ page, search, category }: LoadProps) => {\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    commissionDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    getCommissions({ page, search, category })\r\n      .then(({ commissions, total, pages }) => {\r\n        commissionDispatch({\r\n          type: 'ON_LOAD_COMMISSIONS',\r\n          payload: { commissions, total, pages },\r\n        })\r\n        globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n      })\r\n      .catch(() => globalDispatch({ type: 'SET_IS_LOADING', payload: false }))\r\n  }\r\n\r\n  const onSearch = (search: string) => {\r\n    setChip({ value: '', name: 'All' })\r\n    onLoad({ page: 1, search })\r\n    setPage(1)\r\n  }\r\n\r\n  const onFilter = (chip: MyChip) => {\r\n    commissionDispatch({ type: 'SET_TOTAL', payload: 0 })\r\n    setChip(chip)\r\n    onLoad({ page: 1, category: chip.value })\r\n    setPage(1)\r\n    history.push('/commissions?page=' + 1)\r\n  }\r\n\r\n  const chips = [\r\n    { value: '', name: 'All' },\r\n    { value: 'release', name: 'Release' },\r\n    { value: 'unrelease', name: 'Unrelease' },\r\n  ]\r\n\r\n  const onPage = (e: any, page: number) => {\r\n    commissionDispatch({ type: 'SET_TOTAL', payload: 0 })\r\n    setPage(page)\r\n    onLoad({ page, category: chip.value })\r\n    history.push('/commissions?page=' + page)\r\n  }\r\n  const isLoading =\r\n    commissionState.isLoading && !commissionState.commissions.length\r\n\r\n  return (\r\n    <>\r\n      <MySearchField\r\n        label='Name'\r\n        labelWidth={45}\r\n        onSearch={onSearch}\r\n        style={{ marginBottom: 10 }}\r\n      />\r\n      <MyChips\r\n        count={commissionState.total}\r\n        onChipSelected={onFilter}\r\n        active={chip}\r\n        chips={chips}\r\n      />\r\n      {isLoading && <MySkeletonCards />}\r\n      {!isLoading && (\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction='column'\r\n          justify='flex-start'\r\n          alignItems='center'\r\n        >\r\n          {commissionState.commissions.map((commission) => (\r\n            <Grid key={commission.id} item xs={12}>\r\n              <CommissionCard commission={commission} />\r\n            </Grid>\r\n          ))}\r\n          <Pagination\r\n            style={{ marginTop: 15, marginBottom: 15 }}\r\n            variant='outlined'\r\n            color='primary'\r\n            count={commissionState.pages}\r\n            siblingCount={0}\r\n            page={page}\r\n            onChange={onPage}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Commissions\r\n","import Commission from 'models/commission'\r\nimport http from 'utils/http'\r\n\r\nexport interface CommissionProps {\r\n  page?: number\r\n  search?: string\r\n  category?: string\r\n}\r\n\r\nexport const getCommissions = (props?: CommissionProps) => {\r\n  return http\r\n    .get(\r\n      `/commissions?page=${props?.page || ''}&search=${\r\n        props?.search || ''\r\n      }&category=${props?.category || ''}`\r\n    )\r\n    .then(({ data }) => ({\r\n      commissions: data.items,\r\n      total: data.count,\r\n      pages: data.pages,\r\n    }))\r\n}\r\n\r\nexport const getTotalCommissionOfEmployees = (props: CommissionProps) => {\r\n  return http\r\n    .get(\r\n      `/commissions/total/employees?page=${props?.page || ''}&search=${\r\n        props?.search || ''\r\n      }&category=${props?.category || ''}`\r\n    )\r\n    .then(({ data }) => {\r\n      const commissions: Commission[] = data.items.map((com: any) => ({\r\n        id: com.id,\r\n        employee: {\r\n          id: com.employee_id,\r\n          profile: {\r\n            firstname: com.firstname,\r\n            middlename: com.middlename,\r\n            lastname: com.lastname,\r\n            image_url: com.image_url,\r\n          },\r\n          branch: { name: com.branch_name },\r\n          position: { name: com.position_name },\r\n        },\r\n        amount: com.total,\r\n      }))\r\n      return { total: data.count, pages: data.pages, commissions }\r\n    })\r\n}\r\n\r\nexport const releaseCommission = (employeeId: number) => {\r\n  return http\r\n    .post('/commissions/release', { employeeId })\r\n    .then(({ data }) => data)\r\n}\r\n\r\nexport const hasCommission = (paidAmount: number, price: number) => {\r\n  const percentage = (paidAmount * 100) / price\r\n  return percentage <= 20\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport MyCard from 'components/common/MyCard'\r\nimport MyAvatar from 'components/common/MyAvatar'\r\nimport Commission from 'models/commission'\r\nimport ReleaseIcon from '@material-ui/icons/LocalAtm'\r\nimport { toMoney } from 'utils/helper'\r\n\r\nexport interface ReleaseCardProps {\r\n  commission: Commission\r\n  onRelease?: (commission: Commission) => void\r\n}\r\n\r\nconst ReleaseCard: React.SFC<ReleaseCardProps> = ({\r\n  commission,\r\n  onRelease,\r\n}) => {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <>\r\n      <MyCard\r\n        title={'Employee#' + commission?.employee?.id}\r\n        style={{ paddingBottom: 5 }}\r\n      >\r\n        <CardContent>\r\n          <Grid container xs={12} justify='space-between'>\r\n            <Grid\r\n              style={{ paddingLeft: 10 }}\r\n              container\r\n              item\r\n              direction='column'\r\n              xs={7}\r\n              justify='flex-start'\r\n            >\r\n              <Typography component='h3' variant='h6'>\r\n                {`${commission?.employee?.profile?.lastname}, ${commission?.employee?.profile?.firstname} ${commission?.employee?.profile?.middlename}`}\r\n              </Typography>\r\n              <Typography variant='subtitle1' color='textSecondary'>\r\n                {commission?.employee?.branch?.name}\r\n              </Typography>\r\n              <Typography variant='subtitle1' color='textSecondary'>\r\n                {commission?.employee?.position?.name}\r\n              </Typography>\r\n\r\n              <Typography variant='subtitle1' color='textSecondary'>\r\n                {toMoney(commission?.amount!)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid container item xs={5} justify='center' alignItems='center'>\r\n              <MyAvatar\r\n                src={commission?.employee?.profile?.image_url}\r\n                // onClick={() => history.push('/commissions/' + commission.id)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n        <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n        <Grid style={{ padding: 15 }} container xs={12} justify='space-evenly'>\r\n          <Grid item xs={3}></Grid>\r\n          <Grid item xs={6}>\r\n            <Button\r\n              onClick={() => onRelease?.(commission)}\r\n              fullWidth\r\n              variant='text'\r\n              color='primary'\r\n            >\r\n              Release\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={3}></Grid>\r\n        </Grid>\r\n      </MyCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ReleaseCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MyChips, { MyChip } from 'components/common/MyChips'\r\nimport MySearchField from 'components/common/MySearchField'\r\n\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport { CommissionContext } from 'providers/CommissionProvider'\r\nimport {\r\n  getTotalCommissionOfEmployees,\r\n  CommissionProps,\r\n  releaseCommission,\r\n} from 'services/commissionService'\r\nimport ReleaseCard from './ReleaseCard'\r\nimport MyAlertDialog, { AlertDataProps } from 'components/common/MyAlertDialog'\r\nimport Commission from 'models/commission'\r\nimport { toMoney } from 'utils/helper'\r\nimport MySkeletonCards from 'components/common/MySkeletonCards'\r\n\r\nexport interface CommissionReleaseProps {}\r\n\r\nconst ReleaseTransaction: React.SFC<CommissionReleaseProps> = () => {\r\n  const [commissionState, commissionDispatch] = useContext(CommissionContext)!\r\n\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const [chip, setChip] = useState<MyChip>({ value: '', name: 'All' })\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Release Transaction' })\r\n    onLoad({ page: 1 })\r\n    return () => {\r\n      globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n    }\r\n  }, [])\r\n\r\n  const onLoad = ({ page, search, category }: CommissionProps) => {\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    commissionDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    getTotalCommissionOfEmployees({ page, search, category })\r\n      .then(({ commissions, total, pages }) => {\r\n        commissionDispatch({\r\n          type: 'ON_LOAD_COMMISSIONS',\r\n          payload: { commissions, total, pages },\r\n        })\r\n        globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n      })\r\n      .catch(() => globalDispatch({ type: 'SET_IS_LOADING', payload: false }))\r\n  }\r\n\r\n  const chips: MyChip[] = [\r\n    { value: '', name: 'All' },\r\n    { value: 1, name: 'Branch Manager' },\r\n    { value: 2, name: 'Agency Manager' },\r\n    { value: 3, name: 'Supervisor' },\r\n  ]\r\n\r\n  const onFilter = (chip: MyChip) => {\r\n    commissionDispatch({ type: 'SET_TOTAL', payload: 0 })\r\n    setChip(chip)\r\n    setPage(1)\r\n    onLoad({ page: 1, category: chip.value })\r\n    if (!!chip.value) {\r\n      history.push('/transaction/releases')\r\n    }\r\n  }\r\n\r\n  const onPage = (e: any, page: number) => {\r\n    commissionDispatch({ type: 'SET_TOTAL', payload: 0 })\r\n    setPage(page)\r\n    onLoad({ page, category: chip.value })\r\n    history.push('/transaction/releases?page=' + page)\r\n  }\r\n\r\n  const onSearch = (search: string) => {\r\n    setChip({ value: '', name: 'All' })\r\n    setPage(1)\r\n    onLoad({ page: 1, search })\r\n    history.push('/transaction/releases?search=' + search)\r\n  }\r\n\r\n  const [alertDialog, setAlertDialog] = useState<AlertDataProps>({})\r\n\r\n  const [selectedCommission, setSelectedCommission] = useState<Commission>()\r\n\r\n  const handleSelectedCommission = (commission: Commission) => {\r\n    setSelectedCommission(commission)\r\n    setAlertDialog({\r\n      open: true,\r\n      text: `Are you sure you want to release \"${commission?.employee?.profile?.lastname}, ${commission?.employee?.profile?.firstname} ${commission?.employee?.profile?.middlename}\" commission?`,\r\n      description: `Amounting of ${toMoney(commission?.amount!)}`,\r\n    })\r\n  }\r\n\r\n  const handleRelease = () => {\r\n    releaseCommission(selectedCommission?.employee?.id!).then((data) => {\r\n      onLoad({ page, category: chip.value })\r\n    })\r\n    setAlertDialog({\r\n      open: false,\r\n    })\r\n  }\r\n\r\n  const isLoading =\r\n    commissionState.isLoading && !commissionState.commissions.length\r\n\r\n  return (\r\n    <>\r\n      <MyAlertDialog\r\n        onAgree={handleRelease}\r\n        onDisagree={() => setAlertDialog({ open: false })}\r\n        data={alertDialog}\r\n      />\r\n      <MySearchField\r\n        labelWidth={110}\r\n        label='Name / Branch'\r\n        onSearch={onSearch}\r\n        style={{ marginBottom: 15 }}\r\n      />\r\n\r\n      <MyChips\r\n        count={commissionState.total}\r\n        onChipSelected={onFilter}\r\n        active={chip}\r\n        chips={chips}\r\n      />\r\n      {isLoading && <MySkeletonCards />}\r\n      {!isLoading && (\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction='column'\r\n          justify='flex-start'\r\n          alignItems='center'\r\n        >\r\n          {commissionState.commissions.map((commission) => (\r\n            <Grid key={commission.id} item xs={12}>\r\n              <ReleaseCard\r\n                onRelease={handleSelectedCommission}\r\n                commission={commission}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          <Pagination\r\n            style={{ marginTop: 15, marginBottom: 15 }}\r\n            variant='outlined'\r\n            color='primary'\r\n            count={commissionState.pages}\r\n            siblingCount={0}\r\n            page={page}\r\n            onChange={onPage}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ReleaseTransaction\r\n","export default __webpack_public_path__ + \"static/media/404.b2df4ff4.svg\";","import Grid from '@material-ui/core/Grid'\r\nimport notFound from 'assets/404.svg'\r\nexport interface NotFoundProps {}\r\n\r\nconst NotFound: React.SFC<NotFoundProps> = () => {\r\n  return (\r\n    <Grid container justify='center'>\r\n      <img width='300' src={notFound} alt='not found' />\r\n      <h3>Page not found</h3>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ViewIcon from '@material-ui/icons/RemoveRedEye'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Chip from '@material-ui/core/Chip'\r\n\r\nimport MyCard from 'components/common/MyCard'\r\nimport MyAvatar from 'components/common/MyAvatar'\r\nimport User from 'models/user'\r\n\r\nexport interface UserCardProps {\r\n  user: User\r\n  onArchive?: (user: User) => void\r\n}\r\n\r\nconst UserCard: React.SFC<UserCardProps> = ({ user, onArchive }) => {\r\n  const history = useHistory()\r\n  return (\r\n    <>\r\n      <MyCard title={'Username#' + user?.username} style={{ paddingBottom: 5 }}>\r\n        <CardContent>\r\n          <Grid container xs={12} justify='space-between'>\r\n            <Grid\r\n              style={{ paddingLeft: 10 }}\r\n              container\r\n              item\r\n              direction='column'\r\n              xs={7}\r\n              justify='flex-start'\r\n            >\r\n              <Typography component='h3' variant='h6'>\r\n                {`${user?.lastname!}, ${user?.firstname!} ${user?.middlename!}`}\r\n              </Typography>\r\n              <Typography variant='subtitle1' color='textSecondary'>\r\n                {user?.branch?.name}\r\n              </Typography>\r\n              <Typography variant='subtitle1' color='textSecondary'>\r\n                {user?.role!}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid container item xs={5} justify='center' alignItems='center'>\r\n              <MyAvatar\r\n                src={user.image_url}\r\n                onClick={() => history.push('/users/' + user.id)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n        <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n        <Grid container xs={12} justify='space-evenly'>\r\n          {/* <IconButton\r\n            onClick={() => history.push('/users/' + user.id)}\r\n            aria-label='view'\r\n          >\r\n            <ViewIcon />\r\n          </IconButton> */}\r\n          <IconButton\r\n            onClick={() => history.push('/users/edit/' + user.id)}\r\n            aria-label='edit'\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => onArchive?.(user)} aria-label='archive'>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </MyCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserCard\r\n","import { createContext, Dispatch, useReducer } from 'react'\r\nimport { produce } from 'immer'\r\nimport User from 'models/user'\r\n\r\nexport const UserContext = createContext<\r\n  [state: UserState, dispatch: Dispatch<UserAction>] | null\r\n>(null)\r\n\r\ninterface UserState {\r\n  users: User[]\r\n  pages: number\r\n  total: number\r\n  isLoading: boolean\r\n}\r\n\r\nexport type UserAction =\r\n  | {\r\n      type: 'ON_LOAD_USERS'\r\n      payload: { users: User[]; pages?: number; total?: number }\r\n    }\r\n  | { type: 'SET_IS_LOADING'; payload: boolean }\r\n  | { type: 'SET_TOTAL'; payload: number }\r\n  | { type: 'SET_PAGES'; payload: number }\r\n\r\nconst reducer = (state: UserState, action: UserAction) => {\r\n  switch (action.type) {\r\n    case 'ON_LOAD_USERS':\r\n      state.users = action.payload.users\r\n      state.total = action.payload.total!\r\n      state.pages = action.payload.pages!\r\n      state.isLoading = false\r\n      break\r\n    case 'SET_IS_LOADING':\r\n      state.isLoading = action.payload\r\n      break\r\n    case 'SET_TOTAL':\r\n      state.total = action.payload\r\n      break\r\n    case 'SET_PAGES':\r\n      state.pages = action.payload\r\n      break\r\n    default:\r\n      return state\r\n  }\r\n  return state\r\n}\r\n\r\nexport const UserProvider: React.FC = (props) => {\r\n  const [state, dispatch] = useReducer(produce(reducer), {\r\n    users: [],\r\n    isLoading: false,\r\n    pages: 0,\r\n    total: 0,\r\n  })\r\n\r\n  return (\r\n    <UserContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n","import UserCard from 'components/pages/Users/UserCard'\r\nimport { UserContext } from 'providers/UserProvider'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { getUsers, archiveUser } from 'services/userService'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport User from 'models/user'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport MyAlertDialog, { AlertDataProps } from 'components/common/MyAlertDialog'\r\nimport MySearchField from 'components/common/MySearchField'\r\nimport MyChips, { MyChip } from 'components/common/MyChips'\r\nimport MySkeletonCards from 'components/common/MySkeletonCards'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nexport interface UsersProps {}\r\n\r\nconst Users: React.SFC<UsersProps> = () => {\r\n  const [userState, userDispatch] = useContext(UserContext)!\r\n\r\n  const history = useHistory()\r\n\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const [chip, setChip] = useState<MyChip>({ value: '', name: 'All' })\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'User Management' })\r\n    onLoad({ page: 1, search: '' })\r\n  }, [])\r\n\r\n  const onLoad = ({ page, search }: { page?: number; search?: string }) => {\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    userDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n    getUsers({ page, search }).then(({ users, pages, total }) => {\r\n      globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n\r\n      userDispatch({ type: 'ON_LOAD_USERS', payload: { users, pages, total } })\r\n    })\r\n  }\r\n\r\n  const onPage = (e: any, page: number) => {}\r\n\r\n  const handleSelectedUser = (user: User) => {\r\n    setUser(user)\r\n    setAlertDialog({\r\n      open: true,\r\n      text: `Are you sure you want to archive ${user.lastname}, ${user.firstname} ${user.middlename}?`,\r\n      description:\r\n        'Archiving will not permanently delete the user account in the database.',\r\n    })\r\n  }\r\n\r\n  const [alertDialog, setAlertDialog] = useState<AlertDataProps>({})\r\n\r\n  const [user, setUser] = useState<User>()\r\n\r\n  const handleArchive = () => {\r\n    archiveUser(user?.id!).then((data) => {\r\n      onLoad({\r\n        page,\r\n      })\r\n      globalDispatch({\r\n        type: 'SET_ALERT',\r\n        payload: { message: 'Successfully archived', type: 'success' },\r\n      })\r\n      setChip({ value: '', name: 'All' })\r\n    })\r\n    setAlertDialog({\r\n      open: false,\r\n    })\r\n  }\r\n\r\n  const onSearch = (search: string) => {\r\n    setChip({ value: '', name: 'All' })\r\n    setPage(1)\r\n    onLoad({ page: 1, search })\r\n    history.push('/users?search=' + search)\r\n  }\r\n\r\n  const onFilter = (chip: MyChip) => {\r\n    setChip(chip)\r\n    userDispatch({ type: 'SET_TOTAL', payload: 0 })\r\n    setPage(1)\r\n    onLoad({ page: 1 })\r\n  }\r\n\r\n  const chips: MyChip[] = [{ value: '', name: 'All' }]\r\n\r\n  const isLoading = userState.isLoading && !userState.users.length\r\n\r\n  return (\r\n    <>\r\n      <MyAlertDialog\r\n        onAgree={handleArchive}\r\n        onDisagree={() => setAlertDialog({ open: false })}\r\n        data={alertDialog}\r\n      />\r\n      <MySearchField\r\n        label='Name / Username'\r\n        labelWidth={130}\r\n        onSearch={onSearch}\r\n        style={{ marginBottom: 5 }}\r\n      />\r\n\r\n      <MyChips\r\n        count={userState.total}\r\n        active={chip}\r\n        onChipSelected={onFilter}\r\n        chips={chips}\r\n      />\r\n      {isLoading && <MySkeletonCards />}\r\n      {!isLoading && (\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction='column'\r\n          justify='flex-start'\r\n          alignItems='center'\r\n        >\r\n          {userState.users.map((user) => (\r\n            <Grid key={user.id} item xs={12}>\r\n              <UserCard onArchive={handleSelectedUser} user={user} />\r\n            </Grid>\r\n          ))}\r\n          <Pagination\r\n            style={{ marginTop: 15, marginBottom: 15 }}\r\n            variant='outlined'\r\n            color='primary'\r\n            count={userState.pages}\r\n            siblingCount={0}\r\n            page={page}\r\n            onChange={onPage}\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Fab\r\n        onClick={() => history.push('/users/new')}\r\n        style={{\r\n          position: 'fixed',\r\n          bottom: 60,\r\n          right: 20,\r\n        }}\r\n        color='primary'\r\n        aria-label='add'\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import Joi from 'joi'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst saveUserValidator = {\r\n  username: Joi.string().alphanum().min(1).max(50).required().label('Username'),\r\n  password: Joi.string().min(8).max(50).required().label('Password'),\r\n  firstname: lettersOnly('Firstname').min(1).max(255).required(),\r\n  middlename: lettersOnly('Middlename').min(1).max(255).required(),\r\n  lastname: lettersOnly('Lastname').min(1).max(255).required(),\r\n  branch: notNull('Branch'),\r\n  role: notNull('Role'),\r\n}\r\n\r\nexport default saveUserValidator\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport validator from 'validators/saveUserValidator'\r\nimport MyForm, { MyFormProps, InputProps } from 'components/common/MyForm'\r\nimport { saveUser } from 'services/userService'\r\nimport { UserContext } from 'providers/UserProvider'\r\nimport { postImage } from 'services/imageService'\r\nimport { getBranches } from 'services/branchService'\r\nimport { BranchContext } from 'providers/BranchProvider'\r\nimport User from 'models/user'\r\n\r\nexport interface NewUserProps {}\r\n\r\nconst NewUser: React.SFC<NewUserProps> = () => {\r\n  const [{ currentUser }, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const [branchState, branchDispatch] = useContext(BranchContext)!\r\n\r\n  const [imageFile, setImageFile] = React.useState<HTMLImageElement | null>(\r\n    null\r\n  )\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'User Registration' })\r\n\r\n    getBranches().then((branches) =>\r\n      branchDispatch({ type: 'ON_LOAD_BRANCHES', payload: branches })\r\n    )\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n  const [user, setUser] = React.useState<User>({\r\n    username: '',\r\n    firstname: '',\r\n    middlename: '',\r\n    lastname: '',\r\n    role: 'cashier',\r\n    password: '',\r\n  })\r\n\r\n  const onSubmit = async (user: User) => {\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n\r\n    return postImage(user?.image!, (image_url: string) => {\r\n      user.image_url = image_url\r\n      delete user.image\r\n      return saveUser(user).then(() => {\r\n        globalDispatch({\r\n          type: 'SET_ALERT',\r\n          payload: { message: 'Successfully added', type: 'success' },\r\n        })\r\n        globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n      })\r\n    })\r\n  }\r\n\r\n  const formProps: MyFormProps<User> = {\r\n    state: [user, setUser],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Username',\r\n            value: user.username,\r\n            name: 'username',\r\n          })}\r\n          {myInput({\r\n            label: 'Firstname',\r\n            value: user.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myInput({\r\n            label: 'Middlename',\r\n            value: user.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myInput({\r\n            label: 'Lastname',\r\n            value: user.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myInput({\r\n            label: 'Password',\r\n            value: user.password,\r\n            name: 'password',\r\n            type: 'password',\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Role',\r\n            value: user.role,\r\n            name: 'role',\r\n            labelWidth: 55,\r\n            options: [{ value: 'cashier', name: 'Cashier' }],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Branch',\r\n            value: user.branch,\r\n            name: 'branch',\r\n            labelWidth: 55,\r\n            options: branchState.branches.map((branch) => ({\r\n              value: branch.id,\r\n              name: branch.name,\r\n            })),\r\n          })}\r\n\r\n          <Grid\r\n            container\r\n            style={{\r\n              paddingLeft: 15,\r\n              paddingRight: 15,\r\n              marginBottom: 10,\r\n            }}\r\n            alignItems='center'\r\n            justify='space-between'\r\n            xs={12}\r\n          >\r\n            <Typography variant='subtitle1'>\r\n              {imageFile?.name || 'Select Photo'}\r\n            </Typography>\r\n            <>\r\n              <input\r\n                accept='image/*'\r\n                style={{\r\n                  display: 'none',\r\n                }}\r\n                name='image'\r\n                id='icon-button-file'\r\n                type='file'\r\n                onChange={(e: any) => {\r\n                  setImageFile(e.target.files[0])\r\n                }}\r\n              />\r\n              <label htmlFor='icon-button-file'>\r\n                <IconButton\r\n                  color='primary'\r\n                  aria-label='upload picture'\r\n                  component='span'\r\n                >\r\n                  <PhotoCamera />\r\n                </IconButton>\r\n              </label>\r\n            </>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              {currentUser?.role === 'admin' && (\r\n                <Button\r\n                  onClick={() => history.goBack()}\r\n                  fullWidth\r\n                  variant='contained'\r\n                  color='default'\r\n                >\r\n                  BACK\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\nexport default NewUser\r\n","import Joi from 'joi'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst editUserValidator = {\r\n  username: Joi.string().alphanum().min(1).max(50).required().label('Username'),\r\n  firstname: lettersOnly('Firstname').min(1).max(255).required(),\r\n  middlename: lettersOnly('Middlename').min(1).max(255).required(),\r\n  lastname: lettersOnly('Lastname').min(1).max(255).required(),\r\n  branch: notNull('Branch'),\r\n  role: notNull('Role'),\r\n}\r\n\r\nexport default editUserValidator\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport validator from 'validators/editUserValidator'\r\nimport MyForm, { MyFormProps, InputProps } from 'components/common/MyForm'\r\nimport { getUser, updateUser } from 'services/userService'\r\nimport { UserContext } from 'providers/UserProvider'\r\nimport { postImage } from 'services/imageService'\r\nimport { getBranches } from 'services/branchService'\r\nimport { BranchContext } from 'providers/BranchProvider'\r\nimport User from 'models/user'\r\n\r\nexport interface EditUserProps {}\r\n\r\nconst EditUser: React.SFC<EditUserProps> = () => {\r\n  const [{ currentUser }, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const params = useParams<{ id: string }>()\r\n\r\n  const [branchState, branchDispatch] = useContext(BranchContext)!\r\n\r\n  const [imageFile, setImageFile] = React.useState<HTMLImageElement | null>(\r\n    null\r\n  )\r\n\r\n  const [user, setUser] = React.useState<User>({\r\n    username: '',\r\n    firstname: '',\r\n    middlename: '',\r\n    lastname: '',\r\n    role: 'cashier',\r\n    password: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Edit User' })\r\n\r\n    getUser(+params.id).then((user) => setUser(user))\r\n    getBranches().then((branches) =>\r\n      branchDispatch({ type: 'ON_LOAD_BRANCHES', payload: branches })\r\n    )\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n  const onSubmit = async (user: User) => {\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n\r\n    return postImage(user?.image!, (image_url: string) => {\r\n      user.image_url = image_url\r\n      delete user.image\r\n      return updateUser(user).then(() => {\r\n        globalDispatch({\r\n          type: 'SET_ALERT',\r\n          payload: { message: 'Successfully added', type: 'success' },\r\n        })\r\n        globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n      })\r\n    })\r\n  }\r\n\r\n  const formProps: MyFormProps<User> = {\r\n    state: [user, setUser],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myControlledInput, mySelect, myButton }) => (\r\n        <>\r\n          {myControlledInput({\r\n            label: 'Username',\r\n            value: user.username,\r\n            name: 'username',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Firstname',\r\n            value: user.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Middlename',\r\n            value: user.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Lastname',\r\n            value: user.lastname,\r\n            name: 'lastname',\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Role',\r\n            value: user.role,\r\n            name: 'role',\r\n            labelWidth: 55,\r\n            options: [{ value: 'cashier', name: 'Cashier' }],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Branch',\r\n            value: user.branch,\r\n            name: 'branch',\r\n            labelWidth: 55,\r\n            options: branchState.branches.map((branch) => ({\r\n              value: branch.id,\r\n              name: branch.name,\r\n            })),\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              {currentUser?.role === 'admin' && (\r\n                <Button\r\n                  onClick={() => history.goBack()}\r\n                  fullWidth\r\n                  variant='contained'\r\n                  color='default'\r\n                >\r\n                  BACK\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\nexport default EditUser\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport validator from 'validators/editUserValidator'\r\nimport MyForm, { MyFormProps, InputProps } from 'components/common/MyForm'\r\nimport { getMe, updateAccount } from 'services/userService'\r\nimport { UserContext } from 'providers/UserProvider'\r\nimport { postImage } from 'services/imageService'\r\nimport { getBranches } from 'services/branchService'\r\nimport { BranchContext } from 'providers/BranchProvider'\r\nimport User from 'models/user'\r\nimport { getCurrentUser, saveToken } from 'utils/helper'\r\n\r\nexport interface AccountSettingsProps {}\r\n\r\nconst AccountSettings: React.SFC<AccountSettingsProps> = () => {\r\n  const [{ currentUser }, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const params = useParams<{ id: string }>()\r\n\r\n  const [branchState, branchDispatch] = useContext(BranchContext)!\r\n\r\n  const [imageFile, setImageFile] = React.useState<HTMLImageElement | null>(\r\n    null\r\n  )\r\n\r\n  const [user, setUser] = React.useState<User>({\r\n    username: '',\r\n    firstname: '',\r\n    middlename: '',\r\n    lastname: '',\r\n    role: 'cashier',\r\n    password: '',\r\n    new_password: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'SET_TITLE', payload: 'Account Settings' })\r\n\r\n    getMe().then((user) => {\r\n      setUser({ ...user, branch: user?.branch?.id })\r\n    })\r\n    getBranches().then((branches) =>\r\n      branchDispatch({ type: 'ON_LOAD_BRANCHES', payload: branches })\r\n    )\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n  const onSubmit = async (user: User) => {\r\n    globalDispatch({ type: 'SET_IS_LOADING', payload: true })\r\n\r\n    return postImage(user?.image!, (image_url: string) => {\r\n      user.image_url = image_url\r\n      delete user.image\r\n      return updateAccount(user).then(({ access_token }) => {\r\n        globalDispatch({\r\n          type: 'SET_ALERT',\r\n          payload: { message: 'Successfully updated', type: 'success' },\r\n        })\r\n        globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n        saveToken(access_token)\r\n        globalDispatch({ type: 'SET_CURRENT_USER', payload: getCurrentUser() })\r\n        window.location.href = '/dashboard'\r\n      })\r\n    }).catch(({ response }) => {\r\n      if (response.status === 401) {\r\n        globalDispatch({ type: 'SET_IS_LOADING', payload: false })\r\n        globalDispatch({\r\n          type: 'SET_ALERT',\r\n          payload: {\r\n            message: response.data.error,\r\n            type: 'error',\r\n          },\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const { role, branch, ...cashierValidator } = validator\r\n\r\n  const formProps: MyFormProps<User> = {\r\n    state: [user, setUser],\r\n    onSubmit,\r\n    validator: user.role !== 'admin' ? cashierValidator : validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myControlledInput, mySelect, myButton }) => (\r\n        <>\r\n          {myControlledInput({\r\n            label: 'Username',\r\n            value: user.username,\r\n            name: 'username',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Firstname',\r\n            value: user.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Middlename',\r\n            value: user.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'Lastname',\r\n            value: user.lastname,\r\n            name: 'lastname',\r\n          })}\r\n\r\n          {user.role === 'admin' &&\r\n            mySelect({\r\n              label: 'Role',\r\n              value: user.role,\r\n              name: 'role',\r\n              labelWidth: 55,\r\n              options: [\r\n                { value: 'cashier', name: 'Cashier' },\r\n                { value: 'admin', name: 'Admin' },\r\n              ],\r\n            })}\r\n\r\n          {user.role === 'admin' &&\r\n            mySelect({\r\n              label: 'Branch',\r\n              value: user?.branch,\r\n              name: 'branch',\r\n              labelWidth: 55,\r\n              options: branchState.branches.map((branch) => ({\r\n                value: branch.id,\r\n                name: branch.name,\r\n              })),\r\n            })}\r\n\r\n          {myControlledInput({\r\n            label: 'Current Password',\r\n            value: user.password,\r\n            name: 'password',\r\n            type: 'password',\r\n          })}\r\n          {myControlledInput({\r\n            label: 'New Password',\r\n            value: user.new_password,\r\n            name: 'new_password',\r\n            type: 'password',\r\n          })}\r\n\r\n          <Grid\r\n            container\r\n            style={{\r\n              paddingLeft: 15,\r\n              paddingRight: 15,\r\n              marginBottom: 10,\r\n            }}\r\n            alignItems='center'\r\n            justify='space-between'\r\n            xs={12}\r\n          >\r\n            <Typography variant='subtitle1'>\r\n              {imageFile?.name || 'Select Photo'}\r\n            </Typography>\r\n            <>\r\n              <input\r\n                accept='image/*'\r\n                style={{\r\n                  display: 'none',\r\n                }}\r\n                name='image'\r\n                id='icon-button-file'\r\n                type='file'\r\n                onChange={(e: any) => {\r\n                  setImageFile(e.target.files[0])\r\n                }}\r\n              />\r\n              <label htmlFor='icon-button-file'>\r\n                <IconButton\r\n                  color='primary'\r\n                  aria-label='upload picture'\r\n                  component='span'\r\n                >\r\n                  <PhotoCamera />\r\n                </IconButton>\r\n              </label>\r\n            </>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\nexport default AccountSettings\r\n","import React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\n\r\nimport Container from '@material-ui/core/Container'\r\nimport Dashboard from 'components/pages/Dashboard'\r\nimport Employees from 'components/pages/Employees'\r\nimport ViewEmployee from 'components/pages/Employees/ViewEmployee'\r\nimport NewEmployee from 'components/pages/Employees/NewEmployee'\r\nimport EditEmployee from 'components/pages/Employees/EditEmployee'\r\nimport Clients from 'components/pages/Clients'\r\nimport ViewClient from 'components/pages/Clients/ViewClient'\r\nimport NewClient from 'components/pages/Clients/NewClient'\r\nimport SignIn from 'components/pages/Auth/SignIn'\r\nimport AuthRoute from 'components/common/MyAuthRoute'\r\nimport GuestRoute from 'components/common/MyGuestRoute'\r\nimport Transaction from 'components/pages/Transactions/EncodeTransaction'\r\nimport GeneralSettings from 'components/pages/Settings/General'\r\nimport EditClient from 'components/pages/Clients/EditClient'\r\nimport PaymentHistory from 'components/pages/Payments'\r\nimport PaymentView from 'components/pages/Payments/PaymentView'\r\nimport Branches from 'components/pages/Branches'\r\nimport NewBranch from 'components/pages/Branches/NewBranch'\r\nimport EditBranch from 'components/pages/Branches/EditBranch'\r\nimport Commissions from 'components/pages/Commissions'\r\nimport ReleaseTransaction from 'components/pages/Transactions/ReleaseTransaction'\r\nimport NotFound from 'components/common/NotFound'\r\nimport Users from 'components/pages/Users'\r\nimport NewUser from 'components/pages/Users/NewUser'\r\nimport EditUser from 'components/pages/Users/EditUser'\r\nimport AccountSettings from 'components/pages/Settings/Account'\r\n\r\nconst Layout = () => {\r\n  const styles = useStyles()\r\n\r\n  return (\r\n    <Container maxWidth='xs' className={styles.container}>\r\n      <Switch>\r\n        <AuthRoute isAdmin path='/users/edit/:id' component={EditUser} />\r\n        <AuthRoute isAdmin path='/users/new' component={NewUser} />\r\n        <AuthRoute isAdmin path='/users' component={Users} />\r\n        <AuthRoute path='/commissions' component={Commissions} />\r\n        <AuthRoute\r\n          path='/transaction/releases'\r\n          component={ReleaseTransaction}\r\n        />\r\n        <AuthRoute path='/transaction/encode' component={Transaction} />\r\n        <AuthRoute isAdmin path='/branches/new' component={NewBranch} />\r\n        <AuthRoute isAdmin path='/branches/edit/:id' component={EditBranch} />\r\n        <AuthRoute isAdmin path='/branches' component={Branches} />\r\n\r\n        <AuthRoute isAdmin path='/payments/:id' component={PaymentView} />\r\n        <AuthRoute isAdmin path='/payments' component={PaymentHistory} />\r\n\r\n        <AuthRoute path='/settings/general' component={GeneralSettings} />\r\n        <AuthRoute path='/settings/account' component={AccountSettings} />\r\n\r\n        <AuthRoute path='/clients/new' component={NewClient} />\r\n        <AuthRoute isAdmin path='/clients/edit/:id' component={EditClient} />\r\n        <AuthRoute isAdmin path='/clients/:id' component={ViewClient} />\r\n        <AuthRoute isAdmin path='/clients' component={Clients} />\r\n\r\n        <AuthRoute path='/employees/new' component={NewEmployee} />\r\n        <AuthRoute\r\n          isAdmin\r\n          path='/employees/edit/:id'\r\n          component={EditEmployee}\r\n        />\r\n        <AuthRoute isAdmin path='/employees/:id' component={ViewEmployee} />\r\n        <AuthRoute isAdmin path='/employees' component={Employees} />\r\n\r\n        <AuthRoute path='/dashboard' component={Dashboard} />\r\n        <GuestRoute path='/signin' component={SignIn} />\r\n        <Route path='/not-found' component={NotFound} />\r\n        <Redirect from='/' exact to='/dashboard' />\r\n        <Redirect to='/not-found' />\r\n      </Switch>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: 20,\r\n    paddingTop: 80,\r\n    height: '100%',\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n}))\r\n\r\nexport default Layout\r\n","export default __webpack_public_path__ + \"static/media/wave.d4fbcc67.svg\";","import React, { useContext, useEffect } from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Nav from 'components/common/MyNav'\r\nimport MyAlert from 'components/common/MyAlert'\r\nimport Layout from 'components/layout'\r\nimport { ClientProvider } from 'providers/ClientProvider'\r\nimport { EmployeeProvider } from 'providers/EmployeeProvider'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport { PaymentProvider } from 'providers/PaymentProvider'\r\nimport { BranchProvider } from 'providers/BranchProvider'\r\nimport { CommissionProvider } from 'providers/CommissionProvider'\r\nimport wave from 'assets/wave.svg'\r\nimport { UserProvider } from 'providers/UserProvider'\r\n\r\nconst App: React.FC = (props) => {\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <MyAlert />\r\n      {!state.currentUser && (\r\n        <img\r\n          style={{ position: 'absolute', top: 0 }}\r\n          width='100%'\r\n          src={wave}\r\n          alt='wave logo'\r\n        />\r\n      )}\r\n      {state.currentUser && <Nav />}\r\n      <BranchProvider>\r\n        <UserProvider>\r\n          <EmployeeProvider>\r\n            <ClientProvider>\r\n              <PaymentProvider>\r\n                <CommissionProvider>\r\n                  <Layout />\r\n                </CommissionProvider>\r\n              </PaymentProvider>\r\n            </ClientProvider>\r\n          </EmployeeProvider>\r\n        </UserProvider>\r\n      </BranchProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport GlobalProvider from 'providers/GlobalProvider'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <GlobalProvider>\r\n      <App />\r\n    </GlobalProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}